{"version":3,"sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/./node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","length","splice","push","env","this","wasm","webgl","logLevelInternal","value","indexOf","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","set","Tensor","arg0","arg1","arg2","type","data","dims","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","constructor","size","dim","Number","isSafeInteger","RangeError","calculateSize","InferenceSession","handler","feeds","fetches","options","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","buffer","byteOffset","byteLength","backendHints","executionProviders","map","async","backendNames","errors","backendName","backendInfo","initialized","initializing","aborted","e","err","join","resolveBackend","startProfiling","endProfiling","_scriptDir","document","currentScript","src","t","C","W","Q","Y","n","q","r","B","U","c","z","a","G","o","u","s","ready","Promise","f","l","d","p","h","m","g","_","b","y","window","importScripts","w","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","F","readFile","argv","replace","slice","on","hn","le","ce","exitCode","exit","inspect","Worker","x","console","error","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","k","M","print","log","bind","S","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","R","j","I","P","TextDecoder","decode","H","N","subarray","String","fromCharCode","L","$","charCodeAt","V","X","J","Ut","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","Z","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","K","ee","te","ne","re","ie","ae","preRun","shift","unshift","oe","ue","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","he","1000244","me","Qc","ic","ge","Atomics","load","pn","compareExchange","notify","_e","ye","cc","uc","worker","_emscripten_futex_wake","be","fc","ec","Cc","Cd","Uc","store","en","Lt","Vc","receiveObjectTransfer","ad","threadInit","md","threadCancel","ld","threadExit","Kc","setExitStatus","cd","Bc","Hc","pop","nn","Ic","Ht","postMessage","cmd","Jc","terminate","bc","zc","dc","Gt","yc","hc","bd","dn","Xc","onmessage","Oc","targetThread","Id","transferList","Xt","Te","thread","loaded","oc","threadId","text","alert","gn","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","Lc","Rc","sd","now","ve","Date","zt","we","Le","Ae","mc","jd","ed","gd","dd","hd","Sc","tc","jc","detached","tn","start_routine","kd","arg","threadInfoStruct","stackBase","stackSize","time","rd","Oe","exchange","wait","xe","establishStackSpace","fn","un","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","ke","Me","Se","De","wd","Ce","Re","je","Ie","Fe","Pe","xd","We","Math","ceil","ln","fill","Zc","Wc","Mc","fd","Fd","flags","offset","Ye","qe","Be","yd","Ue","ze","Ge","He","Ne","arguments","sn","Jt","$e","Ve","Xe","querySelector","Je","sc","Gc","ud","Qt","rc","qc","getParameter","width","height","viewport","Qe","Ze","Ke","et","tt","nt","rt","split","it","ct","at","ot","BYTES_PER_ELEMENT","ut","minValue","maxValue","st","alpha","ft","dimensions","lt","windowDimensions","padding","strides","dilations","autoPad","layout","dt","pt","ht","mt","gt","_t","bt","yt","vt","wt","At","Tt","Ot","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","xt","forEach","Et","kt","Mt","St","Ad","zd","Dt","Ct","Rt","toTimeString","match","Nc","getFullYear","getTimezoneOffset","max","an","cn","rn","jt","It","Ft","Pt","Wt","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Yt","toString","getDay","ac","xc","pd","od","vc","pc","kc","wc","Jd","nd","qd","RegExp","substring","abs","includes","lc","$c","create","Ac","object","nc","release","qt","Bt","cb","Vt","td","$t","Zt","_a","fb","db","eb","Va","ba","apply","Za","Xa","copyWithin","hardwareConcurrency","Ya","min","grow","setTimeout","stack","Kt","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Yc","Dd","Ec","Pc","Gd","Hd","Fc","getContext","WebGLRenderingContext","Bd","attributes","version","canvas","Tc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","vd","Ed","getSupportedExtensions","Ta","devicePreference","ml","createContext","ab","bb","$a","Wa","wa","gb","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Dc","getSeconds","getMinutes","getHours","setTime","Sa","Ra","Na","add","Ma","averagePool2d","La","scale","bias","axis","epsilon","activation","batchNormalization","Ka","build","Ja","clamp","Ia","Ha","concat","Ga","constant","Fa","groups","inputLayout","filterLayout","conv2d","Ea","beta","aTranspose","bTranspose","gemm","Da","recurrentBias","initialHiddenState","resetAfter","returnSequence","direction","activations","gru","Ca","input","Ba","leakyRelu","Aa","za","matmul","ya","maxPool2d","ma","xa","relu","va","ua","mode","scales","sizes","axes","resample2d","ta","reshape","sa","sigmoid","ra","qa","pa","tanh","oa","na","permutation","transpose","Qa","compute","Pa","Oa","ka","la","resource","ia","ja","ga","ha","da","ca","fa","ea","aa","Ua","MLGraphBuilder","asm","Cb","hb","Hb","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","ib","_OrtCreateSessionOptions","jb","_OrtSessionOptionsAppendExecutionProviderWebNN","kb","_OrtAddSessionConfigEntry","lb","_OrtReleaseSessionOptions","mb","_OrtCreateSession","nb","_OrtReleaseSession","ob","_OrtGetInputCount","pb","_OrtGetOutputCount","qb","_OrtGetInputName","rb","_OrtGetOutputName","sb","_OrtFree","tb","_OrtCreateTensor","ub","_OrtGetTensorData","vb","_OrtReleaseTensor","wb","_OrtCreateRunOptions","xb","_OrtAddRunConfigEntry","yb","_OrtReleaseRunOptions","zb","_OrtRun","Ab","_OrtEndProfiling","Bb","_malloc","Db","___errno_location","Eb","_free","Fb","_pthread_self","Gb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","Ib","Nt","_emscripten_register_main_browser_thread_id","Jb","_emscripten_main_browser_thread_id","Kb","_emscripten_sync_run_in_main_thread_4","Lb","_emscripten_main_thread_process_queued_calls","Mb","_emscripten_run_in_main_runtime_thread_js","Nb","__emscripten_call_on_thread","Ob","_pthread_testcancel","Pb","_pthread_exit","Qb","__emscripten_thread_init","Rb","_emscripten_get_global_libc","Sb","___pthread_tsd_run_dtors","Tb","__get_tzname","Ub","__get_daylight","Vb","__get_timezone","Wb","stackSave","Xb","stackRestore","Yb","stackAlloc","Zb","_emscripten_stack_set_limits","_b","_memalign","$b","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","mn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","preInit","ortWasm","ctx","params","index","pending","reject","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","fromObject","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","onnxjsBackend","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","initializeFlags","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","wasmBackend","initWasm","promisify","OnnxruntimeWebAssemblySessionHandler","AttributeWithCacheKeyImpl","assign","_cacheKey","sort","createAttributeWithCacheKey","ortFbs","onnxruntime","experimental","fbs","Attribute","_attributes","attr","getValue","getType","delete","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","initialize","dispose","isBackend","WebGLBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","CoordsGlslLib","GlslLib","super","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","packedSampler","valuesPerRow","squeezedShape","keptDims","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","newShape","squeezeShape","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","FunctionType","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","EncodingGlslLib","encodeFloat32","decodeFloat32","endianness","FragColorGlslLib","setFragColor","getColorAsFloat","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","GlslContext","glslRegistry","lib","libName","routinesInLib","getFunctions","currentNode","GlslLibRoutineNode","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","TopologicalSortGlslRoutines","returnOrderedNodes","samplers","uniformLines","sampler","arrayLength","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","textureType","calculateTextureWidthAndHeight","layoutStrategy","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","executeProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","group","channels","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","reshapePacked","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","getFloat","momentum","spatial","getInt","scaleWidth","scaleHeight","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","metadata","inputCount","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","kernelShape","pads","calculateOutputShape","activationFunction","applyActivation","getActicationSnippet","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","reshapeUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","getString","getInts","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","getFloats","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","reversedInputWH","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","kw","sw","pwStart","pwEnd","dimW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","padCode","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getReshapedInputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","isCheapReshape","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","GlslPreprocessor","fragScript","preprocess","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","PreferLogicalStrategy","maxTextureSize","ProgramManager","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","WebGLInferenceHandler","initializers","getValues","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","dest","ALPHA","UNSIGNED_BYTE","_textureSize","isEmptyArray","parseAxisParam","assert","ax","isInt","sizeFromShape","sizeToSquarishShape","prefs","breakAxis","wsize","hsize","totalSize","wh","computeTexture","logShape","squeezeResult","dimsToSkip","computeTextureWH","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","subscribers","createAndWaitForFence","tensorData","deleteTexture","_dataType","checkFn","delayFn","_counter","maxCounter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","RedFloat32DataEncoder","isRenderFloat32Supported","RGBAFloatDataEncoder","textureHalfFloatExtension","HALF_FLOAT_OES","Uint8DataEncoder","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","geometry","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","timeElapsed","QUERY_RESULT","deleteQuery","repeatedTry","isTimerResultAvailable","getTimerResult","fenceContext","createFence","pollFence","isFencePassed","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","isDoneFn","resolveFn","pollItems","KernelOp","getNodes","_ops","_starter","resolved","_values","getInputIndices","sessionHandler","modelInputs","createInferenceHandler","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","to","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","Graph","graphProto","GraphImpl","Value","_from","_to","ProtoUtil","tensorValueTypeFromProto","Node","_nodeProto","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","deleteNode","isActivation","child","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","_severity","_content","_category","severity","content","category","color","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","logInternal","toISOString","previousConfig","logLevel","Event","startTime","endCallback","timer","endTimer","waitForQueryAndGetTime","EventRecord","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","isPromise","reason","eventRes","endSync","beginTimer","checkTimer","toFixed","currentTime","previousPointer","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","Shape","__init","builder","numElems","startShape","addDim","endShape","DimensionValue","optionalEncoding","valueOffset","denotationOffset","startDimension","addValue","addDenotation","endDimension","UNKNOWN","dimType","dimParamOffset","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","UNDEFINED","shapeOffset","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","MapType","TypeInfo","keyType","valueTypeOffset","startMapType","addKeyType","addValueType","endMapType","SequenceType","elemTypeOffset","startSequenceType","endSequenceType","EdgeEnd","node_index","src_arg_index","dst_arg_index","NodeEdge","inputEdgesOffset","outputEdgesOffset","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","Primitive","nameOffset","docStringOffset","domainOffset","sinceVersion","opTypeOffset","executionProviderTypeOffset","inputsOffset","outputsOffset","attributesOffset","inputArgCountsOffset","implicitInputsOffset","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","ValueInfo","typeOffset","startValueInfo","endValueInfo","NONE","startTypeInfo","endTypeInfo","OperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","dimsOffset","rawDataOffset","stringDataOffset","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","SparseTensor","valuesOffset","indicesOffset","startSparseTensor","addValues","addIndices","endSparseTensor","sOffset","tOffset","gOffset","floatsOffset","intsOffset","stringsOffset","tensorsOffset","graphsOffset","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","initializersOffset","nodeArgsOffset","nodesOffset","maxNodeIndex","nodeEdgesOffset","sparseInitializersOffset","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","Model","opsetImportOffset","producerNameOffset","producerVersionOffset","graphOffset","graphDocStringOffset","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","KernelCreateInfos","nodeIndicesOffset","kernelDefHashesOffset","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","SubGraphSessionState","SessionState","graphIdOffset","sessionStateOffset","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","kernelsOffset","subGraphSessionStatesOffset","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","ortVersionOffset","modelOffset","startInferenceSession","addOrtVersion","addModel","endInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","Profiler","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","stop","isView","modelProtoBlob","onGraphInitialized","initializeOps","_executionPlan","ExecutionPlan","normalizeAndValidateInputs","outputTensors","execute","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","indices","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","ortTensor","stringDataLength","rawDataArray","rawDataLength","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","MatMulUtil","dimsA","dimsB","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","rest","valA","valB","isAScalar","isBScalar","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","isValidBroadcast","typeProto","dimsLength","getSizeFromDimensionRange","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","determineSplit","numElementsAlongAxis","ReduceUtil","keepdims","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort.es6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority.\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.backend === backend) {\n            return;\n        }\n        else {\n            throw new Error(`backend \"${name}\" is already registered`);\n        }\n        for (let i = 0; i < backendsSortedByPriority.length; i++) {\n            if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                backendsSortedByPriority.splice(i, 0, name);\n                return;\n            }\n        }\n        backendsSortedByPriority.push(name);\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.initializing) {\n                throw new Error(`backend \"${backendName}\" is being initialized; cannot initialize multiple times.`);\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            try {\n                backendInfo.initializing = true;\n                await backendInfo.backend.init();\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                errors.push({ name: backendName, err: e });\n                backendInfo.aborted = true;\n            }\n            finally {\n                backendInfo.initializing = false;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    //#endregion\n    //#region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return C.buffer!=W&&Q(C.buffer),Y}function n(){return C.buffer!=W&&Q(C.buffer),q}function r(){return C.buffer!=W&&Q(C.buffer),B}function i(){return C.buffer!=W&&Q(C.buffer),U}function c(){return C.buffer!=W&&Q(C.buffer),z}function a(){return C.buffer!=W&&Q(C.buffer),G}var o,u,s;e=e||{},o||(o=void 0!==e?e:{}),o.ready=new Promise((function(e,t){u=e,s=t}));var f,l={};for(f in o)o.hasOwnProperty(f)&&(l[f]=o[f]);var d=\"./this.program\";function p(e,t){throw t}var h,m,g,_,b,y=\"object\"==typeof window,v=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=o.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(e){return o.locateFile?o.locateFile(e,T):T+e}if(w){if(T=v?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",h=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),F(e.buffer),e},m=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof hn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(ce())throw process.exitCode=e,t;process.exit(e)},o.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||v)&&(v?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.lastIndexOf(\"/\")+1):\"\",w?(h=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),F(e.buffer),e},m=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},v&&(g=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,k,M=o.print||console.log.bind(console),S=o.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(o[f]=l[f]);l=null,o.thisProgram&&(d=o.thisProgram),o.quit&&(p=o.quit),o.wasmBinary&&(k=o.wasmBinary);var D=o.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var C,R,j,I=!1;function F(e,t){e||le(\"Assertion failed: \"+t)}function P(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,Y,q,B,U,z,G,H=\"undefined\"!=typeof TextDecoder?new P(\"utf8\"):void 0;function N(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&H)return H.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var c=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|c);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|c<<6|a:(7&i)<<18|c<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?N(n(),e,t):\"\"}function $(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var c=0;c<e.length;++c){var a=e.charCodeAt(c);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++c)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function V(e,t,r){return $(e,n(),t,r)}function X(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function J(e){var n=X(e)+1,r=Ut(n);return r&&$(e,t(),r,n),r}function Q(e){W=e,o.HEAP8=Y=new Int8Array(e),o.HEAP16=new Int16Array(e),o.HEAP32=B=new Int32Array(e),o.HEAPU8=q=new Uint8Array(e),o.HEAPU16=new Uint16Array(e),o.HEAPU32=U=new Uint32Array(e),o.HEAPF32=z=new Float32Array(e),o.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new P(\"utf-16le\"),A&&(W=o.buffer);var Z=o.INITIAL_MEMORY||16777216;if(A)C=o.wasmMemory,W=o.buffer;else if(o.wasmMemory)C=o.wasmMemory;else if(!((C=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw S(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");C&&(W=C.buffer),Z=W.byteLength,Q(W);var K,ee=[],te=[],ne=[],re=[],ie=0;function ce(){return D||0<ie}function ae(){var e=o.preRun.shift();ee.unshift(e)}var oe,ue=0,se=null,fe=null;function le(e){throw o.onAbort&&o.onAbort(e),F(!A),S(e),I=!0,j=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return oe.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=oe;try{if(e==oe&&k)return new Uint8Array(k);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}o.preloadedImages={},o.preloadedAudios={},oe=\"ort-wasm-threaded.wasm\",de()||(oe=O(oe));var he={1000244:function(){throw\"Canceled!\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(o);else{var n=t.Qc;\"number\"==typeof n?void 0===t.ic?K.get(n)():K.get(n)(t.ic):n(void 0===t.ic?null:t.ic)}}}function ge(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),pn>>2),c=0;if(i==e&&Atomics.compareExchange(r(),pn>>2,i,0)==i&&(c=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+c;throw\"Atomics.notify returned an unexpected value \"+e}function _e(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.cc[e];t&&(r()[e+12>>2]=0,ye.uc(t.worker))}o._emscripten_futex_wake=ge;var be,ye={fc:[],ec:[],Cc:[],Cd:function(){},Uc:function(){for(var e=Ut(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ut(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),en(e,!v,1),Lt(e)},Vc:function(){ye.receiveObjectTransfer=ye.ad,ye.threadInit=ye.md,ye.threadCancel=ye.ld,ye.threadExit=ye.Kc,ye.setExitStatus=ye.cd},cc:{},Bc:[],Hc:function(){for(;0<ye.Bc.length;)ye.Bc.pop()();nn()},Ic:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.Hc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ge(e+0,2147483647),en(0,0,0)},cd:function(e){j=e},Kc:function(e){var t=Ht();t&&(ye.Ic(t,e),A&&postMessage({cmd:\"exit\"}))},ld:function(){ye.Ic(Ht(),-1),postMessage({cmd:\"cancelDone\"})},Jc:function(){for(var e in ye.cc){var t=ye.cc[e];t&&t.worker&&ye.uc(t.worker)}for(ye.cc={},e=0;e<ye.fc.length;++e){var n=ye.fc[e];n.terminate()}for(ye.fc=[],e=0;e<ye.ec.length;++e)t=(n=ye.ec[e]).bc,ye.zc(t),n.terminate();ye.ec=[]},zc:function(e){if(e){if(e.dc){var t=r()[e.dc+100>>2];r()[e.dc+100>>2]=0,Gt(t),Gt(e.dc)}e.dc=0,e.yc&&e.hc&&Gt(e.hc),e.hc=0,e.worker&&(e.worker.bc=null)}},uc:function(e){ye.bd((function(){delete ye.cc[e.bc.dc],ye.fc.push(e),ye.ec.splice(ye.ec.indexOf(e),1),ye.zc(e.bc),e.bc=void 0}))},bd:function(e){r()[dn>>2]=0;try{e()}finally{r()[dn>>2]=1}},ad:function(){},md:function(){for(var e in ye.Cc)ye.Cc[e]()},Xc:function(e,t){e.onmessage=function(n){var c=n.data,a=c.cmd;if(e.bc&&(ye.Oc=e.bc.dc),c.targetThread&&c.targetThread!=Ht()){var o=ye.cc[c.Id];o?o.worker.postMessage(n.data,c.transferList):S('Internal error! Worker sent a message \"'+a+'\" to target pthread '+c.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Xt();else if(\"spawnThread\"===a)Te(n.data);else if(\"cleanupThread\"===a)_e(c.thread);else if(\"killThread\"===a){if(n=c.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,c=ye.cc[n],delete ye.cc[n],c.worker.terminate(),ye.zc(c),ye.ec.splice(ye.ec.indexOf(c.worker),1),c.worker.bc=void 0}else if(\"cancelThread\"===a){if(n=c.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.cc[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.oc&&(e.oc(),delete e.oc);else if(\"print\"===a)M(\"Thread \"+c.threadId+\": \"+c.text);else if(\"printErr\"===a)S(\"Thread \"+c.threadId+\": \"+c.text);else if(\"alert\"===a)alert(\"Thread \"+c.threadId+\": \"+c.text);else if(\"exit\"===a)e.bc&&Atomics.load(i(),e.bc.dc+64>>2)&&ye.uc(e);else if(\"exitProcess\"===a)try{gn(c.returnCode)}catch(e){if(e instanceof hn)return;throw e}else\"cancelDone\"===a?ye.uc(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):S(\"worker sent an unknown command \"+a));ye.Oc=void 0},e.onerror=function(e){S(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},w&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:o.mainScriptUrlOrBlob||_scriptDir,wasmMemory:C,wasmModule:R})},Lc:function(){var e=O(\"ort-wasm-threaded.worker.js\");ye.fc.push(new Worker(e))},Rc:function(){return 0==ye.fc.length&&(ye.Lc(),ye.Xc(ye.fc[0])),ye.fc.pop()},sd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function ve(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[zt()>>2]=28,-1;e=be()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function we(e,t){if(A)return Le(1,1,e,t);ne.unshift({Qc:e,ic:t})}function Ae(e){this.mc=e-16,this.jd=function(e){r()[this.mc+4>>2]=e},this.ed=function(e){r()[this.mc+8>>2]=e},this.gd=function(){r()[this.mc>>2]=0},this.dd=function(){t()[this.mc+12>>0]=0},this.hd=function(){t()[this.mc+13>>0]=0},this.Sc=function(e,t){this.jd(e),this.ed(t),this.gd(),this.dd(),this.hd()}}function Te(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Rc();if(!t)return 6;if(void 0!==t.bc)throw\"Internal error!\";if(!e.tc)throw\"Internal error, no pthread ptr!\";ye.ec.push(t);for(var n=Ut(512),c=0;128>c;++c)r()[n+4*c>>2]=0;var a=e.hc+e.jc,o=(c=ye.cc[e.tc]={worker:t,hc:e.hc,jc:e.jc,yc:e.yc,dc:e.tc}).dc>>2;Atomics.store(i(),o+16,e.detached),Atomics.store(i(),o+25,n),Atomics.store(i(),o+10,c.dc),Atomics.store(i(),o+20,e.jc),Atomics.store(i(),o+19,a),Atomics.store(i(),o+26,e.jc),Atomics.store(i(),o+28,a),Atomics.store(i(),o+29,e.detached),n=tn()+40,Atomics.store(i(),o+43,n),t.bc=c;var u={cmd:\"run\",start_routine:e.kd,arg:e.ic,threadInfoStruct:e.tc,stackBase:e.hc,stackSize:e.jc};return t.oc=function(){u.time=performance.now(),t.postMessage(u,e.rd)},t.loaded&&(t.oc(),delete t.oc),0}function Oe(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var c=performance.now();for(i=c+i,Atomics.exchange(r(),pn>>2,e);;){if((c=performance.now())>i)return Atomics.exchange(r(),pn>>2,0),-73;if(0==(c=Atomics.exchange(r(),pn>>2,0)))break;if(Xt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),pn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){w||v||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,S(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}o.establishStackSpace=function(e,t){fn(e,t),un(e)},o.invokeEntryPoint=function(e,t){return K.get(e)(t)},be=w?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-o.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},ke=[null,[],[]];function Me(e,t){var n=ke[e];0===t||10===t?((1===e?M:S)(N(n,0)),n.length=0):n.push(t)}var Se={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),Se.wd(e,t))}function Ce(e,t,n){return A?Le(3,1,e,t,n):0}function Re(e,t){if(A)return Le(4,1,e,t)}function je(e,t,n){if(A)return Le(5,1,e,t,n)}function Ie(e,t,n){return A?Le(6,1,e,t,n):0}function Fe(e,t){if(A)return Le(7,1,e,t)}function Pe(e,t){return A?Le(8,1,e,t):(e=L(e),Se.xd(e,t))}function We(e,t,r,i,c,a){if(A)t=Le(9,1,e,t,r,i,c,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var o=65536*Math.ceil(t/65536);(e=ln(65536,o))?n().fill(0,e,e+o):e=0,e?(Ee[e]={Zc:e,Wc:t,Mc:!0,fd:c,Fd:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function Ye(e,t){if(A)e=Le(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Wc&&(Ee[e]=null,n.Mc&&Gt(n.Zc)),e=0):e=-28}return e}function qe(e,t,n){if(A)return Le(11,1,e,t,n)}function Be(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),Se.yd(e,t,n))}function Ue(e){if(A)return Le(13,1,e)}function ze(e,t){if(A)return Le(14,1,e,t)}function Ge(e){if(A)return Le(15,1,e)}function He(){if(A)return Le(16,1);le()}var Ne=[];function Le(e,t){for(var n=arguments.length-2,r=on(),i=sn(8*n),c=i>>3,o=0;o<n;o++){var u=arguments[2+o];a()[c+o]=u}return n=Jt(e,n,i,t),un(r),n}var $e=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Xe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Je(e,t,n){var i=Xe(e);if(!i)return-4;if(i.sc&&(r()[i.sc>>2]=t,r()[i.sc+4>>2]=n),!i.Gc&&i.ud){if(i.sc){i=r()[i.sc+8>>2],e=e?L(e):\"\";var c=on(),a=sn(12),o=0;if(e){o=X(e)+1;var u=Ut(o);V(e,u,o),o=u}return r()[a>>2]=o,r()[a+4>>2]=t,r()[a+8>>2]=n,Qt(0,i,657457152,0,o,a),un(c),1}return-4}return i.Gc&&(i=i.Gc),e=!1,i.rc&&i.rc.qc&&(e=0===(e=i.rc.qc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.rc.qc.viewport(0,0,t,n),0}function Qe(e,t,n){return A?Le(17,1,e,t,n):Je(e,t,n)}var Ze=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=[\"nearest-neighbor\",\"linear\"],rt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),it=[\"forward\",\"backward\",\"both\"],ct=[\"zrn\",\"rzn\"];function at(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function ot(e,t=\"float32\"){const c=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],F(\"float32\"===t),new Float32Array(n().buffer,c,e/Float32Array.BYTES_PER_ELEMENT)}function ut(e){return{minValue:c()[e>>2],maxValue:c()[e+4>>2]}}function st(e){return{alpha:c()[e>>2]}}function ft(e){return{type:rt[i()[e>>2]],dimensions:at(i()[e+8>>2],r()[e+4>>2])}}function lt(e){return{windowDimensions:at(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?at(i()[e+8>>2],r()[e+12>>2]):void 0,strides:at(i()[e+16>>2],r()[e+20>>2]),dilations:at(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var dt,pt,ht,mt,gt,_t,bt,yt,vt,wt,At,Tt={};function Ot(){if(!At){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in Tt)void 0===Tt[e]?delete t[e]:t[e]=Tt[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);At=n}return At}function xt(e,n){if(A)return Le(18,1,e,n);var i=0;return Ot().forEach((function(c,a){var o=n+i;for(a=r()[e+4*a>>2]=o,o=0;o<c.length;++o)t()[a++>>0]=c.charCodeAt(o);t()[a>>0]=0,i+=c.length+1})),0}function Et(e,t){if(A)return Le(19,1,e,t);var n=Ot();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function kt(e){return A?Le(20,1,e):0}function Mt(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function St(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=Se.Ad(e),t=Se.zd(e,t,n),r()[i>>2]=t,0)}function Dt(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function Ct(e,t,i,c){if(A)return Le(24,1,e,t,i,c);for(var a=0,o=0;o<i;o++){for(var u=r()[t+8*o>>2],s=r()[t+(8*o+4)>>2],f=0;f<s;f++)Me(e,n()[u+f]);a+=s}return r()[c>>2]=a,0}function Rt(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!Rt.Nc){Rt.Nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var c=i.getTimezoneOffset(),a=Math.max(t,c);r()[an()>>2]=60*a,r()[cn()>>2]=Number(t!=c),n=e(n),i=e(i),n=J(n),i=J(i),c<t?(r()[rn()>>2]=n,r()[rn()+4>>2]=i):(r()[rn()>>2]=i,r()[rn()+4>>2]=n)}}function jt(e){return 0==e%4&&(0!=e%100||0==e%400)}function It(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ft=[31,29,31,30,31,30,31,31,30,31,30,31],Pt=[31,28,31,30,31,30,31,31,30,31,30,31];function Wt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(jt(e.getFullYear())?Ft:Pt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Yt(e,n,i,c){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\"0\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Wt(new Date(e.ac+1900,0,1),e.xc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=u(n,e)?0>=u(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[c+40>>2];for(var d in c={pd:r()[c>>2],od:r()[c+4>>2],vc:r()[c+8>>2],pc:r()[c+12>>2],kc:r()[c+16>>2],ac:r()[c+20>>2],wc:r()[c+24>>2],xc:r()[c+28>>2],Jd:r()[c+32>>2],nd:r()[c+36>>2],qd:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),h=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.wc].substring(0,3)},\"%A\":function(e){return p[e.wc]},\"%b\":function(e){return h[e.kc].substring(0,3)},\"%B\":function(e){return h[e.kc]},\"%C\":function(e){return o((e.ac+1900)/100|0,2)},\"%d\":function(e){return o(e.pc,2)},\"%e\":function(e){return a(e.pc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return o(e.vc,2)},\"%I\":function(e){return 0==(e=e.vc)?e=12:12<e&&(e-=12),o(e,2)},\"%j\":function(e){return o(e.pc+It(jt(e.ac+1900)?Ft:Pt,e.kc-1),3)},\"%m\":function(e){return o(e.kc+1,2)},\"%M\":function(e){return o(e.od,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.vc&&12>e.vc?\"AM\":\"PM\"},\"%S\":function(e){return o(e.pd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.wc||7},\"%U\":function(e){var t=new Date(e.ac+1900,0,1),n=0===t.getDay()?t:Wt(t,7-t.getDay());return 0>u(n,e=new Date(e.ac+1900,e.kc,e.pc))?o(Math.ceil((31-n.getDate()+(It(jt(e.getFullYear())?Ft:Pt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.ac+1901,0,4),n=s(new Date(e.ac+1900,0,4));t=s(t);var r=Wt(new Date(e.ac+1900,0,1),e.xc);return 0>u(r,n)?\"53\":0>=u(t,r)?\"01\":o(Math.ceil((n.getFullYear()<e.ac+1900?e.xc+32-n.getDate():e.xc+1-n.getDate())/7),2)},\"%w\":function(e){return e.wc},\"%W\":function(e){var t=new Date(e.ac,0,1),n=1===t.getDay()?t:Wt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>u(n,e=new Date(e.ac+1900,e.kc,e.pc))?o(Math.ceil((31-n.getDate()+(It(jt(e.getFullYear())?Ft:Pt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.ac+1900).toString().substring(2)},\"%Y\":function(e){return e.ac+1900},\"%z\":function(e){var t=0<=(e=e.nd);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.qd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](c)));return(d=function(e){var t=Array(X(e)+1);return $(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}dt||(dt=dt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},pt=pt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},ht=ht||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},mt=mt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},gt=gt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},_t=_t||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},bt=bt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},yt=yt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},vt=vt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},wt=wt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}});var qt=[null,we,De,Ce,Re,je,Ie,Fe,Pe,We,Ye,qe,Be,Ue,ze,Ge,He,Qe,xt,Et,kt,Mt,St,Dt,Ct,Rt],Bt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},cb:function(e,t){return ve(e,t)},b:function(e){return Ut(e+16)+16},d:function(e,t){return we(e,t)},e:function(e,t){ye.Bc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Sc(t,n),e},J:function(e,t,n,c){if(\"undefined\"==typeof SharedArrayBuffer)return S(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return S(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Vt(687865856,e,t,n,c);var o=0,u=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,o=r()[t+8>>2],u=0!==r()[t+12>>2]}else s=2097152;(t=0==o)?o=ln(16,s):F(0<(o-=s));for(var f=Ut(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={hc:o,jc:s,yc:t,detached:u,kd:n,tc:f,ic:c,rd:a},A?(n.td=\"spawnThread\",postMessage(n,a),0):Te(n)},H:function(e){throw A?ye.Kc(e):(ye.Hc(),gn(e)),\"unwind\"},I:function(e,t){return function(e,t){if(!e)return S(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Ht()==e)return S(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&$t()==e)return S(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return S(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return S(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):_e(e),0;Zt(),A||Xt(),Oe(e+0,n,A?100:1)}}(e,t)},A:De,y:Ce,D:Re,z:je,s:function(){return 42},_a:Ie,B:Fe,E:Pe,G:We,F:Ye,q:qe,fb:Be,db:Ue,t:ze,eb:Ge,Q:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.cc[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:He,w:ve,Va:function(e,t){return e-t},S:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},N:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},R:function(e,t,i){var c;for(Ne.length=0,i>>=2;c=n()[t++];)(c=105>c)&&1&i&&i++,Ne.push(c?a()[i++>>1]:r()[i]),++i;return he[e].apply(null,Ne)},Za:xe,n:function(){},k:Oe,j:ge,C:function(){return 2147483648},i:be,Xa:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},M:function(e,t,n){$e.length=t,n>>=3;for(var r=0;r<t;r++)$e[r]=a()[n+r];return(0>e?he[-e-1]:qt[e]).apply(null,$e)},Ya:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{C.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),Q(C.buffer);var c=1;break e}catch(e){}c=void 0}if(c)return!0}return!1},O:function(e,t,n){return Xe(e)?Je(e,t,n):Qe(e,t,n)},v:function(){},L:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!I){try{e()}catch(e){if(e instanceof hn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&S(\"exception thrown: \"+[e,e.stack]),e}if(!ce())try{A?Kt(j):gn(j)}catch(e){if(!(e instanceof hn))throw e}}}((function(){K.get(e)(n)}))}),t)},P:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Ze[n],failIfMajorPerformanceCaveat:!!r()[t+7],Yc:r()[t+8],Dd:r()[t+9],Ec:r()[t+10],Pc:r()[t+11],Gd:r()[t+12],Hd:r()[t+13]},!(e=Xe(e))||t.Pc?0:function(e,t){e.Fc||(e.Fc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.Fc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ut(8);r()[n+4>>2]=Ht();var i={Bd:n,attributes:t,version:t.Yc,qc:e};return e.canvas&&(e.canvas.rc=i),(void 0===t.Ec||t.Ec)&&function(e){if(e||(e=void 0),!e.Tc){e.Tc=!0;var t=e.qc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,c){t.drawElementsInstancedANGLE(e,n,r,i,c)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.vd=t.getExtension(\"EXT_disjoint_timer_query\"),t.Ed=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),dt.create(navigator.ml.createContext(t))},ab:xt,bb:Et,l:kt,$a:Mt,r:St,Wa:Dt,p:Ct,wa:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},gb:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.Dc||(e.Dc=J(\"GMT\")),r()[n+40>>2]=e.Dc,n},K:function(){ye.Uc()},u:function(e,t){Rt(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[rn()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:C||o.wasmMemory,x:function(e){Rt();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),c=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=c.getTimezoneOffset(),u=Math.min(o,a);return 0>n?r()[e+32>>2]=Number(a!=o&&u==i):0<n!=(u==i)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-c.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){dt.nc(e)},Ra:function(e){dt.release(e)},Na:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=bt.get(n),n=e.add(t,n),bt.create(n)},Ma:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=lt(n),n=e.averagePool2d(t,n),bt.create(n)},La:function(e,t,n,i,a){return e=ht.get(e),t=bt.get(t),n=bt.get(n),i=bt.get(i),a={scale:bt.get(r()[a>>2]),bias:bt.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:c()[a+12>>2],activation:vt.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),bt.create(a)},Ka:function(e,t){e=ht.get(e),t=_t.get(t);try{var n=e.build(t);return pt.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ja:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=ut(n),n=e.clamp(t,n),bt.create(n)},Ia:function(e,t){return e=ht.get(e),t=ut(t),t=e.clamp(t),vt.create(t)},Ha:function(e,t,n,r){e=ht.get(e),t=at(t,n),n=[];for(var i=0;i<t.length;++i)n.push(bt.get(t[i]));return r=e.concat(n,r),bt.create(r)},Ga:function(e,t,n){return e=ht.get(e),n=ot(n,(t=ft(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),bt.create(n)},Fa:function(e,t,n,c){return e=ht.get(e),t=bt.get(t),n=bt.get(n),c={padding:\"explicit\"===Ke[r()[c+40>>2]]?at(i()[c>>2],r()[c+4>>2]):void 0,strides:at(i()[c+8>>2],r()[c+12>>2]),dilations:at(i()[c+16>>2],r()[c+20>>2]),autoPad:Ke[r()[c+40>>2]],groups:r()[c+48>>2],inputLayout:tt[r()[c+52>>2]],filterLayout:et[r()[c+56>>2]],bias:bt.get(r()[c+60>>2]),activation:vt.get(r()[c+64>>2])},c=e.conv2d(t,n,c),bt.create(c)},Ea:function(e,n,i,a){return e=ht.get(e),n=bt.get(n),i=bt.get(i),a={c:bt.get(r()[a>>2]),alpha:c()[a+4>>2],beta:c()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),bt.create(a)},Da:function(e,n,i,c,a,o,u){return e=ht.get(e),n=bt.get(n),i=bt.get(i),c=bt.get(c),u={bias:bt.get(r()[u>>2]),recurrentBias:bt.get(r()[u+4>>2]),initialHiddenState:bt.get(r()[u+8>>2]),resetAfter:0!==t()[u+12>>0],returnSequence:0!==t()[u+13>>0],direction:it[r()[u+16>>2]],layout:ct[r()[u+20>>2]],activations:wt.get(r()[u+24>>2])},a=e.gru(n,i,c,a,o,u),yt.create(a)},Ca:function(e,t,n){return e=ht.get(e),t=L(t),n=ft(n),n=e.input(t,n),bt.create(n)},Ba:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=st(n),n=e.leakyRelu(t,n),bt.create(n)},Aa:function(e,t){return e=ht.get(e),t=st(t),t=e.leakyRelu(t),vt.create(t)},za:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=bt.get(n),n=e.matmul(t,n),bt.create(n)},ya:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=lt(n),n=e.maxPool2d(t,n),bt.create(n)},ma:function(e){ht.release(e)},xa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.relu(t),bt.create(t)},va:function(e){return e=ht.get(e).relu(),vt.create(e)},ua:function(e,t,n){e=ht.get(e),t=bt.get(t);var a=nt[r()[n>>2]],o=i()[n+4>>2],u=r()[n+8>>2];if(0!==o&&0!==u){for(var s=[],f=0;f<o;++f,u+=4)s.push(c()[u>>2]);o=s}else o=void 0;return n={mode:a,scales:o,sizes:at(i()[n+12>>2],r()[n+16>>2]),axes:at(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),bt.create(n)},ta:function(e,t,n,r){return e=ht.get(e),t=bt.get(t),n=at(r,n),n=e.reshape(t,n),bt.create(n)},sa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.sigmoid(t),bt.create(t)},ra:function(e){return e=ht.get(e).sigmoid(),vt.create(e)},qa:function(e,t,n,c,a){if(e=ht.get(e),t=bt.get(t),0!==c&&0!==n){for(var o=[],u=0;u<c;++u,n+=4)o.push(i()[n>>2]);n=o}else n=void 0;return 1==c&&(n=n[0]),c={axis:r()[a>>2]},c=e.split(t,n,c),yt.create(c)},pa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.tanh(t),bt.create(t)},oa:function(e){return e=ht.get(e).tanh(),vt.create(e)},na:function(e,t,n){return e=ht.get(e),t=bt.get(t),n={permutation:at(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),bt.create(n)},Qa:function(e,t,n){return e=pt.get(e),t=mt.get(t),n=gt.get(n),e.compute(t,n)},Pa:function(e){pt.nc(e)},Oa:function(e){pt.release(e)},ka:function(e){mt.release(e)},la:function(e,t,n){e=mt.get(e),t=L(t),n=0===r()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:at(i()[n+16>>2],r()[n+12>>2])},e[t]=n},ia:function(e){_t.release(e)},ja:function(e,t,n){e=_t.get(e),t=L(t),n=bt.get(n),e[t]=n},ga:function(e){gt.release(e)},ha:function(e,t,n){e=gt.get(e),t=L(t),n=ot(n),e[t]=n},da:function(e,t){return e=yt.get(e)[t],bt.create(e)},ca:function(e){yt.release(e)},fa:function(e){bt.nc(e)},ea:function(e){bt.release(e)},Z:function(e){wt.nc(e)},Y:function(e){wt.release(e)},_:function(e,t){e=wt.get(e),t=vt.get(t),e.push(t)},aa:function(e){vt.nc(e)},$:function(e){vt.release(e)},Ua:Yt,g:function(e,t,n,r){return Yt(e,t,n,r)},X:function(e){return e=dt.get(e),e=new MLGraphBuilder(e),ht.create(e)},W:function(){return mt.create({})},V:function(){return _t.create({})},U:function(){return gt.create({})},T:function(){return wt.create([])}};!function(){function e(e,t){o.asm=e.exports,K=o.asm.Cb,te.unshift(o.asm.hb),ye.Cc.push(o.asm.Hb),R=t,A||(ue--,o.monitorRunDependencies&&o.monitorRunDependencies(ue),0==ue&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!k&&(y||v)){if(\"function\"==typeof fetch&&!oe.startsWith(\"file://\"))return fetch(oe,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+oe+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(m)return new Promise((function(e,t){m(oe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){S(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Bt};if(A||(ue++,o.monitorRunDependencies&&o.monitorRunDependencies(ue)),o.instantiateWasm)try{return o.instantiateWasm(r,e)}catch(e){return S(\"Module.instantiateWasm callback failed with error: \"+e),!1}(k||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||oe.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(oe,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return S(\"wasm streaming compile failed: \"+e),S(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.hb).apply(null,arguments)},o._OrtInit=function(){return(o._OrtInit=o.asm.ib).apply(null,arguments)},o._OrtCreateSessionOptions=function(){return(o._OrtCreateSessionOptions=o.asm.jb).apply(null,arguments)},o._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(o._OrtSessionOptionsAppendExecutionProviderWebNN=o.asm.kb).apply(null,arguments)},o._OrtAddSessionConfigEntry=function(){return(o._OrtAddSessionConfigEntry=o.asm.lb).apply(null,arguments)},o._OrtReleaseSessionOptions=function(){return(o._OrtReleaseSessionOptions=o.asm.mb).apply(null,arguments)},o._OrtCreateSession=function(){return(o._OrtCreateSession=o.asm.nb).apply(null,arguments)},o._OrtReleaseSession=function(){return(o._OrtReleaseSession=o.asm.ob).apply(null,arguments)},o._OrtGetInputCount=function(){return(o._OrtGetInputCount=o.asm.pb).apply(null,arguments)},o._OrtGetOutputCount=function(){return(o._OrtGetOutputCount=o.asm.qb).apply(null,arguments)},o._OrtGetInputName=function(){return(o._OrtGetInputName=o.asm.rb).apply(null,arguments)},o._OrtGetOutputName=function(){return(o._OrtGetOutputName=o.asm.sb).apply(null,arguments)},o._OrtFree=function(){return(o._OrtFree=o.asm.tb).apply(null,arguments)},o._OrtCreateTensor=function(){return(o._OrtCreateTensor=o.asm.ub).apply(null,arguments)},o._OrtGetTensorData=function(){return(o._OrtGetTensorData=o.asm.vb).apply(null,arguments)},o._OrtReleaseTensor=function(){return(o._OrtReleaseTensor=o.asm.wb).apply(null,arguments)},o._OrtCreateRunOptions=function(){return(o._OrtCreateRunOptions=o.asm.xb).apply(null,arguments)},o._OrtAddRunConfigEntry=function(){return(o._OrtAddRunConfigEntry=o.asm.yb).apply(null,arguments)},o._OrtReleaseRunOptions=function(){return(o._OrtReleaseRunOptions=o.asm.zb).apply(null,arguments)},o._OrtRun=function(){return(o._OrtRun=o.asm.Ab).apply(null,arguments)},o._OrtEndProfiling=function(){return(o._OrtEndProfiling=o.asm.Bb).apply(null,arguments)};var Ut=o._malloc=function(){return(Ut=o._malloc=o.asm.Db).apply(null,arguments)},zt=o.___errno_location=function(){return(zt=o.___errno_location=o.asm.Eb).apply(null,arguments)},Gt=o._free=function(){return(Gt=o._free=o.asm.Fb).apply(null,arguments)},Ht=o._pthread_self=function(){return(Ht=o._pthread_self=o.asm.Gb).apply(null,arguments)};o._emscripten_tls_init=function(){return(o._emscripten_tls_init=o.asm.Hb).apply(null,arguments)},o._emscripten_current_thread_process_queued_calls=function(){return(o._emscripten_current_thread_process_queued_calls=o.asm.Ib).apply(null,arguments)};var Nt,Lt=o._emscripten_register_main_browser_thread_id=function(){return(Lt=o._emscripten_register_main_browser_thread_id=o.asm.Jb).apply(null,arguments)},$t=o._emscripten_main_browser_thread_id=function(){return($t=o._emscripten_main_browser_thread_id=o.asm.Kb).apply(null,arguments)},Vt=o._emscripten_sync_run_in_main_thread_4=function(){return(Vt=o._emscripten_sync_run_in_main_thread_4=o.asm.Lb).apply(null,arguments)},Xt=o._emscripten_main_thread_process_queued_calls=function(){return(Xt=o._emscripten_main_thread_process_queued_calls=o.asm.Mb).apply(null,arguments)},Jt=o._emscripten_run_in_main_runtime_thread_js=function(){return(Jt=o._emscripten_run_in_main_runtime_thread_js=o.asm.Nb).apply(null,arguments)},Qt=o.__emscripten_call_on_thread=function(){return(Qt=o.__emscripten_call_on_thread=o.asm.Ob).apply(null,arguments)},Zt=o._pthread_testcancel=function(){return(Zt=o._pthread_testcancel=o.asm.Pb).apply(null,arguments)},Kt=o._pthread_exit=function(){return(Kt=o._pthread_exit=o.asm.Qb).apply(null,arguments)},en=o.__emscripten_thread_init=function(){return(en=o.__emscripten_thread_init=o.asm.Rb).apply(null,arguments)},tn=o._emscripten_get_global_libc=function(){return(tn=o._emscripten_get_global_libc=o.asm.Sb).apply(null,arguments)},nn=o.___pthread_tsd_run_dtors=function(){return(nn=o.___pthread_tsd_run_dtors=o.asm.Tb).apply(null,arguments)},rn=o.__get_tzname=function(){return(rn=o.__get_tzname=o.asm.Ub).apply(null,arguments)},cn=o.__get_daylight=function(){return(cn=o.__get_daylight=o.asm.Vb).apply(null,arguments)},an=o.__get_timezone=function(){return(an=o.__get_timezone=o.asm.Wb).apply(null,arguments)},on=o.stackSave=function(){return(on=o.stackSave=o.asm.Xb).apply(null,arguments)},un=o.stackRestore=function(){return(un=o.stackRestore=o.asm.Yb).apply(null,arguments)},sn=o.stackAlloc=function(){return(sn=o.stackAlloc=o.asm.Zb).apply(null,arguments)},fn=o._emscripten_stack_set_limits=function(){return(fn=o._emscripten_stack_set_limits=o.asm._b).apply(null,arguments)},ln=o._memalign=function(){return(ln=o._memalign=o.asm.$b).apply(null,arguments)},dn=o.__emscripten_allow_main_runtime_queued_calls=999792,pn=o.__emscripten_main_thread_futex=1003796;function hn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function mn(){function e(){if(!Nt&&(Nt=!0,o.calledRun=!0,!I)&&(A||me(te),u(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),!A)){if(o.postRun)for(\"function\"==typeof o.postRun&&(o.postRun=[o.postRun]);o.postRun.length;){var e=o.postRun.shift();re.unshift(e)}me(re)}}if(!(0<ue))if(A)u(o),A||me(te),postMessage({cmd:\"loaded\"});else{if(!A){if(o.preRun)for(\"function\"==typeof o.preRun&&(o.preRun=[o.preRun]);o.preRun.length;)ae();me(ee)}0<ue||(o.setStatus?(o.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){o.setStatus(\"\")}),1),e()}),1)):e())}}function gn(e){if(j=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new hn(e);ce()||(ye.Jc(),A||(me(ne),\"undefined\"!=typeof _fflush&&_fflush(0),ke[1].length&&Me(1,10),ke[2].length&&Me(2,10))),j=e,ce()||(ye.Jc(),o.onExit&&o.onExit(e),I=!0),p(e,new hn(e))}if(o.UTF8ToString=L,o.stringToUTF8=V,o.lengthBytesUTF8=X,o.keepRuntimeAlive=ce,o.PThread=ye,o.stackSave=on,o.stackRestore=un,o.stackAlloc=sn,o.PThread=ye,o.wasmMemory=C,o.ExitStatus=hn,fe=function e(){Nt||mn(),Nt||(fe=e)},o.run=mn,o.preInit)for(\"function\"==typeof o.preInit&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return A&&(D=!1,ye.Vc()),mn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},m;for(m in d)d.hasOwnProperty(m)&&(g[m]=d[m]);var ca=\"./this.program\",da=\"object\"===typeof window,n=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,q=\"\",fa,u,ha,w,x;\nif(ea)q=n?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",fa=function(a,b){w||(w=require(\"fs\"));x||(x=require(\"path\"));a=x.normalize(a);return w.readFileSync(a,b?null:\"utf8\")},ha=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||y(\"Assertion failed: undefined\");return a},u=function(a,b,c){w||(w=require(\"fs\"));x||(x=require(\"path\"));a=x.normalize(a);w.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",y),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||n)n?q=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.lastIndexOf(\"/\")+1):q=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},n&&(ha=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\n\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),u=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ia=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);for(m in g)g.hasOwnProperty(m)&&(d[m]=g[m]);g=null;d.thisProgram&&(ca=d.thisProgram);var A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&y(\"no native wasm support detected\");var ja,ka=!1,la=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ma(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&la)return la.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var l=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|l:(h&7)<<18|k<<12|l<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function C(a,b){return a?ma(D,a,b):\"\"}\nfunction na(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var t=a.charCodeAt(++k);l=65536+((l&1023)<<10)|t&1023}if(127>=l){if(c>=e)break;b[c++]=l}else{if(2047>=l){if(c+1>=e)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=e)break;b[c++]=224|l>>12}else{if(c+3>=e)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-h}\nfunction oa(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function pa(a){var b=oa(a)+1,c=qa(b);c&&na(a,E,c,b);return c}var ra,E,D,F,G,H;\nfunction sa(){var a=ja.buffer;ra=a;d.HEAP8=E=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=F=new Int32Array(a);d.HEAPU8=D=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=G=new Uint32Array(a);d.HEAPF32=H=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ta,ua=[],va=[],wa=[],xa=[];function ya(){var a=d.preRun.shift();ua.unshift(a)}var I=0,za=null,K=null;d.preloadedImages={};d.preloadedAudios={};\nfunction y(a){if(d.onAbort)d.onAbort(a);z(a);ka=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Aa(){return L.startsWith(\"data:application/octet-stream;base64,\")}var L;L=\"ort-wasm.wasm\";if(!Aa()){var Ba=L;L=d.locateFile?d.locateFile(Ba,q):q+Ba}function Ca(){var a=L;try{if(a==L&&A)return new Uint8Array(A);if(ha)return ha(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){y(b)}}\nfunction Da(){if(!A&&(da||n)){if(\"function\"===typeof fetch&&!L.startsWith(\"file://\"))return fetch(L,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+L+\"'\";return a.arrayBuffer()}).catch(function(){return Ca()});if(u)return new Promise(function(a,b){u(L,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ca()})}\nfunction Ea(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.Hb;\"number\"===typeof c?void 0===b.xb?ta.get(c)():ta.get(c)(b.xb):c(void 0===b.xb?null:b.xb)}}}function Fa(a){this.zb=a-16;this.Rb=function(b){F[this.zb+4>>2]=b};this.Ob=function(b){F[this.zb+8>>2]=b};this.Pb=function(){F[this.zb>>2]=0};this.Nb=function(){E[this.zb+12>>0]=0};this.Qb=function(){E[this.zb+13>>0]=0};this.Jb=function(b,c){this.Rb(b);this.Ob(c);this.Pb();this.Nb();this.Qb()}}\nvar Ga=0,Ha={},Ia=[null,[],[]],M={},Ja;Ja=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ka=[\"explicit\",\"same-upper\",\"same-lower\"],La=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ma=[\"nchw\",\"nhwc\"],Na=[\"nearest-neighbor\",\"linear\"],Oa=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),Pa=[\"forward\",\"backward\",\"both\"],Qa=[\"zrn\",\"rzn\"];function N(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(F[b>>2]);return c}}\nfunction Ra(a,b=\"float32\"){const c=F[a>>2]+G[a+8>>2];a=G[a+4>>2];\"float32\"===b||y(\"Assertion failed: undefined\");return new Float32Array(D.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Sa(a){return{minValue:H[a>>2],maxValue:H[a+4>>2]}}function Ta(a){return{type:Oa[G[a>>2]],dimensions:N(G[a+8>>2],F[a+4>>2])}}\nfunction Ua(a){return{windowDimensions:N(G[a>>2],F[a+4>>2]),padding:\"explicit\"===Ka[F[a+32>>2]]?N(G[a+8>>2],F[a+12>>2]):void 0,strides:N(G[a+16>>2],F[a+20>>2]),dilations:N(G[a+24>>2],F[a+28>>2]),autoPad:Ka[F[a+32>>2]],layout:Ma[F[a+36>>2]]}}var O,P,Q,R,S,U,V,W,X,Y,Va={};\nfunction Wa(){if(!Xa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Va)void 0===Va[b]?delete a[b]:a[b]=Va[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Xa=c}return Xa}var Xa;\nfunction Ya(a,b){a=new Date(1E3*F[a>>2]);F[b>>2]=a.getUTCSeconds();F[b+4>>2]=a.getUTCMinutes();F[b+8>>2]=a.getUTCHours();F[b+12>>2]=a.getUTCDate();F[b+16>>2]=a.getUTCMonth();F[b+20>>2]=a.getUTCFullYear()-1900;F[b+24>>2]=a.getUTCDay();F[b+36>>2]=0;F[b+32>>2]=0;F[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Ya.Gb||(Ya.Gb=pa(\"GMT\"));F[b+40>>2]=Ya.Gb;return b}\nfunction Za(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!cb){cb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);F[db()>>2]=60*k;F[eb()>>2]=Number(b!=h);c=a(c);e=a(e);c=pa(c);e=pa(e);h<b?(F[Z()>>2]=c,F[Z()+4>>2]=e):(F[Z()>>2]=e,F[Z()+4>>2]=c)}}var cb;function fb(a){return 0===a%4&&(0!==a%100||0===a%400)}function gb(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar hb=[31,29,31,30,31,30,31,31,30,31,30,31],ib=[31,28,31,30,31,30,31,31,30,31,30,31];function jb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=(fb(a.getFullYear())?hb:ib)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction kb(a,b,c,e){function h(f,p,r){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<p;)f=r[0]+f;return f}function k(f,p){return h(f,p,\"0\")}function l(f,p){function r($a){return 0>$a?-1:0<$a?1:0}var J;0===(J=r(f.getFullYear()-p.getFullYear()))&&0===(J=r(f.getMonth()-p.getMonth()))&&(J=r(f.getDate()-p.getDate()));return J}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function T(f){f=jb(new Date(f.vb+1900,0,1),f.Eb);var p=new Date(f.getFullYear()+1,0,4),r=t(new Date(f.getFullYear(),0,4));p=t(p);return 0>=l(r,f)?0>=l(p,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var B=F[e+40>>2];e={Ub:F[e>>2],Tb:F[e+4>>2],Cb:F[e+8>>2],Bb:F[e+12>>2],wb:F[e+16>>2],vb:F[e+20>>2],Db:F[e+24>>2],Eb:F[e+28>>2],bc:F[e+32>>2],Sb:F[e+\n36>>2],Vb:B?C(B):\"\"};c=C(c);B={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in B)c=c.replace(new RegExp(v,\"g\"),B[v]);var ab=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nbb=\"January February March April May June July August September October November December\".split(\" \");B={\"%a\":function(f){return ab[f.Db].substring(0,3)},\"%A\":function(f){return ab[f.Db]},\"%b\":function(f){return bb[f.wb].substring(0,3)},\"%B\":function(f){return bb[f.wb]},\"%C\":function(f){return k((f.vb+1900)/100|0,2)},\"%d\":function(f){return k(f.Bb,2)},\"%e\":function(f){return h(f.Bb,2,\" \")},\"%g\":function(f){return T(f).toString().substring(2)},\"%G\":function(f){return T(f)},\"%H\":function(f){return k(f.Cb,\n2)},\"%I\":function(f){f=f.Cb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.Bb+gb(fb(f.vb+1900)?hb:ib,f.wb-1),3)},\"%m\":function(f){return k(f.wb+1,2)},\"%M\":function(f){return k(f.Tb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.Cb&&12>f.Cb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Ub,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.Db||7},\"%U\":function(f){var p=new Date(f.vb+1900,0,1),r=0===p.getDay()?p:jb(p,7-p.getDay());f=new Date(f.vb+1900,f.wb,f.Bb);return 0>\nl(r,f)?k(Math.ceil((31-r.getDate()+(gb(fb(f.getFullYear())?hb:ib,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(r,p)?\"01\":\"00\"},\"%V\":function(f){var p=new Date(f.vb+1901,0,4),r=t(new Date(f.vb+1900,0,4));p=t(p);var J=jb(new Date(f.vb+1900,0,1),f.Eb);return 0>l(J,r)?\"53\":0>=l(p,J)?\"01\":k(Math.ceil((r.getFullYear()<f.vb+1900?f.Eb+32-r.getDate():f.Eb+1-r.getDate())/7),2)},\"%w\":function(f){return f.Db},\"%W\":function(f){var p=new Date(f.vb,0,1),r=1===p.getDay()?p:jb(p,0===p.getDay()?1:7-p.getDay()+1);f=\nnew Date(f.vb+1900,f.wb,f.Bb);return 0>l(r,f)?k(Math.ceil((31-r.getDate()+(gb(fb(f.getFullYear())?hb:ib,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(r,p)?\"01\":\"00\"},\"%y\":function(f){return(f.vb+1900).toString().substring(2)},\"%Y\":function(f){return f.vb+1900},\"%z\":function(f){f=f.Sb;var p=0<=f;f=Math.abs(f)/60;return(p?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Vb},\"%%\":function(){return\"%\"}};for(v in B)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),B[v](e)));v=lb(c);\nif(v.length>b)return 0;E.set(v,a);return v.length-1}(function(){function a(){return{yb:{},Mb:1,create:function(b,c){c=c||{};var e=this.Mb++;c.Fb=1;c.object=b;this.yb[e]=c;return e},get:function(b){if(0!==b)return this.yb[b].object},Ab:function(b){this.yb[b].Fb++},release:function(b){var c=this.yb[b];c.Fb--;0>=c.Fb&&delete this.yb[b]}}}O||(O=O||a(),P=P||a(),Q=Q||a(),R=R||a(),S=S||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function lb(a){var b=Array(oa(a)+1);na(a,b,0,b.length);return b}\nvar pb={a:function(a){return qa(a+16)+16},c:function(a,b){wa.unshift({Hb:a,xb:b})},f:function(a,b){wa.unshift({Hb:a,xb:b})},b:function(a,b,c){(new Fa(a)).Jb(b,c);Ga++;throw a;},Q:function(a,b){a=C(a);return M.Wb(a,b)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(a,b){a=C(a);return M.Xb(a,b)},W:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var l=mb(65536,a);\nl?(D.fill(0,l,l+a),a=l):a=0;a?(Ha[a]={Lb:a,Kb:b,Ib:!0,fd:h,ac:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},V:function(a,b){var c=Ha[a];0!==b&&c?(b===c.Kb&&(Ha[a]=null,c.Ib&&nb(c.Lb)),a=0):a=-28;return a},n:function(){},O:function(a,b,c){a=C(a);return M.Yb(a,b,c)},M:function(){},u:function(){},N:function(){},k:function(){y()},B:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=Ja();else return F[ob()>>2]=28,-1;F[b>>2]=a/1E3|0;F[b+4>>2]=a%1E3*1E6|0;return 0},X:function(a,b){return a-\nb},Oa:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Pa:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Na:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nS:function(){return 2147483648},G:function(a,b,c){D.copyWithin(a,b,b+c)},m:function(a){var b=D.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ja.grow(Math.min(2147483648,e)-ra.byteLength+65535>>>16);sa();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},L:function(a){for(var b=Ja();Ja()-b<a;);},La:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[G[a>>2]],powerPreference:e[G[a+4>>2]]});return O.create(navigator.ml.createContext(b))},J:function(a,b){var c=0;Wa().forEach(function(e,h){var k=b+c;h=F[a+4*h>>2]=k;for(k=0;k<e.length;++k)E[h++>>0]=e.charCodeAt(k);E[h>>0]=0;c+=e.length+1});return 0},K:function(a,b){var c=Wa();F[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});F[b>>2]=e;return 0},i:function(){return 0},I:function(a,b){a=1==a||2==a?2:\ny();E[b>>0]=a;return 0},r:function(a,b,c,e){a=M.$b(a);b=M.Zb(a,b,c);F[e>>2]=b;return 0},F:function(){},s:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var l=F[b+8*k>>2],t=F[b+(8*k+4)>>2],T=0;T<t;T++){var B=D[l+T],v=Ia[a];0===B||10===B?((1===a?ia:z)(ma(v,0)),v.length=0):v.push(B)}h+=t}F[e>>2]=h;return 0},ra:function(a){var b=Date.now();F[a>>2]=b/1E3|0;F[a+4>>2]=b%1E3*1E3|0;return 0},da:Ya,w:function(a,b){Za();a=new Date(1E3*F[a>>2]);F[b>>2]=a.getSeconds();F[b+4>>2]=a.getMinutes();F[b+8>>2]=a.getHours();\nF[b+12>>2]=a.getDate();F[b+16>>2]=a.getMonth();F[b+20>>2]=a.getFullYear()-1900;F[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);F[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;F[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;F[b+32>>2]=a;a=F[Z()+(a?4:0)>>2];F[b+40>>2]=a;return b},q:function(a){Za();var b=new Date(F[a+20>>2]+1900,F[a+16>>2],F[a+12>>2],F[a+8>>2],F[a+4>>2],F[a>>\n2],0),c=F[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),l=h.getTimezoneOffset(),t=Math.min(l,k);0>c?F[a+32>>2]=Number(k!=l&&t==e):0<c!=(t==e)&&(k=Math.max(l,k),b.setTime(b.getTime()+6E4*((0<c?t:k)-e)));F[a+24>>2]=b.getDay();F[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;F[a>>2]=b.getSeconds();F[a+4>>2]=b.getMinutes();F[a+8>>2]=b.getHours();F[a+12>>2]=b.getDate();F[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},E:function(a){O.Ab(a)},\nD:function(a){O.release(a)},Ia:function(a,b,c){a=Q.get(a);b=V.get(b);c=V.get(c);c=a.add(b,c);return V.create(c)},Ha:function(a,b,c){a=Q.get(a);b=V.get(b);c=Ua(c);c=a.averagePool2d(b,c);return V.create(c)},Ga:function(a,b,c,e,h){a=Q.get(a);b=V.get(b);c=V.get(c);e=V.get(e);h={scale:V.get(F[h>>2]),bias:V.get(F[h+4>>2]),axis:F[h+8>>2],epsilon:H[h+12>>2],activation:X.get(F[h+16>>2])};h=a.batchNormalization(b,c,e,h);return V.create(h)},Fa:function(a,b){a=Q.get(a);b=U.get(b);try{var c=a.build(b);return P.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},Ea:function(a,b,c){a=Q.get(a);b=V.get(b);c=a.clamp(b,Sa(c));return V.create(c)},Da:function(a,b){a=Q.get(a).clamp(Sa(b));return X.create(a)},Ca:function(a,b,c,e){a=Q.get(a);b=N(b,c);c=[];for(var h=0;h<b.length;++h)c.push(V.get(b[h]));e=a.concat(c,e);return V.create(e)},Ba:function(a,b,c){a=Q.get(a);b=Ta(b);c=Ra(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return V.create(c)},Aa:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=V.get(c);e={padding:\"explicit\"===Ka[F[e+40>>2]]?N(G[e>>\n2],F[e+4>>2]):void 0,strides:N(G[e+8>>2],F[e+12>>2]),dilations:N(G[e+16>>2],F[e+20>>2]),autoPad:Ka[F[e+40>>2]],groups:F[e+48>>2],inputLayout:Ma[F[e+52>>2]],filterLayout:La[F[e+56>>2]],bias:V.get(F[e+60>>2]),activation:X.get(F[e+64>>2])};e=a.conv2d(b,c,e);return V.create(e)},za:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=V.get(c);e={c:V.get(F[e>>2]),alpha:H[e+4>>2],beta:H[e+8>>2],aTranspose:0!==E[e+12>>0],bTranspose:0!==E[e+13>>0]};e=a.gemm(b,c,e);return V.create(e)},ya:function(a,b,c,e,h,k,l){a=Q.get(a);\nb=V.get(b);c=V.get(c);e=V.get(e);l={bias:V.get(F[l>>2]),recurrentBias:V.get(F[l+4>>2]),initialHiddenState:V.get(F[l+8>>2]),resetAfter:0!==E[l+12>>0],returnSequence:0!==E[l+13>>0],direction:Pa[F[l+16>>2]],layout:Qa[F[l+20>>2]],activations:Y.get(F[l+24>>2])};h=a.gru(b,c,e,h,k,l);return W.create(h)},xa:function(a,b,c){a=Q.get(a);b=C(b);c=Ta(c);c=a.input(b,c);return V.create(c)},wa:function(a,b,c){a=Q.get(a);b=V.get(b);c=a.leakyRelu(b,{alpha:H[c>>2]});return V.create(c)},va:function(a,b){a=Q.get(a).leakyRelu({alpha:H[b>>\n2]});return X.create(a)},ua:function(a,b,c){a=Q.get(a);b=V.get(b);c=V.get(c);c=a.matmul(b,c);return V.create(c)},ta:function(a,b,c){a=Q.get(a);b=V.get(b);c=Ua(c);c=a.maxPool2d(b,c);return V.create(c)},x:function(a){Q.release(a)},sa:function(a,b){a=Q.get(a);b=V.get(b);b=a.relu(b);return V.create(b)},A:function(a){a=Q.get(a).relu();return X.create(a)},qa:function(a,b,c){a=Q.get(a);b=V.get(b);var e=Na[F[c>>2]];var h=G[c+4>>2];var k=F[c+8>>2];if(0!==h&&0!==k){for(var l=[],t=0;t<h;++t,k+=4)l.push(H[k>>\n2]);h=l}else h=void 0;c={mode:e,scales:h,sizes:N(G[c+12>>2],F[c+16>>2]),axes:N(G[c+20>>2],F[c+24>>2])};c=a.resample2d(b,c);return V.create(c)},pa:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=N(e,c);c=a.reshape(b,c);return V.create(c)},oa:function(a,b){a=Q.get(a);b=V.get(b);b=a.sigmoid(b);return V.create(b)},z:function(a){a=Q.get(a).sigmoid();return X.create(a)},na:function(a,b,c,e,h){a=Q.get(a);b=V.get(b);if(0!==e&&0!==c){for(var k=[],l=0;l<e;++l,c+=4)k.push(G[c>>2]);c=k}else c=void 0;1==e&&(c=c[0]);\ne=a.split(b,c,{axis:F[h>>2]});return W.create(e)},ma:function(a,b){a=Q.get(a);b=V.get(b);b=a.tanh(b);return V.create(b)},y:function(a){a=Q.get(a).tanh();return X.create(a)},la:function(a,b,c){a=Q.get(a);b=V.get(b);c={permutation:N(G[c>>2],F[c+4>>2])};c=a.transpose(b,c);return V.create(c)},Ka:function(a,b,c){a=P.get(a);b=R.get(b);c=S.get(c);return a.compute(b,c)},Ja:function(a){P.Ab(a)},C:function(a){P.release(a)},ja:function(a){R.release(a)},ka:function(a,b,c){a=R.get(a);b=C(b);c=0===F[c+12>>2]?Ra(c+\n0):{resource:Ra(c+0),dimensions:N(G[c+16>>2],F[c+12>>2])};a[b]=c},ha:function(a){U.release(a)},ia:function(a,b,c){a=U.get(a);b=C(b);c=V.get(c);a[b]=c},fa:function(a){S.release(a)},ga:function(a,b,c){a=S.get(a);b=C(b);c=Ra(c);a[b]=c},l:function(a,b){a=W.get(a)[b];return V.create(a)},v:function(a){W.release(a)},e:function(a){V.Ab(a)},d:function(a){V.release(a)},ba:function(a){Y.Ab(a)},o:function(a){Y.release(a)},ca:function(a,b){a=Y.get(a);b=X.get(b);a.push(b)},ea:function(a){X.Ab(a)},h:function(a){X.release(a)},\nMa:kb,g:function(a,b,c,e){return kb(a,b,c,e)},aa:function(a){a=O.get(a);a=new MLGraphBuilder(a);return Q.create(a)},$:function(){return R.create({})},_:function(){return U.create({})},Z:function(){return S.create({})},Y:function(){return Y.create([])}};\n(function(){function a(h){d.asm=h.exports;ja=d.asm.Qa;sa();ta=d.asm.ub;va.unshift(d.asm.Ra);I--;d.monitorRunDependencies&&d.monitorRunDependencies(I);0==I&&(null!==za&&(clearInterval(za),za=null),K&&(h=K,K=null,h()))}function b(h){a(h.instance)}function c(h){return Da().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){z(\"failed to asynchronously prepare wasm: \"+k);y(k)})}var e={a:pb};I++;d.monitorRunDependencies&&d.monitorRunDependencies(I);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return z(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return A||\"function\"!==typeof WebAssembly.instantiateStreaming||Aa()||L.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(L,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){z(\"wasm streaming compile failed: \"+k);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ra).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Sa).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ta).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Ua).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Va).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Wa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Xa).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Ya).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Za).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm._a).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.$a).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.ab).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.bb).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.cb).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.db).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.eb).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.fb).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.gb).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.hb).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.ib).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.jb).apply(null,arguments)};\nvar qa=d._malloc=function(){return(qa=d._malloc=d.asm.kb).apply(null,arguments)},ob=d.___errno_location=function(){return(ob=d.___errno_location=d.asm.lb).apply(null,arguments)},nb=d._free=function(){return(nb=d._free=d.asm.mb).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm.nb).apply(null,arguments)},eb=d.__get_daylight=function(){return(eb=d.__get_daylight=d.asm.ob).apply(null,arguments)},db=d.__get_timezone=function(){return(db=d.__get_timezone=d.asm.pb).apply(null,\narguments)},qb=d.stackSave=function(){return(qb=d.stackSave=d.asm.qb).apply(null,arguments)},rb=d.stackRestore=function(){return(rb=d.stackRestore=d.asm.rb).apply(null,arguments)},sb=d.stackAlloc=function(){return(sb=d.stackAlloc=d.asm.sb).apply(null,arguments)},mb=d._memalign=function(){return(mb=d._memalign=d.asm.tb).apply(null,arguments)};d.UTF8ToString=C;d.stringToUTF8=function(a,b,c){return na(a,D,b,c)};d.lengthBytesUTF8=oa;d.stackSave=qb;d.stackRestore=rb;d.stackAlloc=sb;var tb;\nK=function ub(){tb||vb();tb||(K=ub)};\nfunction vb(){function a(){if(!tb&&(tb=!0,d.calledRun=!0,!ka)){Ea(va);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();xa.unshift(b)}Ea(xa)}}if(!(0<I)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)ya();Ea(ua);0<I||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=vb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();vb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return R.buffer!=L&&Z(R.buffer),W}function r(){return R.buffer!=L&&Z(R.buffer),H}function i(){return R.buffer!=L&&Z(R.buffer),z}function a(){return R.buffer!=L&&Z(R.buffer),Y}function o(){return R.buffer!=L&&Z(R.buffer),B}function u(){return R.buffer!=L&&Z(R.buffer),N}var c,s,l;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){s=e,l=t}));var f,d={};for(f in c)c.hasOwnProperty(f)&&(d[f]=c[f]);var p=\\\"./this.program\\\";function h(e,t){throw t}var g,m,b,y,v,w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,A=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function T(e){return c.locateFile?c.locateFile(e,E):E+e}if(A){if(E=_?n(908).dirname(E)+\\\"/\\\":\\\"//\\\",g=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},m=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof gn))throw e})),process.on(\\\"unhandledRejection\\\",de),h=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var S;try{S=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=S.Worker}}else(w||_)&&(_?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",A?(g=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},m=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},_&&(b=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));A&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var M,x,k=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(f in d)d.hasOwnProperty(f)&&(c[f]=d[f]);d=null,c.thisProgram&&(p=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(x=c.wasmBinary);var F=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var R,P,C,j=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var L,W,H,z,Y,B,N,G=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function $(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?$(r(),e,t):\\\"\\\"}function q(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function X(e,t,n){return q(e,r(),t,n)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Q(e){var n=J(e)+1,r=Yt(n);return r&&q(e,t(),r,n),r}function Z(e){L=e,c.HEAP8=W=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=H=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=Y=new Uint32Array(e),c.HEAPF32=B=new Float32Array(e),c.HEAPF64=N=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),O&&(L=c.buffer);var K=c.INITIAL_MEMORY||16777216;if(O)R=c.wasmMemory,L=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),A&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(L=R.buffer),K=L.byteLength,Z(L);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return F||0<ae}function ue(){var e=c.preRun.shift();te.unshift(e)}var ce,se=0,le=null,fe=null;function de(e){throw c.onAbort&&c.onAbort(e),I(!O),D(e),j=!0,C=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function pe(){return ce.startsWith(\\\"data:application/octet-stream;base64,\\\")}function he(){var e=ce;try{if(e==ce&&x)return new Uint8Array(x);if(b)return b(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\\\"ort-wasm-threaded.wasm\\\",pe()||(ce=T(ce));var ge={1000244:function(){throw\\\"Canceled!\\\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.Qc;\\\"number\\\"==typeof n?void 0===t.ic?ee.get(n)():ee.get(n)(t.ic):n(void 0===t.ic?null:t.ic)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),hn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),hn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ye(e){if(O)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=we.cc[e];t&&(i()[e+12>>2]=0,we.uc(t.worker))}c._emscripten_futex_wake=be;var ve,we={fc:[],ec:[],Cc:[],Cd:function(){},Uc:function(){for(var e=Yt(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Yt(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),tn(e,!_,1),Vt(e)},Vc:function(){we.receiveObjectTransfer=we.ad,we.threadInit=we.md,we.threadCancel=we.ld,we.threadExit=we.Kc,we.setExitStatus=we.cd},cc:{},Bc:[],Hc:function(){for(;0<we.Bc.length;)we.Bc.pop()();rn()},Ic:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),we.Hc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),be(e+0,2147483647),tn(0,0,0)},cd:function(e){C=e},Kc:function(e){var t=Gt();t&&(we.Ic(t,e),O&&postMessage({cmd:\\\"exit\\\"}))},ld:function(){we.Ic(Gt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},Jc:function(){for(var e in we.cc){var t=we.cc[e];t&&t.worker&&we.uc(t.worker)}for(we.cc={},e=0;e<we.fc.length;++e){var n=we.fc[e];n.terminate()}for(we.fc=[],e=0;e<we.ec.length;++e)t=(n=we.ec[e]).bc,we.zc(t),n.terminate();we.ec=[]},zc:function(e){if(e){if(e.dc){var t=i()[e.dc+100>>2];i()[e.dc+100>>2]=0,Nt(t),Nt(e.dc)}e.dc=0,e.yc&&e.hc&&Nt(e.hc),e.hc=0,e.worker&&(e.worker.bc=null)}},uc:function(e){we.bd((function(){delete we.cc[e.bc.dc],we.fc.push(e),we.ec.splice(we.ec.indexOf(e),1),we.zc(e.bc),e.bc=void 0}))},bd:function(e){i()[pn>>2]=0;try{e()}finally{i()[pn>>2]=1}},ad:function(){},md:function(){for(var e in we.Cc)we.Cc[e]()},Xc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.bc&&(we.Oc=e.bc.dc),r.targetThread&&r.targetThread!=Gt()){var u=we.cc[r.Id];u?u.worker.postMessage(n.data,r.transferList):D('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)Jt();else if(\\\"spawnThread\\\"===o)Ee(n.data);else if(\\\"cleanupThread\\\"===o)ye(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,O)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=we.cc[n],delete we.cc[n],r.worker.terminate(),we.zc(r),we.ec.splice(we.ec.indexOf(r.worker),1),r.worker.bc=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,O)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";we.cc[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.oc&&(e.oc(),delete e.oc);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)D(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.bc&&Atomics.load(a(),e.bc.dc+64>>2)&&we.uc(e);else if(\\\"exitProcess\\\"===o)try{bn(r.returnCode)}catch(e){if(e instanceof gn)return;throw e}else\\\"cancelDone\\\"===o?we.uc(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):D(\\\"worker sent an unknown command \\\"+o));we.Oc=void 0},e.onerror=function(e){D(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},A&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:P})},Lc:function(){var e=T(\\\"ort-wasm-threaded.worker.js\\\");we.fc.push(new Worker(e))},Rc:function(){return 0==we.fc.length&&(we.Lc(),we.Xc(we.fc[0])),we.fc.pop()},sd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function _e(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Bt()>>2]=28,-1;e=ve()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Ae(e,t){if(O)return Ve(1,1,e,t);re.unshift({Qc:e,ic:t})}function Oe(e){this.mc=e-16,this.jd=function(e){i()[this.mc+4>>2]=e},this.ed=function(e){i()[this.mc+8>>2]=e},this.gd=function(){i()[this.mc>>2]=0},this.dd=function(){t()[this.mc+12>>0]=0},this.hd=function(){t()[this.mc+13>>0]=0},this.Sc=function(e,t){this.jd(e),this.ed(t),this.gd(),this.dd(),this.hd()}}function Ee(e){if(O)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=we.Rc();if(!t)return 6;if(void 0!==t.bc)throw\\\"Internal error!\\\";if(!e.tc)throw\\\"Internal error, no pthread ptr!\\\";we.ec.push(t);for(var n=Yt(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.hc+e.jc,u=(r=we.cc[e.tc]={worker:t,hc:e.hc,jc:e.jc,yc:e.yc,dc:e.tc}).dc>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.dc),Atomics.store(a(),u+20,e.jc),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.jc),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=nn()+40,Atomics.store(a(),u+43,n),t.bc=r;var c={cmd:\\\"run\\\",start_routine:e.kd,arg:e.ic,threadInfoStruct:e.tc,stackBase:e.hc,stackSize:e.jc};return t.oc=function(){c.time=performance.now(),t.postMessage(c,e.rd)},t.loaded&&(t.oc(),delete t.oc),0}function Te(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),hn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),hn>>2,0),-73;if(0==(a=Atomics.exchange(i(),hn>>2,0)))break;if(Jt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),hn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Se(){A||_||(M||(M={}),M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,D(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){fn(e,t),sn(e)},c.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ve=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:O?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Me={},xe=[null,[],[]];function ke(e,t){var n=xe[e];0===t||10===t?((1===e?k:D)($(n,0)),n.length=0):n.push(t)}var De={};function Fe(e,t){return O?Ve(2,1,e,t):(e=V(e),De.wd(e,t))}function Re(e,t,n){return O?Ve(3,1,e,t,n):0}function Pe(e,t){if(O)return Ve(4,1,e,t)}function Ce(e,t,n){if(O)return Ve(5,1,e,t,n)}function je(e,t,n){return O?Ve(6,1,e,t,n):0}function Ie(e,t){if(O)return Ve(7,1,e,t)}function Ue(e,t){return O?Ve(8,1,e,t):(e=V(e),De.xd(e,t))}function Le(e,t,n,i,a,o){if(O)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=dn(65536,u))?r().fill(0,e,e+u):e=0,e?(Me[e]={Zc:e,Wc:t,Mc:!0,fd:a,Fd:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function We(e,t){if(O)e=Ve(10,1,e,t);else{var n=Me[e];0!==t&&n?(t===n.Wc&&(Me[e]=null,n.Mc&&Nt(n.Zc)),e=0):e=-28}return e}function He(e,t,n){if(O)return Ve(11,1,e,t,n)}function ze(e,t,n){return O?Ve(12,1,e,t,n):(e=V(e),De.yd(e,t,n))}function Ye(e){if(O)return Ve(13,1,e)}function Be(e,t){if(O)return Ve(14,1,e,t)}function Ne(e){if(O)return Ve(15,1,e)}function Ge(){if(O)return Ve(16,1);de()}var $e=[];function Ve(e,t){for(var n=arguments.length-2,r=cn(),i=ln(8*n),a=i>>3,o=0;o<n;o++){var c=arguments[2+o];u()[a+o]=c}return n=Qt(e,n,i,t),sn(r),n}var qe=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Je(e){return e=2<e?V(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Qe(e,t,n){var r=Je(e);if(!r)return-4;if(r.sc&&(i()[r.sc>>2]=t,i()[r.sc+4>>2]=n),!r.Gc&&r.ud){if(r.sc){r=i()[r.sc+8>>2],e=e?V(e):\\\"\\\";var a=cn(),o=ln(12),u=0;if(e){u=J(e)+1;var c=Yt(u);X(e,c,u),u=c}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Zt(0,r,657457152,0,u,o),sn(a),1}return-4}return r.Gc&&(r=r.Gc),e=!1,r.rc&&r.rc.qc&&(e=0===(e=r.rc.qc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.rc.qc.viewport(0,0,t,n),0}function Ze(e,t,n){return O?Ve(17,1,e,t,n):Qe(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=[\\\"nearest-neighbor\\\",\\\"linear\\\"],it=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),at=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ot=[\\\"zrn\\\",\\\"rzn\\\"];function ut(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ct(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function st(e){return{minValue:o()[e>>2],maxValue:o()[e+4>>2]}}function lt(e){return{alpha:o()[e>>2]}}function ft(e){return{type:it[a()[e>>2]],dimensions:ut(a()[e+8>>2],i()[e+4>>2])}}function dt(e){return{windowDimensions:ut(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?ut(a()[e+8>>2],i()[e+12>>2]):void 0,strides:ut(a()[e+16>>2],i()[e+20>>2]),dilations:ut(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var pt,ht,gt,mt,bt,yt,vt,wt,_t,At,Ot,Et={};function Tt(){if(!Ot){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Et)void 0===Et[e]?delete t[e]:t[e]=Et[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Ot=n}return Ot}function St(e,n){if(O)return Ve(18,1,e,n);var r=0;return Tt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Mt(e,t){if(O)return Ve(19,1,e,t);var n=Tt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function xt(e){return O?Ve(20,1,e):0}function kt(e,n){return O?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Dt(e,t,n,r){return O?Ve(22,1,e,t,n,r):(e=De.Ad(e),t=De.zd(e,t,n),i()[r>>2]=t,0)}function Ft(e,t,n,r,i){if(O)return Ve(23,1,e,t,n,r,i)}function Rt(e,t,n,a){if(O)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var c=i()[t+8*u>>2],s=i()[t+(8*u+4)>>2],l=0;l<s;l++)ke(e,r()[c+l]);o+=s}return i()[a>>2]=o,0}function Pt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(O)return Ve(25,1);if(!Pt.Nc){Pt.Nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[un()>>2]=60*o,i()[on()>>2]=Number(t!=a),n=e(n),r=e(r),n=Q(n),r=Q(r),a<t?(i()[an()>>2]=n,i()[an()+4>>2]=r):(i()[an()>>2]=r,i()[an()+4>>2]=n)}}function Ct(e){return 0==e%4&&(0!=e%100||0==e%400)}function jt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var It=[31,29,31,30,31,30,31,31,30,31,30,31],Ut=[31,28,31,30,31,30,31,31,30,31,30,31];function Lt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ct(e.getFullYear())?It:Ut)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Wt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){e=Lt(new Date(e.ac+1900,0,1),e.xc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var f=i()[a+40>>2];for(var d in a={pd:i()[a>>2],od:i()[a+4>>2],vc:i()[a+8>>2],pc:i()[a+12>>2],kc:i()[a+16>>2],ac:i()[a+20>>2],wc:i()[a+24>>2],xc:i()[a+28>>2],Jd:i()[a+32>>2],nd:i()[a+36>>2],qd:f?V(f):\\\"\\\"},r=V(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),f[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in f={\\\"%a\\\":function(e){return p[e.wc].substring(0,3)},\\\"%A\\\":function(e){return p[e.wc]},\\\"%b\\\":function(e){return h[e.kc].substring(0,3)},\\\"%B\\\":function(e){return h[e.kc]},\\\"%C\\\":function(e){return u((e.ac+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.pc,2)},\\\"%e\\\":function(e){return o(e.pc,2,\\\" \\\")},\\\"%g\\\":function(e){return l(e).toString().substring(2)},\\\"%G\\\":function(e){return l(e)},\\\"%H\\\":function(e){return u(e.vc,2)},\\\"%I\\\":function(e){return 0==(e=e.vc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.pc+jt(Ct(e.ac+1900)?It:Ut,e.kc-1),3)},\\\"%m\\\":function(e){return u(e.kc+1,2)},\\\"%M\\\":function(e){return u(e.od,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.vc&&12>e.vc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.pd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.wc||7},\\\"%U\\\":function(e){var t=new Date(e.ac+1900,0,1),n=0===t.getDay()?t:Lt(t,7-t.getDay());return 0>c(n,e=new Date(e.ac+1900,e.kc,e.pc))?u(Math.ceil((31-n.getDate()+(jt(Ct(e.getFullYear())?It:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.ac+1901,0,4),n=s(new Date(e.ac+1900,0,4));t=s(t);var r=Lt(new Date(e.ac+1900,0,1),e.xc);return 0>c(r,n)?\\\"53\\\":0>=c(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.ac+1900?e.xc+32-n.getDate():e.xc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.wc},\\\"%W\\\":function(e){var t=new Date(e.ac,0,1),n=1===t.getDay()?t:Lt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.ac+1900,e.kc,e.pc))?u(Math.ceil((31-n.getDate()+(jt(Ct(e.getFullYear())?It:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.ac+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ac+1900},\\\"%z\\\":function(e){var t=0<=(e=e.nd);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.qd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),f[d](a)));return(d=function(e){var t=Array(J(e)+1);return q(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}pt||(pt=pt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},ht=ht||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},gt=gt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},mt=mt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},bt=bt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},yt=yt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},vt=vt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},wt=wt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},_t=_t||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},At=At||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}});var Ht=[null,Ae,Fe,Re,Pe,Ce,je,Ie,Ue,Le,We,He,ze,Ye,Be,Ne,Ge,Ze,St,Mt,xt,kt,Dt,Ft,Rt,Pt],zt={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},cb:function(e,t){return _e(e,t)},b:function(e){return Yt(e+16)+16},d:function(e,t){return Ae(e,t)},e:function(e,t){we.Bc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Oe(e).Sc(t,n),e},J:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return D(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return D(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(O&&0===o.length)return Xt(687865856,e,t,n,r);var u=0,c=0;if(t&&-1!=t){var s=i()[t>>2];s+=81920,u=i()[t+8>>2],c=0!==i()[t+12>>2]}else s=2097152;(t=0==u)?u=dn(16,s):I(0<(u-=s));for(var l=Yt(228),f=0;57>f;++f)a()[(l>>2)+f]=0;return i()[e>>2]=l,i()[l+12>>2]=l,e=l+152,i()[e>>2]=e,n={hc:u,jc:s,yc:t,detached:c,kd:n,tc:l,ic:r,rd:o},O?(n.td=\\\"spawnThread\\\",postMessage(n,o),0):Ee(n)},H:function(e){throw O?we.Kc(e):(we.Hc(),bn(e)),\\\"unwind\\\"},I:function(e,t){return function(e,t){if(!e)return D(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(O&&Gt()==e)return D(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!O&&qt()==e)return D(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return D(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return D(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Se();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),O?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ye(e),0;Kt(),O||Jt(),Te(e+0,n,O?100:1)}}(e,t)},A:Fe,y:Re,D:Pe,z:Ce,s:function(){return 42},_a:je,B:Ie,E:Ue,G:Le,F:We,q:He,fb:ze,db:Ye,t:Be,eb:Ne,Q:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(O)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=we.cc[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ge,w:_e,Va:function(e,t){return e-t},S:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},R:function(e,t,n){var a;for($e.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,$e.push(a?u()[n++>>1]:i()[n]),++n;return ge[e].apply(null,$e)},Za:Se,n:function(){},k:Te,j:be,C:function(){return 2147483648},i:ve,Xa:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return A?n(993).cpus().length:navigator.hardwareConcurrency},M:function(e,t,n){qe.length=t,n>>=3;for(var r=0;r<t;r++)qe[r]=u()[n+r];return(0>e?ge[-e-1]:Ht[e]).apply(null,qe)},Ya:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-L.byteLength+65535>>>16),Z(R.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},O:function(e,t,n){return Je(e)?Qe(e,t,n):Ze(e,t,n)},v:function(){},L:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!j){try{e()}catch(e){if(e instanceof gn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&D(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{O?en(C):bn(C)}catch(e){if(!(e instanceof gn))throw e}}}((function(){ee.get(e)(n)}))}),t)},P:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Yc:i()[t+8],Dd:i()[t+9],Ec:i()[t+10],Pc:i()[t+11],Gd:i()[t+12],Hd:i()[t+13]},!(e=Je(e))||t.Pc?0:function(e,t){e.Fc||(e.Fc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.Fc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Yt(8);i()[n+4>>2]=Gt();var r={Bd:n,attributes:t,version:t.Yc,qc:e};return e.canvas&&(e.canvas.rc=r),(void 0===t.Ec||t.Ec)&&function(e){if(e||(e=void 0),!e.Tc){e.Tc=!0;var t=e.qc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.vd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.Ed=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),pt.create(navigator.ml.createContext(t))},ab:St,bb:Mt,l:xt,$a:kt,r:Dt,Wa:Ft,p:Rt,wa:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},gb:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.Dc||(e.Dc=Q(\\\"GMT\\\")),i()[n+40>>2]=e.Dc,n},K:function(){we.Uc()},u:function(e,t){Pt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[an()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:R||c.wasmMemory,x:function(e){Pt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?c:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){pt.nc(e)},Ra:function(e){pt.release(e)},Na:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=vt.get(n),n=e.add(t,n),vt.create(n)},Ma:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=dt(n),n=e.averagePool2d(t,n),vt.create(n)},La:function(e,t,n,r,a){return e=gt.get(e),t=vt.get(t),n=vt.get(n),r=vt.get(r),a={scale:vt.get(i()[a>>2]),bias:vt.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:_t.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),vt.create(a)},Ka:function(e,t){e=gt.get(e),t=yt.get(t);try{var n=e.build(t);return ht.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ja:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=st(n),n=e.clamp(t,n),vt.create(n)},Ia:function(e,t){return e=gt.get(e),t=st(t),t=e.clamp(t),_t.create(t)},Ha:function(e,t,n,r){e=gt.get(e),t=ut(t,n),n=[];for(var i=0;i<t.length;++i)n.push(vt.get(t[i]));return r=e.concat(n,r),vt.create(r)},Ga:function(e,t,n){return e=gt.get(e),n=ct(n,(t=ft(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),vt.create(n)},Fa:function(e,t,n,r){return e=gt.get(e),t=vt.get(t),n=vt.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?ut(a()[r>>2],i()[r+4>>2]):void 0,strides:ut(a()[r+8>>2],i()[r+12>>2]),dilations:ut(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:vt.get(i()[r+60>>2]),activation:_t.get(i()[r+64>>2])},r=e.conv2d(t,n,r),vt.create(r)},Ea:function(e,n,r,a){return e=gt.get(e),n=vt.get(n),r=vt.get(r),a={c:vt.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),vt.create(a)},Da:function(e,n,r,a,o,u,c){return e=gt.get(e),n=vt.get(n),r=vt.get(r),a=vt.get(a),c={bias:vt.get(i()[c>>2]),recurrentBias:vt.get(i()[c+4>>2]),initialHiddenState:vt.get(i()[c+8>>2]),resetAfter:0!==t()[c+12>>0],returnSequence:0!==t()[c+13>>0],direction:at[i()[c+16>>2]],layout:ot[i()[c+20>>2]],activations:At.get(i()[c+24>>2])},o=e.gru(n,r,a,o,u,c),wt.create(o)},Ca:function(e,t,n){return e=gt.get(e),t=V(t),n=ft(n),n=e.input(t,n),vt.create(n)},Ba:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=lt(n),n=e.leakyRelu(t,n),vt.create(n)},Aa:function(e,t){return e=gt.get(e),t=lt(t),t=e.leakyRelu(t),_t.create(t)},za:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=vt.get(n),n=e.matmul(t,n),vt.create(n)},ya:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=dt(n),n=e.maxPool2d(t,n),vt.create(n)},ma:function(e){gt.release(e)},xa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.relu(t),vt.create(t)},va:function(e){return e=gt.get(e).relu(),_t.create(e)},ua:function(e,t,n){e=gt.get(e),t=vt.get(t);var r=rt[i()[n>>2]],u=a()[n+4>>2],c=i()[n+8>>2];if(0!==u&&0!==c){for(var s=[],l=0;l<u;++l,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:r,scales:u,sizes:ut(a()[n+12>>2],i()[n+16>>2]),axes:ut(a()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),vt.create(n)},ta:function(e,t,n,r){return e=gt.get(e),t=vt.get(t),n=ut(r,n),n=e.reshape(t,n),vt.create(n)},sa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.sigmoid(t),vt.create(t)},ra:function(e){return e=gt.get(e).sigmoid(),_t.create(e)},qa:function(e,t,n,r,o){if(e=gt.get(e),t=vt.get(t),0!==r&&0!==n){for(var u=[],c=0;c<r;++c,n+=4)u.push(a()[n>>2]);n=u}else n=void 0;return 1==r&&(n=n[0]),r={axis:i()[o>>2]},r=e.split(t,n,r),wt.create(r)},pa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.tanh(t),vt.create(t)},oa:function(e){return e=gt.get(e).tanh(),_t.create(e)},na:function(e,t,n){return e=gt.get(e),t=vt.get(t),n={permutation:ut(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),vt.create(n)},Qa:function(e,t,n){return e=ht.get(e),t=mt.get(t),n=bt.get(n),e.compute(t,n)},Pa:function(e){ht.nc(e)},Oa:function(e){ht.release(e)},ka:function(e){mt.release(e)},la:function(e,t,n){e=mt.get(e),t=V(t),n=0===i()[n+12>>2]?ct(n+0):{resource:ct(n+0),dimensions:ut(a()[n+16>>2],i()[n+12>>2])},e[t]=n},ia:function(e){yt.release(e)},ja:function(e,t,n){e=yt.get(e),t=V(t),n=vt.get(n),e[t]=n},ga:function(e){bt.release(e)},ha:function(e,t,n){e=bt.get(e),t=V(t),n=ct(n),e[t]=n},da:function(e,t){return e=wt.get(e)[t],vt.create(e)},ca:function(e){wt.release(e)},fa:function(e){vt.nc(e)},ea:function(e){vt.release(e)},Z:function(e){At.nc(e)},Y:function(e){At.release(e)},_:function(e,t){e=At.get(e),t=_t.get(t),e.push(t)},aa:function(e){_t.nc(e)},$:function(e){_t.release(e)},Ua:Wt,g:function(e,t,n,r){return Wt(e,t,n,r)},X:function(e){return e=pt.get(e),e=new MLGraphBuilder(e),gt.create(e)},W:function(){return mt.create({})},V:function(){return yt.create({})},U:function(){return bt.create({})},T:function(){return At.create([])}};!function(){function e(e,t){c.asm=e.exports,ee=c.asm.Cb,ne.unshift(c.asm.hb),we.Cc.push(c.asm.Hb),P=t,O||(se--,c.monitorRunDependencies&&c.monitorRunDependencies(se),0==se&&(null!==le&&(clearInterval(le),le=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(w||_)){if(\\\"function\\\"==typeof fetch&&!ce.startsWith(\\\"file://\\\"))return fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ce+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return he()}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){D(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:zt};if(O||(se++,c.monitorRunDependencies&&c.monitorRunDependencies(se)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return D(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(x||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||ce.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return D(\\\"wasm streaming compile failed: \\\"+e),D(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.hb).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.ib).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.jb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.kb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.lb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.mb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.nb).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.ob).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.pb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.qb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.rb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.sb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.tb).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.ub).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.vb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.wb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.xb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.yb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.zb).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Ab).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Bb).apply(null,arguments)};var Yt=c._malloc=function(){return(Yt=c._malloc=c.asm.Db).apply(null,arguments)},Bt=c.___errno_location=function(){return(Bt=c.___errno_location=c.asm.Eb).apply(null,arguments)},Nt=c._free=function(){return(Nt=c._free=c.asm.Fb).apply(null,arguments)},Gt=c._pthread_self=function(){return(Gt=c._pthread_self=c.asm.Gb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Ib).apply(null,arguments)};var $t,Vt=c._emscripten_register_main_browser_thread_id=function(){return(Vt=c._emscripten_register_main_browser_thread_id=c.asm.Jb).apply(null,arguments)},qt=c._emscripten_main_browser_thread_id=function(){return(qt=c._emscripten_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Xt=c._emscripten_sync_run_in_main_thread_4=function(){return(Xt=c._emscripten_sync_run_in_main_thread_4=c.asm.Lb).apply(null,arguments)},Jt=c._emscripten_main_thread_process_queued_calls=function(){return(Jt=c._emscripten_main_thread_process_queued_calls=c.asm.Mb).apply(null,arguments)},Qt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Qt=c._emscripten_run_in_main_runtime_thread_js=c.asm.Nb).apply(null,arguments)},Zt=c.__emscripten_call_on_thread=function(){return(Zt=c.__emscripten_call_on_thread=c.asm.Ob).apply(null,arguments)},Kt=c._pthread_testcancel=function(){return(Kt=c._pthread_testcancel=c.asm.Pb).apply(null,arguments)},en=c._pthread_exit=function(){return(en=c._pthread_exit=c.asm.Qb).apply(null,arguments)},tn=c.__emscripten_thread_init=function(){return(tn=c.__emscripten_thread_init=c.asm.Rb).apply(null,arguments)},nn=c._emscripten_get_global_libc=function(){return(nn=c._emscripten_get_global_libc=c.asm.Sb).apply(null,arguments)},rn=c.___pthread_tsd_run_dtors=function(){return(rn=c.___pthread_tsd_run_dtors=c.asm.Tb).apply(null,arguments)},an=c.__get_tzname=function(){return(an=c.__get_tzname=c.asm.Ub).apply(null,arguments)},on=c.__get_daylight=function(){return(on=c.__get_daylight=c.asm.Vb).apply(null,arguments)},un=c.__get_timezone=function(){return(un=c.__get_timezone=c.asm.Wb).apply(null,arguments)},cn=c.stackSave=function(){return(cn=c.stackSave=c.asm.Xb).apply(null,arguments)},sn=c.stackRestore=function(){return(sn=c.stackRestore=c.asm.Yb).apply(null,arguments)},ln=c.stackAlloc=function(){return(ln=c.stackAlloc=c.asm.Zb).apply(null,arguments)},fn=c._emscripten_stack_set_limits=function(){return(fn=c._emscripten_stack_set_limits=c.asm._b).apply(null,arguments)},dn=c._memalign=function(){return(dn=c._memalign=c.asm.$b).apply(null,arguments)},pn=c.__emscripten_allow_main_runtime_queued_calls=999792,hn=c.__emscripten_main_thread_futex=1003796;function gn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function mn(){function e(){if(!$t&&($t=!0,c.calledRun=!0,!j)&&(O||me(ne),s(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!O)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();ie.unshift(e)}me(ie)}}if(!(0<se))if(O)s(c),O||me(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!O){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ue();me(te)}0<se||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function bn(e){if(C=e,O)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new gn(e);oe()||(we.Jc(),O||(me(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),xe[1].length&&ke(1,10),xe[2].length&&ke(2,10))),C=e,oe()||(we.Jc(),c.onExit&&c.onExit(e),j=!0),h(e,new gn(e))}if(c.UTF8ToString=V,c.stringToUTF8=X,c.lengthBytesUTF8=J,c.keepRuntimeAlive=oe,c.PThread=we,c.stackSave=cn,c.stackRestore=sn,c.stackAlloc=ln,c.PThread=we,c.wasmMemory=R,c.ExitStatus=gn,fe=function e(){$t||mn(),$t||(fe=e)},c.run=mn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return O&&(F=!1,we.Vc()),mn(),e.ready});e.exports=r},118:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,c,s,l,f,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,g=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";g?(m=h?n(908).dirname(m)+\\\"/\\\":\\\"//\\\",u=function(e,t){return l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFileSync(e,t?null:\\\"utf8\\\")},s=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||G(\\\"Assertion failed: undefined\\\"),e},c=function(e,t,r){l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",G),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||h)&&(h?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(s=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),c=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,y=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(b=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&G(\\\"no native wasm support detected\\\");var w,_,A,O,E,T,S,M=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&x)return x.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function D(e,t){return e?k(O,e,t):\\\"\\\"}function F(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function R(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function P(e){var t=R(e)+1,n=Ie(t);return n&&F(e,A,n,t),n}function C(){var e=w.buffer;_=e,t.HEAP8=A=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=E=new Int32Array(e),t.HEAPU8=O=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=T=new Uint32Array(e),t.HEAPF32=S=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var j,I=[],U=[],L=[],W=[];function H(){var e=t.preRun.shift();I.unshift(e)}var z,Y=0,B=null,N=null;function G(e){throw t.onAbort&&t.onAbort(e),v(e),M=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function $(){return z.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},z=\\\"ort-wasm.wasm\\\",!$()){var V=z;z=t.locateFile?t.locateFile(V,m):m+V}function q(){var e=z;try{if(e==z&&b)return new Uint8Array(b);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){G(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.Hb;\\\"number\\\"==typeof r?void 0===n.xb?j.get(r)():j.get(r)(n.xb):r(void 0===n.xb?null:n.xb)}}}function J(e){this.zb=e-16,this.Rb=function(e){E[this.zb+4>>2]=e},this.Ob=function(e){E[this.zb+8>>2]=e},this.Pb=function(){E[this.zb>>2]=0},this.Nb=function(){A[this.zb+12>>0]=0},this.Qb=function(){A[this.zb+13>>0]=0},this.Jb=function(e,t){this.Rb(e),this.Ob(t),this.Pb(),this.Nb(),this.Qb()}}var Q,Z={},K=[null,[],[]],ee={};Q=g?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),oe=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ue=[\\\"zrn\\\",\\\"rzn\\\"];function ce(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(E[t>>2]);return n}}function se(e,t=\\\"float32\\\"){const n=E[e>>2]+T[e+8>>2];return e=T[e+4>>2],\\\"float32\\\"===t||G(\\\"Assertion failed: undefined\\\"),new Float32Array(O.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function le(e){return{minValue:S[e>>2],maxValue:S[e+4>>2]}}function fe(e){return{type:ae[T[e>>2]],dimensions:ce(T[e+8>>2],E[e+4>>2])}}function de(e){return{windowDimensions:ce(T[e>>2],E[e+4>>2]),padding:\\\"explicit\\\"===te[E[e+32>>2]]?ce(T[e+8>>2],E[e+12>>2]):void 0,strides:ce(T[e+16>>2],E[e+20>>2]),dilations:ce(T[e+24>>2],E[e+28>>2]),autoPad:te[E[e+32>>2]],layout:re[E[e+36>>2]]}}var pe,he,ge,me,be,ye,ve,we,_e,Ae,Oe,Ee,Te={};function Se(){if(!Oe){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in Te)void 0===Te[e]?delete t[e]:t[e]=Te[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Oe=n}return Oe}function Me(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!Ee){Ee=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);E[ze()>>2]=60*a,E[He()>>2]=Number(t!=i),n=e(n),r=e(r),n=P(n),r=P(r),i<t?(E[We()>>2]=n,E[We()+4>>2]=r):(E[We()>>2]=r,E[We()+4>>2]=n)}}function xe(e){return 0==e%4&&(0!=e%100||0==e%400)}function ke(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var De=[31,29,31,30,31,30,31,31,30,31,30,31],Fe=[31,28,31,30,31,30,31,31,30,31,30,31];function Re(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(xe(e.getFullYear())?De:Fe)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pe(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){e=Re(new Date(e.vb+1900,0,1),e.Eb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var s=E[r+40>>2];for(var l in r={Ub:E[r>>2],Tb:E[r+4>>2],Cb:E[r+8>>2],Bb:E[r+12>>2],wb:E[r+16>>2],vb:E[r+20>>2],Db:E[r+24>>2],Eb:E[r+28>>2],bc:E[r+32>>2],Sb:E[r+36>>2],Vb:s?D(s):\\\"\\\"},n=D(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),s[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in s={\\\"%a\\\":function(e){return f[e.Db].substring(0,3)},\\\"%A\\\":function(e){return f[e.Db]},\\\"%b\\\":function(e){return d[e.wb].substring(0,3)},\\\"%B\\\":function(e){return d[e.wb]},\\\"%C\\\":function(e){return a((e.vb+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.Bb,2)},\\\"%e\\\":function(e){return i(e.Bb,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return a(e.Cb,2)},\\\"%I\\\":function(e){return 0==(e=e.Cb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.Bb+ke(xe(e.vb+1900)?De:Fe,e.wb-1),3)},\\\"%m\\\":function(e){return a(e.wb+1,2)},\\\"%M\\\":function(e){return a(e.Tb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Cb&&12>e.Cb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Ub,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Db||7},\\\"%U\\\":function(e){var t=new Date(e.vb+1900,0,1),n=0===t.getDay()?t:Re(t,7-t.getDay());return 0>o(n,e=new Date(e.vb+1900,e.wb,e.Bb))?a(Math.ceil((31-n.getDate()+(ke(xe(e.getFullYear())?De:Fe,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.vb+1901,0,4),n=u(new Date(e.vb+1900,0,4));t=u(t);var r=Re(new Date(e.vb+1900,0,1),e.Eb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.vb+1900?e.Eb+32-n.getDate():e.Eb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Db},\\\"%W\\\":function(e){var t=new Date(e.vb,0,1),n=1===t.getDay()?t:Re(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.vb+1900,e.wb,e.Bb))?a(Math.ceil((31-n.getDate()+(ke(xe(e.getFullYear())?De:Fe,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.vb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.vb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Sb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Vb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),s[l](r)));return(l=function(e){var t=Array(R(e)+1);return F(e,t,0,t.length),t}(n)).length>t?0:(A.set(l,e),l.length-1)}pe||(pe=pe||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},he=he||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ge=ge||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},me=me||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},be=be||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ye=ye||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ve=ve||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},we=we||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},_e=_e||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},Ae=Ae||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}});var Ce={a:function(e){return Ie(e+16)+16},c:function(e,t){L.unshift({Hb:e,xb:t})},f:function(e,t){L.unshift({Hb:e,xb:t})},b:function(e,t,n){throw new J(e).Jb(t,n),e},Q:function(e,t){return e=D(e),ee.Wb(e,t)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(e,t){return e=D(e),ee.Xb(e,t)},W:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=Ge(65536,e);o?(O.fill(0,o,o+e),e=o):e=0,e?(Z[e]={Lb:e,Kb:t,Ib:!0,fd:i,ac:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},V:function(e,t){var n=Z[e];return 0!==t&&n?(t===n.Kb&&(Z[e]=null,n.Ib&&Le(n.Lb)),e=0):e=-28,e},n:function(){},O:function(e,t,n){return e=D(e),ee.Yb(e,t,n)},M:function(){},u:function(){},N:function(){},k:function(){G()},B:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return E[Ue()>>2]=28,-1;e=Q()}return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e6|0,0},X:function(e,t){return e-t},Oa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Pa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Na:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return 2147483648},G:function(e,t,n){O.copyWithin(e,t,t+n)},m:function(e){var t=O.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{w.grow(Math.min(2147483648,r)-_.byteLength+65535>>>16),C();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},L:function(e){for(var t=Q();Q()-t<e;);},La:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][T[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][T[e+4>>2]]}),pe.create(navigator.ml.createContext(t))},J:function(e,t){var n=0;return Se().forEach((function(r,i){var a=t+n;for(i=E[e+4*i>>2]=a,a=0;a<r.length;++a)A[i++>>0]=r.charCodeAt(a);A[i>>0]=0,n+=r.length+1})),0},K:function(e,t){var n=Se();E[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),E[t>>2]=r,0},i:function(){return 0},I:function(e,t){return e=1==e||2==e?2:G(),A[t>>0]=e,0},r:function(e,t,n,r){return e=ee.$b(e),t=ee.Zb(e,t,n),E[r>>2]=t,0},F:function(){},s:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=E[t+8*a>>2],u=E[t+(8*a+4)>>2],c=0;c<u;c++){var s=O[o+c],l=K[e];0===s||10===s?((1===e?y:v)(k(l,0)),l.length=0):l.push(s)}i+=u}return E[r>>2]=i,0},ra:function(e){var t=Date.now();return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e3|0,0},da:function e(t,n){return t=new Date(1e3*E[t>>2]),E[n>>2]=t.getUTCSeconds(),E[n+4>>2]=t.getUTCMinutes(),E[n+8>>2]=t.getUTCHours(),E[n+12>>2]=t.getUTCDate(),E[n+16>>2]=t.getUTCMonth(),E[n+20>>2]=t.getUTCFullYear()-1900,E[n+24>>2]=t.getUTCDay(),E[n+36>>2]=0,E[n+32>>2]=0,E[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.Gb||(e.Gb=P(\\\"GMT\\\")),E[n+40>>2]=e.Gb,n},w:function(e,t){Me(),e=new Date(1e3*E[e>>2]),E[t>>2]=e.getSeconds(),E[t+4>>2]=e.getMinutes(),E[t+8>>2]=e.getHours(),E[t+12>>2]=e.getDate(),E[t+16>>2]=e.getMonth(),E[t+20>>2]=e.getFullYear()-1900,E[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);E[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,E[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),E[t+32>>2]=e,e=E[We()+(e?4:0)>>2],E[t+40>>2]=e,t},q:function(e){Me();var t=new Date(E[e+20>>2]+1900,E[e+16>>2],E[e+12>>2],E[e+8>>2],E[e+4>>2],E[e>>2],0),n=E[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?E[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),E[e+24>>2]=t.getDay(),E[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,E[e>>2]=t.getSeconds(),E[e+4>>2]=t.getMinutes(),E[e+8>>2]=t.getHours(),E[e+12>>2]=t.getDate(),E[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},E:function(e){pe.Ab(e)},D:function(e){pe.release(e)},Ia:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=ve.get(n),n=e.add(t,n),ve.create(n)},Ha:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=de(n),n=e.averagePool2d(t,n),ve.create(n)},Ga:function(e,t,n,r,i){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r=ve.get(r),i={scale:ve.get(E[i>>2]),bias:ve.get(E[i+4>>2]),axis:E[i+8>>2],epsilon:S[i+12>>2],activation:_e.get(E[i+16>>2])},i=e.batchNormalization(t,n,r,i),ve.create(i)},Fa:function(e,t){e=ge.get(e),t=ye.get(t);try{var n=e.build(t);return he.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ea:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=e.clamp(t,le(n)),ve.create(n)},Da:function(e,t){return e=ge.get(e).clamp(le(t)),_e.create(e)},Ca:function(e,t,n,r){e=ge.get(e),t=ce(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ve.get(t[i]));return r=e.concat(n,r),ve.create(r)},Ba:function(e,t,n){return e=ge.get(e),n=se(n,(t=fe(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ve.create(n)},Aa:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r={padding:\\\"explicit\\\"===te[E[r+40>>2]]?ce(T[r>>2],E[r+4>>2]):void 0,strides:ce(T[r+8>>2],E[r+12>>2]),dilations:ce(T[r+16>>2],E[r+20>>2]),autoPad:te[E[r+40>>2]],groups:E[r+48>>2],inputLayout:re[E[r+52>>2]],filterLayout:ne[E[r+56>>2]],bias:ve.get(E[r+60>>2]),activation:_e.get(E[r+64>>2])},r=e.conv2d(t,n,r),ve.create(r)},za:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r={c:ve.get(E[r>>2]),alpha:S[r+4>>2],beta:S[r+8>>2],aTranspose:0!==A[r+12>>0],bTranspose:0!==A[r+13>>0]},r=e.gemm(t,n,r),ve.create(r)},ya:function(e,t,n,r,i,a,o){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r=ve.get(r),o={bias:ve.get(E[o>>2]),recurrentBias:ve.get(E[o+4>>2]),initialHiddenState:ve.get(E[o+8>>2]),resetAfter:0!==A[o+12>>0],returnSequence:0!==A[o+13>>0],direction:oe[E[o+16>>2]],layout:ue[E[o+20>>2]],activations:Ae.get(E[o+24>>2])},i=e.gru(t,n,r,i,a,o),we.create(i)},xa:function(e,t,n){return e=ge.get(e),t=D(t),n=fe(n),n=e.input(t,n),ve.create(n)},wa:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=e.leakyRelu(t,{alpha:S[n>>2]}),ve.create(n)},va:function(e,t){return e=ge.get(e).leakyRelu({alpha:S[t>>2]}),_e.create(e)},ua:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=ve.get(n),n=e.matmul(t,n),ve.create(n)},ta:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=de(n),n=e.maxPool2d(t,n),ve.create(n)},x:function(e){ge.release(e)},sa:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.relu(t),ve.create(t)},A:function(e){return e=ge.get(e).relu(),_e.create(e)},qa:function(e,t,n){e=ge.get(e),t=ve.get(t);var r=ie[E[n>>2]],i=T[n+4>>2],a=E[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(S[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:ce(T[n+12>>2],E[n+16>>2]),axes:ce(T[n+20>>2],E[n+24>>2])},n=e.resample2d(t,n),ve.create(n)},pa:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ce(r,n),n=e.reshape(t,n),ve.create(n)},oa:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.sigmoid(t),ve.create(t)},z:function(e){return e=ge.get(e).sigmoid(),_e.create(e)},na:function(e,t,n,r,i){if(e=ge.get(e),t=ve.get(t),0!==r&&0!==n){for(var a=[],o=0;o<r;++o,n+=4)a.push(T[n>>2]);n=a}else n=void 0;return 1==r&&(n=n[0]),r=e.split(t,n,{axis:E[i>>2]}),we.create(r)},ma:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.tanh(t),ve.create(t)},y:function(e){return e=ge.get(e).tanh(),_e.create(e)},la:function(e,t,n){return e=ge.get(e),t=ve.get(t),n={permutation:ce(T[n>>2],E[n+4>>2])},n=e.transpose(t,n),ve.create(n)},Ka:function(e,t,n){return e=he.get(e),t=me.get(t),n=be.get(n),e.compute(t,n)},Ja:function(e){he.Ab(e)},C:function(e){he.release(e)},ja:function(e){me.release(e)},ka:function(e,t,n){e=me.get(e),t=D(t),n=0===E[n+12>>2]?se(n+0):{resource:se(n+0),dimensions:ce(T[n+16>>2],E[n+12>>2])},e[t]=n},ha:function(e){ye.release(e)},ia:function(e,t,n){e=ye.get(e),t=D(t),n=ve.get(n),e[t]=n},fa:function(e){be.release(e)},ga:function(e,t,n){e=be.get(e),t=D(t),n=se(n),e[t]=n},l:function(e,t){return e=we.get(e)[t],ve.create(e)},v:function(e){we.release(e)},e:function(e){ve.Ab(e)},d:function(e){ve.release(e)},ba:function(e){Ae.Ab(e)},o:function(e){Ae.release(e)},ca:function(e,t){e=Ae.get(e),t=_e.get(t),e.push(t)},ea:function(e){_e.Ab(e)},h:function(e){_e.release(e)},Ma:Pe,g:function(e,t,n,r){return Pe(e,t,n,r)},aa:function(e){return e=pe.get(e),e=new MLGraphBuilder(e),ge.create(e)},$:function(){return me.create({})},_:function(){return ye.create({})},Z:function(){return be.create({})},Y:function(){return Ae.create([])}};!function(){function e(e){t.asm=e.exports,w=t.asm.Qa,C(),j=t.asm.ub,U.unshift(t.asm.Ra),Y--,t.monitorRunDependencies&&t.monitorRunDependencies(Y),0==Y&&(null!==B&&(clearInterval(B),B=null),N&&(e=N,N=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!b&&(p||h)){if(\\\"function\\\"==typeof fetch&&!z.startsWith(\\\"file://\\\"))return fetch(z,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+z+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return q()}));if(c)return new Promise((function(e,t){c(z,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return q()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){v(\\\"failed to asynchronously prepare wasm: \\\"+e),G(e)}))}var a={a:Ce};if(Y++,t.monitorRunDependencies&&t.monitorRunDependencies(Y),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return v(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(b||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||$()||z.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(z,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return v(\\\"wasm streaming compile failed: \\\"+e),v(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ra).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Sa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ta).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Ua).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Va).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Wa).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Xa).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.Ya).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Za).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm._a).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.$a).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.ab).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.bb).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.cb).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.db).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.eb).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.fb).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.gb).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.hb).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.ib).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.jb).apply(null,arguments)};var je,Ie=t._malloc=function(){return(Ie=t._malloc=t.asm.kb).apply(null,arguments)},Ue=t.___errno_location=function(){return(Ue=t.___errno_location=t.asm.lb).apply(null,arguments)},Le=t._free=function(){return(Le=t._free=t.asm.mb).apply(null,arguments)},We=t.__get_tzname=function(){return(We=t.__get_tzname=t.asm.nb).apply(null,arguments)},He=t.__get_daylight=function(){return(He=t.__get_daylight=t.asm.ob).apply(null,arguments)},ze=t.__get_timezone=function(){return(ze=t.__get_timezone=t.asm.pb).apply(null,arguments)},Ye=t.stackSave=function(){return(Ye=t.stackSave=t.asm.qb).apply(null,arguments)},Be=t.stackRestore=function(){return(Be=t.stackRestore=t.asm.rb).apply(null,arguments)},Ne=t.stackAlloc=function(){return(Ne=t.stackAlloc=t.asm.sb).apply(null,arguments)},Ge=t._memalign=function(){return(Ge=t._memalign=t.asm.tb).apply(null,arguments)};function $e(){function e(){if(!je&&(je=!0,t.calledRun=!0,!M)){if(X(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();W.unshift(e)}X(W)}}if(!(0<Y)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)H();X(I),0<Y||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=D,t.stringToUTF8=function(e,t,n){return F(e,O,t,n)},t.lengthBytesUTF8=R,t.stackSave=Ye,t.stackRestore=Be,t.stackAlloc=Ne,N=function e(){je||$e(),je||(N=e)},t.run=$e,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return $e(),e.ready});e.exports=r},967:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,i)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,a])=>{const o=n?n+e:e;if(\\\"object\\\"==typeof a)t.iterateExtraOptions(a,o+\\\".\\\",r,i);else if(\\\"string\\\"==typeof a||\\\"number\\\"==typeof a)i(o,a.toString());else{if(\\\"boolean\\\"!=typeof a)throw new Error(\\\"Can't handle extra config type: \\\"+typeof a);i(o,a?\\\"1\\\":\\\"0\\\")}}))}},586:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(967),i=n(983),a=n(361);t.setRunOptions=e=>{const t=a.getInstance();let n=0;const o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);let a=0;if(void 0!==(null==e?void 0:e.tag)&&(a=i.allocWasmString(e.tag,o)),n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,a),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(967),i=n(983),a=n(361);t.setSessionOptions=e=>{const t=a.getInstance();let n=0;const o=[],u=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const a=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(u.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(u.executionMode=\\\"sequential\\\");const c=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(u.executionMode);let s=0;if(void 0!==(null==e?void 0:e.logId)&&(s=i.allocWasmString(e.logId,o)),void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);if(void 0===(null==e?void 0:e.enableProfiling)&&(u.enableProfiling=!1),n=t._OrtCreateSessionOptions(a,!!u.enableCpuMemArena,!!u.enableMemPattern,c,!!u.enableProfiling,0,s,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddSessionConfigEntry(n,a,u))throw new Error(`Can't set a session config entry: ${e} - ${r}`)})),null==e?void 0:e.executionProviders)for(const r of e.executionProviders)if(\\\"webnn\\\"===(\\\"string\\\"==typeof r?r:r.name)){let e=0;if(\\\"string\\\"!=typeof r){const t=r;(null==t?void 0:t.devicePreference)&&(e=t.devicePreference)}if(console.log(`webnn device preference: ${e}`),0!==t._OrtSessionOptionsAppendExecutionProviderWebNN(n,e))throw new Error(\\\"Can't append WebNN execution provider\\\");break}return[n,o]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),o.forEach(t._free),e}}},983:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const r=n(361);t.allocWasmString=(e,t)=>{const n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;const r=n(586),i=n(919),a=n(983),o=n(361);t.initOrt=(e,t)=>{const n=o.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=[];t.createSession=(e,t)=>{const n=o.getInstance(),r=n._malloc(e.byteLength);let a=0,c=0,s=[];try{if([c,s]=i.setSessionOptions(t),n.HEAPU8.set(e,r),a=n._OrtCreateSession(r,e.byteLength,c),0===a)throw new Error(\\\"Can't create a session\\\")}finally{n._free(r),n._OrtReleaseSessionOptions(c),s.forEach(n._free)}const l=n._OrtGetInputCount(a),f=n._OrtGetOutputCount(a),d=[],p=[],h=[],g=[];for(let e=0;e<l;e++){const t=n._OrtGetInputName(a,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");p.push(t),d.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(a,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");g.push(t),h.push(n.UTF8ToString(t))}return u.push([a,p,g]),[u.length-1,d,h]},t.releaseSession=e=>{const t=o.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),u[e]=void 0};const c=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},s=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(`unsupported data type: ${e}`)}},l=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}};t.run=(e,t,n,i,f)=>{const d=o.getInstance(),p=u[e];if(!p)throw new Error(\\\"invalid session id\\\");const h=p[0],g=p[1],m=p[2],b=t.length,y=i.length;let v=0,w=[];const _=[],A=[];try{[v,w]=r.setRunOptions(f);for(let e=0;e<b;e++){const t=n[e][0],r=n[e][1],i=n[e][2];let o,u;if(Array.isArray(i)){u=4*i.length,o=d._malloc(u),A.push(o);let e=o/4;for(let t=0;t<i.length;t++){if(\\\"string\\\"!=typeof i[t])throw new TypeError(`tensor data at index ${t} is not a string`);d.HEAPU32[e++]=a.allocWasmString(i[t],A)}}else u=i.byteLength,o=d._malloc(u),A.push(o),d.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,u),o);const s=d.stackSave(),l=d.stackAlloc(4*r.length);try{let e=l/4;r.forEach((t=>d.HEAP32[e++]=t));const n=d._OrtCreateTensor(c(t),o,u,l,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");_.push(n)}finally{d.stackRestore(s)}}const e=d.stackSave(),o=d.stackAlloc(4*b),u=d.stackAlloc(4*b),p=d.stackAlloc(4*y),O=d.stackAlloc(4*y);try{let n=o/4,r=u/4,a=p/4,c=O/4;for(let e=0;e<b;e++)d.HEAPU32[n++]=_[e],d.HEAPU32[r++]=g[t[e]];for(let e=0;e<y;e++)d.HEAPU32[a++]=0,d.HEAPU32[c++]=m[i[e]];let f=d._OrtRun(h,u,o,b,O,y,p,v);const w=[];if(0===f)for(let e=0;e<y;e++){const t=d.HEAPU32[p/4+e],n=d.stackSave(),r=d.stackAlloc(16);let i,a=0;try{if(f=d._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==f)throw new Error(`Can't get a tensor data. error code = ${f}`);let e=r/4;const o=d.HEAPU32[e++];a=d.HEAPU32[e++];const u=d.HEAPU32[e++],c=d.HEAPU32[e++],p=[];for(let e=0;e<c;e++)p.push(d.HEAPU32[u/4+e]);d._OrtFree(u);const h=0===p.length?1:p.reduce(((e,t)=>e*t));if(i=s(o),\\\"string\\\"===i){const e=[];let t=a/4;for(let n=0;n<h;n++){const r=d.HEAPU32[t++],i=n===h-1?void 0:d.HEAPU32[t]-r;e.push(d.UTF8ToString(r,i))}w.push([i,p,e])}else{const e=new(l(i))(h);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(d.HEAPU8.subarray(a,a+e.byteLength)),w.push([i,p,e])}}finally{d.stackRestore(n),\\\"string\\\"===i&&a&&d._free(a),d._OrtReleaseTensor(t)}}if(0===f)return w;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{d.stackRestore(e)}}finally{_.forEach(d._OrtReleaseTensor),A.forEach(d._free),d._OrtReleaseRunOptions(v),w.forEach(d._free)}},t.endProfiling=e=>{const t=o.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}c((r=r.apply(e,t||[])).next())}))},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const c=a(n(449)),s=u(n(474)),l=u(n(932));let f,d=!1,p=!1,h=!1;const g=(e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";t.initializeWebAssembly=e=>o(void 0,void 0,void 0,(function*(){if(d)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),o=i&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})(),u=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,m=g(!1,a),b=g(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[b]:void 0;let v=!1;const w=[];if(t>0&&w.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),w.push(new Promise(((e,t)=>{const r=a?s.default:l.default,i={locateFile:(e,t)=>{if(e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob)return URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"}));if(e===m){const e=null!=u?u:t;return null!=y?y:e+b}return t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=c.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${s.default.toString()}})();`;i.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(i).then((t=>{p=!1,d=!0,f=t,e()}),(e=>{p=!1,h=!0,t(e)}))}))),yield Promise.race(w),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)})),t.getInstance=()=>{if(d&&f)return f;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!d||p||h||(p=!0,null===(e=f.PThread)||void 0===e||e.terminateAllThreads(),f=void 0,p=!1,d=!1,h=!0)}},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const e=n(349),t=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})));break;case\\\"init-ort\\\":try{const{numThreads:t,loggingLevel:r}=n.data.in;e.initOrt(t,r),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,i=e.createSession(t,r);postMessage({type:\\\"create\\\",out:i})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;e.releaseSession(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:i,outputIndices:a,options:o}=n.data.in,u=e.run(t,r,i,a,o);postMessage({type:\\\"run\\\",out:u},e.extractTransferableBuffers(u))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;e.endProfiling(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}