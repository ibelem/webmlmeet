{"version":3,"sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__2174__","_scriptDir","e","document","currentScript","src","t","R","buffer","j","$","W","n","Y","r","U","q","o","B","G","u","c","s","ready","Promise","f","l","hasOwnProperty","d","p","h","m","b","g","_","y","window","w","importScripts","v","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","O","T","locateFile","__dirname","normalize","readFileSync","Uint8Array","Z","readFile","argv","length","replace","slice","on","sn","le","oe","exitCode","exit","inspect","Worker","x","console","error","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","S","k","print","log","bind","M","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","P","I","F","TextDecoder","this","decode","SharedArrayBuffer","call","N","H","subarray","String","fromCharCode","L","z","charCodeAt","V","Q","X","Ft","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","J","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","K","ee","te","ne","re","ie","ae","preRun","shift","unshift","ue","ce","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","he","999828","me","Ec","Wb","get","be","Atomics","load","cn","compareExchange","notify","ge","ye","Rb","ic","worker","_emscripten_futex_wake","_e","Ub","Tb","qc","qd","Ic","store","Qt","qt","Jc","receiveObjectTransfer","Pc","threadInit","Zc","threadCancel","Yc","threadExit","yc","setExitStatus","Rc","pc","vc","pop","$t","wc","Yt","postMessage","cmd","xc","terminate","Qb","nc","Sb","Wt","mc","Vb","Qc","push","splice","un","Lc","onmessage","data","Cc","targetThread","wd","transferList","Nt","Oe","thread","loaded","ac","threadId","text","alert","ln","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","zc","Fc","ed","now","we","Date","jt","ve","Le","Ae","$b","Wc","Tc","Uc","Sc","Vc","Gc","fc","Xb","detached","Xt","start_routine","Xc","arg","threadInfoStruct","stackBase","stackSize","time","dd","Te","exchange","wait","xe","establishStackSpace","nn","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","Se","ke","Me","De","kd","Re","Ce","Pe","Ie","Ze","Fe","ld","je","Math","ceil","an","fill","Nc","Kc","Ac","fd","td","flags","offset","We","Ye","Ue","md","qe","Be","Ge","Ne","He","arguments","tn","rn","Ht","ze","Ve","Qe","querySelector","Xe","ec","uc","hd","Lt","dc","cc","getParameter","width","height","viewport","$e","Je","Ke","et","tt","nt","rt","split","it","ot","BYTES_PER_ELEMENT","at","alpha","ut","type","dimensions","ct","windowDimensions","padding","strides","dilations","autoPad","layout","st","ft","lt","dt","pt","ht","mt","bt","gt","_t","yt","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","wt","forEach","vt","At","Ot","Tt","od","nd","xt","Et","St","toTimeString","match","Bc","getFullYear","getTimezoneOffset","max","en","Kt","Number","Jt","kt","Mt","Dt","Rt","Ct","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Pt","toString","getDay","Pb","lc","bd","ad","jc","bc","Yb","kc","xd","$c","cd","RegExp","substring","abs","includes","Array","set","Zb","Oc","create","oc","object","hc","release","It","Zt","Gt","gd","Bt","zt","aa","Ta","ba","ca","apply","copyWithin","hardwareConcurrency","min","grow","setTimeout","stack","Vt","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Mc","rd","sc","Dc","ud","vd","tc","getContext","WebGLRenderingContext","pd","attributes","version","canvas","Hc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","jd","sd","getSupportedExtensions","Ra","devicePreference","ml","createContext","Ua","ua","Va","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","rc","getSeconds","getMinutes","getHours","setTime","Qa","Pa","La","add","Ka","averagePool2d","Ja","scale","bias","axis","epsilon","activation","batchNormalization","Ia","build","Ha","minValue","maxValue","clamp","Ga","concat","Fa","constant","Ea","groups","inputLayout","filterLayout","conv2d","Da","beta","aTranspose","bTranspose","gemm","Ca","input","Ba","leakyRelu","Aa","za","matmul","ya","maxPool2d","ra","xa","relu","wa","va","mode","scales","sizes","axes","resample2d","ta","reshape","sa","permutation","transpose","Oa","compute","Na","Ma","pa","qa","resource","na","oa","la","ma","ka","ja","ia","ha","Sa","ga","MLGraphBuilder","fa","ea","da","asm","pb","Wa","ub","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Xa","_OrtCreateSessionOptions","Ya","_OrtSessionOptionsAppendExecutionProviderWebNN","Za","_OrtAddSessionConfigEntry","_a","_OrtReleaseSessionOptions","$a","_OrtCreateSession","ab","_OrtReleaseSession","bb","_OrtGetInputCount","cb","_OrtGetOutputCount","db","_OrtGetInputName","eb","_OrtGetOutputName","fb","_OrtFree","gb","_OrtCreateTensor","hb","_OrtGetTensorData","ib","_OrtReleaseTensor","jb","_OrtCreateRunOptions","kb","_OrtAddRunConfigEntry","lb","_OrtReleaseRunOptions","mb","_OrtRun","nb","_OrtEndProfiling","ob","_malloc","qb","___errno_location","rb","_free","sb","_pthread_self","tb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","vb","Ut","_emscripten_register_main_browser_thread_id","wb","_emscripten_main_browser_thread_id","xb","_emscripten_sync_run_in_main_thread_4","yb","_emscripten_main_thread_process_queued_calls","zb","_emscripten_run_in_main_runtime_thread_js","Ab","__emscripten_call_on_thread","Bb","_pthread_testcancel","Cb","_pthread_exit","Db","__emscripten_thread_init","Eb","_emscripten_get_global_libc","Fb","___pthread_tsd_run_dtors","Gb","__get_tzname","Hb","__get_daylight","Ib","__get_timezone","Jb","stackSave","Kb","stackRestore","Lb","stackAlloc","Mb","_emscripten_stack_set_limits","Nb","_memalign","Ob","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","fn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","ArrayBuffer","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","momentum","spatial","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"mappings":"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AAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,I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","file":"ort-web.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__2174__) {\nreturn ","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return R.buffer!=j&&$(R.buffer),W}function n(){return R.buffer!=j&&$(R.buffer),Y}function r(){return R.buffer!=j&&$(R.buffer),U}function i(){return R.buffer!=j&&$(R.buffer),q}function o(){return R.buffer!=j&&$(R.buffer),B}function a(){return R.buffer!=j&&$(R.buffer),G}var u,c,s;e=e||{},u||(u=void 0!==e?e:{}),u.ready=new Promise((function(e,t){c=e,s=t}));var f,l={};for(f in u)u.hasOwnProperty(f)&&(l[f]=u[f]);var d=\"./this.program\";function p(e,t){throw t}var h,m,b,g,_,y=\"object\"==typeof window,w=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=u.ENVIRONMENT_IS_PTHREAD||!1,O=\"\";function T(e){return u.locateFile?u.locateFile(e,O):O+e}if(v){if(O=w?require(\"path\").dirname(O)+\"/\":__dirname+\"/\",h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof sn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},u.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||w)&&(w?O=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(O=document.currentScript.src),_scriptDir&&(O=_scriptDir),O=0!==O.indexOf(\"blob:\")?O.substr(0,O.lastIndexOf(\"/\")+1):\"\",v?(h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},w&&(b=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,S,k=u.print||console.log.bind(console),M=u.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(u[f]=l[f]);l=null,u.thisProgram&&(d=u.thisProgram),u.quit&&(p=u.quit),u.wasmBinary&&(S=u.wasmBinary);var D=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var R,C,P,I=!1;function Z(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var j,W,Y,U,q,B,G,N=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&N)return N.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?H(n(),e,t):\"\"}function z(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function V(e,t,r){return z(e,n(),t,r)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function X(e){var n=Q(e)+1,r=Ft(n);return r&&z(e,t(),r,n),r}function $(e){j=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=Y=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=q=new Uint32Array(e),u.HEAPF32=B=new Float32Array(e),u.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(j=u.buffer);var J=u.INITIAL_MEMORY||16777216;if(A)R=u.wasmMemory,j=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:J/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");R&&(j=R.buffer),J=j.byteLength,$(j);var K,ee=[],te=[],ne=[],re=[],ie=0;function oe(){return D||0<ie}function ae(){var e=u.preRun.shift();ee.unshift(e)}var ue,ce=0,se=null,fe=null;function le(e){throw u.onAbort&&u.onAbort(e),Z(!A),M(e),I=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ue.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ue;try{if(e==ue&&S)return new Uint8Array(S);if(b)return b(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue=\"ort-wasm-threaded.wasm\",de()||(ue=T(ue));var he={999828:function(){throw\"Canceled!\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(u);else{var n=t.Ec;\"number\"==typeof n?void 0===t.Wb?K.get(n)():K.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),cn>>2),o=0;if(i==e&&Atomics.compareExchange(r(),cn>>2,i,0)==i&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+o;throw\"Atomics.notify returned an unexpected value \"+e}function ge(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.Rb[e];t&&(r()[e+12>>2]=0,ye.ic(t.worker))}u._emscripten_futex_wake=be;var _e,ye={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ft(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ft(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),Qt(e,!w,1),qt(e)},Jc:function(){ye.receiveObjectTransfer=ye.Pc,ye.threadInit=ye.Zc,ye.threadCancel=ye.Yc,ye.threadExit=ye.yc,ye.setExitStatus=ye.Rc},Rb:{},pc:[],vc:function(){for(;0<ye.pc.length;)ye.pc.pop()();$t()},wc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.vc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),be(e+0,2147483647),Qt(0,0,0)},Rc:function(e){P=e},yc:function(e){var t=Yt();t&&(ye.wc(t,e),A&&postMessage({cmd:\"exit\"}))},Yc:function(){ye.wc(Yt(),-1),postMessage({cmd:\"cancelDone\"})},xc:function(){for(var e in ye.Rb){var t=ye.Rb[e];t&&t.worker&&ye.ic(t.worker)}for(ye.Rb={},e=0;e<ye.Ub.length;++e){var n=ye.Ub[e];n.terminate()}for(ye.Ub=[],e=0;e<ye.Tb.length;++e)t=(n=ye.Tb[e]).Qb,ye.nc(t),n.terminate();ye.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=r()[e.Sb+100>>2];r()[e.Sb+100>>2]=0,Wt(t),Wt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Wt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){ye.Qc((function(){delete ye.Rb[e.Qb.Sb],ye.Ub.push(e),ye.Tb.splice(ye.Tb.indexOf(e),1),ye.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){r()[un>>2]=0;try{e()}finally{r()[un>>2]=1}},Pc:function(){},Zc:function(){for(var e in ye.qc)ye.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var o=n.data,a=o.cmd;if(e.Qb&&(ye.Cc=e.Qb.Sb),o.targetThread&&o.targetThread!=Yt()){var u=ye.Rb[o.wd];u?u.worker.postMessage(n.data,o.transferList):M('Internal error! Worker sent a message \"'+a+'\" to target pthread '+o.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Nt();else if(\"spawnThread\"===a)Oe(n.data);else if(\"cleanupThread\"===a)ge(o.thread);else if(\"killThread\"===a){if(n=o.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,o=ye.Rb[n],delete ye.Rb[n],o.worker.terminate(),ye.nc(o),ye.Tb.splice(ye.Tb.indexOf(o.worker),1),o.worker.Qb=void 0}else if(\"cancelThread\"===a){if(n=o.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.Rb[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\"print\"===a)k(\"Thread \"+o.threadId+\": \"+o.text);else if(\"printErr\"===a)M(\"Thread \"+o.threadId+\": \"+o.text);else if(\"alert\"===a)alert(\"Thread \"+o.threadId+\": \"+o.text);else if(\"exit\"===a)e.Qb&&Atomics.load(i(),e.Qb.Sb+64>>2)&&ye.ic(e);else if(\"exitProcess\"===a)try{ln(o.returnCode)}catch(e){if(e instanceof sn)return;throw e}else\"cancelDone\"===a?ye.ic(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):M(\"worker sent an unknown command \"+a));ye.Cc=void 0},e.onerror=function(e){M(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},v&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},zc:function(){var e=T(\"ort-wasm-threaded.worker.js\");ye.Ub.push(new Worker(e))},Fc:function(){return 0==ye.Ub.length&&(ye.zc(),ye.Lc(ye.Ub[0])),ye.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[jt()>>2]=28,-1;e=_e()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function ve(e,t){if(A)return Le(1,1,e,t);ne.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){r()[this.$b+4>>2]=e},this.Tc=function(e){r()[this.$b+8>>2]=e},this.Uc=function(){r()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Oe(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\"Internal error!\";if(!e.fc)throw\"Internal error, no pthread ptr!\";ye.Tb.push(t);for(var n=Ft(512),o=0;128>o;++o)r()[n+4*o>>2]=0;var a=e.Vb+e.Xb,u=(o=ye.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.Sb),Atomics.store(i(),u+20,e.Xb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Xb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),n=Xt()+40,Atomics.store(i(),u+43,n),t.Qb=o;var c={cmd:\"run\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){c.time=performance.now(),t.postMessage(c,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Te(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var o=performance.now();for(i=o+i,Atomics.exchange(r(),cn>>2,e);;){if((o=performance.now())>i)return Atomics.exchange(r(),cn>>2,0),-73;if(0==(o=Atomics.exchange(r(),cn>>2,0)))break;if(Nt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),cn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){v||w||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,M(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}u.establishStackSpace=function(e,t){on(e,t),nn(e)},u.invokeEntryPoint=function(e,t){return K.get(e)(t)},_e=v?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-u.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},Se=[null,[],[]];function ke(e,t){var n=Se[e];0===t||10===t?((1===e?k:M)(H(n,0)),n.length=0):n.push(t)}var Me={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),Me.kd(e,t))}function Re(e,t,n){return A?Le(3,1,e,t,n):0}function Ce(e,t){if(A)return Le(4,1,e,t)}function Pe(e,t,n){if(A)return Le(5,1,e,t,n)}function Ie(e,t,n){return A?Le(6,1,e,t,n):0}function Ze(e,t){if(A)return Le(7,1,e,t)}function Fe(e,t){return A?Le(8,1,e,t):(e=L(e),Me.ld(e,t))}function je(e,t,r,i,o,a){if(A)t=Le(9,1,e,t,r,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=an(65536,u))?n().fill(0,e,e+u):e=0,e?(Ee[e]={Nc:e,Kc:t,Ac:!0,fd:o,td:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function We(e,t){if(A)e=Le(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Kc&&(Ee[e]=null,n.Ac&&Wt(n.Nc)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Le(11,1,e,t,n)}function Ue(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),Me.md(e,t,n))}function qe(e){if(A)return Le(13,1,e)}function Be(e,t){if(A)return Le(14,1,e,t)}function Ge(e){if(A)return Le(15,1,e)}function Ne(){if(A)return Le(16,1);le()}var He=[];function Le(e,t){for(var n=arguments.length-2,r=tn(),i=rn(8*n),o=i>>3,u=0;u<n;u++){var c=arguments[2+u];a()[o+u]=c}return n=Ht(e,n,i,t),nn(r),n}var ze=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Qe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Xe(e,t,n){var i=Qe(e);if(!i)return-4;if(i.ec&&(r()[i.ec>>2]=t,r()[i.ec+4>>2]=n),!i.uc&&i.hd){if(i.ec){i=r()[i.ec+8>>2],e=e?L(e):\"\";var o=tn(),a=rn(12),u=0;if(e){u=Q(e)+1;var c=Ft(u);V(e,c,u),u=c}return r()[a>>2]=u,r()[a+4>>2]=t,r()[a+8>>2]=n,Lt(0,i,657457152,0,u,a),nn(o),1}return-4}return i.uc&&(i=i.uc),e=!1,i.dc&&i.dc.cc&&(e=0===(e=i.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Le(17,1,e,t,n):Xe(e,t,n)}var Je=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=[\"nearest-neighbor\",\"linear\"],rt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function it(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function ot(e,t=\"float32\"){const o=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],Z(\"float32\"===t),new Float32Array(n().buffer,o,e/Float32Array.BYTES_PER_ELEMENT)}function at(e){return{alpha:o()[e>>2]}}function ut(e){return{type:rt[i()[e>>2]],dimensions:it(i()[e+8>>2],r()[e+4>>2])}}function ct(e){return{windowDimensions:it(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?it(i()[e+8>>2],r()[e+12>>2]):void 0,strides:it(i()[e+16>>2],r()[e+20>>2]),dilations:it(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var st,ft,lt,dt,pt,ht,mt,bt,gt,_t={};function yt(){if(!gt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in _t)void 0===_t[e]?delete t[e]:t[e]=_t[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);gt=n}return gt}function wt(e,n){if(A)return Le(18,1,e,n);var i=0;return yt().forEach((function(o,a){var u=n+i;for(a=r()[e+4*a>>2]=u,u=0;u<o.length;++u)t()[a++>>0]=o.charCodeAt(u);t()[a>>0]=0,i+=o.length+1})),0}function vt(e,t){if(A)return Le(19,1,e,t);var n=yt();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function At(e){return A?Le(20,1,e):0}function Ot(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Tt(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=Me.od(e),t=Me.nd(e,t,n),r()[i>>2]=t,0)}function xt(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function Et(e,t,i,o){if(A)return Le(24,1,e,t,i,o);for(var a=0,u=0;u<i;u++){for(var c=r()[t+8*u>>2],s=r()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,n()[c+f]);a+=s}return r()[o>>2]=a,0}function St(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!St.Bc){St.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var o=i.getTimezoneOffset(),a=Math.max(t,o);r()[en()>>2]=60*a,r()[Kt()>>2]=Number(t!=o),n=e(n),i=e(i),n=X(n),i=X(i),o<t?(r()[Jt()>>2]=n,r()[Jt()+4>>2]=i):(r()[Jt()>>2]=i,r()[Jt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Mt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Dt=[31,29,31,30,31,30,31,31,30,31,30,31],Rt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Dt:Rt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pt(e,n,i,o){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function u(e,t){return a(e,t,\"0\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2];for(var d in o={bd:r()[o>>2],ad:r()[o+4>>2],jc:r()[o+8>>2],bc:r()[o+12>>2],Yb:r()[o+16>>2],Pb:r()[o+20>>2],kc:r()[o+24>>2],lc:r()[o+28>>2],xd:r()[o+32>>2],$c:r()[o+36>>2],cd:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),h=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.kc].substring(0,3)},\"%A\":function(e){return p[e.kc]},\"%b\":function(e){return h[e.Yb].substring(0,3)},\"%B\":function(e){return h[e.Yb]},\"%C\":function(e){return u((e.Pb+1900)/100|0,2)},\"%d\":function(e){return u(e.bc,2)},\"%e\":function(e){return a(e.bc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return u(e.jc,2)},\"%I\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.bc+Mt(kt(e.Pb+1900)?Dt:Rt,e.Yb-1),3)},\"%m\":function(e){return u(e.Yb+1,2)},\"%M\":function(e){return u(e.ad,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.jc&&12>e.jc?\"AM\":\"PM\"},\"%S\":function(e){return u(e.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.kc||7},\"%U\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.Pb+1901,0,4),n=s(new Date(e.Pb+1900,0,4));t=s(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>c(r,n)?\"53\":0>=c(t,r)?\"01\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\"%w\":function(e){return e.kc},\"%W\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.Pb+1900).toString().substring(2)},\"%Y\":function(e){return e.Pb+1900},\"%z\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.cd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](o)));return(d=function(e){var t=Array(Q(e)+1);return z(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}st||(st=st||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var It=[null,ve,De,Re,Ce,Pe,Ie,Ze,Fe,je,We,Ye,Ue,qe,Be,Ge,Ne,$e,wt,vt,At,Ot,Tt,xt,Et,St],Zt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},G:function(e,t){return we(e,t)},b:function(e){return Ft(e+16)+16},d:function(e,t){return ve(e,t)},e:function(e,t){ye.pc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,o){if(\"undefined\"==typeof SharedArrayBuffer)return M(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return M(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Gt(687865856,e,t,n,o);var u=0,c=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,u=r()[t+8>>2],c=0!==r()[t+12>>2]}else s=2097152;(t=0==u)?u=an(16,s):Z(0<(u-=s));for(var f=Ft(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={Vb:u,Xb:s,mc:t,detached:c,Xc:n,fc:f,Wb:o,dd:a},A?(n.gd=\"spawnThread\",postMessage(n,a),0):Oe(n)},T:function(e){throw A?ye.yc(e):(ye.vc(),ln(e)),\"unwind\"},U:function(e,t){return function(e,t){if(!e)return M(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Yt()==e)return M(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Bt()==e)return M(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return M(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return M(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):ge(e),0;zt(),A||Nt(),Te(e+0,n,A?100:1)}}(e,t)},L:De,r:Re,P:Ce,K:Pe,u:function(){return 42},C:Ie,M:Ze,Q:Fe,S:je,R:We,q:Ye,J:Ue,H:qe,v:Be,I:Ge,aa:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.Rb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:Ne,x:we,Ta:function(e,t){return e-t},W:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},O:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ca:function(e,t,i){var o;for(He.length=0,i>>=2;o=n()[t++];)(o=105>o)&&1&i&&i++,He.push(o?a()[i++>>1]:r()[i]),++i;return he[e].apply(null,He)},B:xe,n:function(){},k:Te,j:be,N:function(){return 2147483648},i:_e,z:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){ze.length=t,n>>=3;for(var r=0;r<t;r++)ze[r]=a()[n+r];return(0>e?he[-e-1]:It[e]).apply(null,ze)},A:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-j.byteLength+65535>>>16),$(R.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},_:function(e,t,n){return Qe(e)?Xe(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!I){try{e()}catch(e){if(e instanceof sn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&M(\"exception thrown: \"+[e,e.stack]),e}if(!oe())try{A?Vt(P):ln(P)}catch(e){if(!(e instanceof sn))throw e}}}((function(){K.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Je[n],failIfMajorPerformanceCaveat:!!r()[t+7],Mc:r()[t+8],rd:r()[t+9],sc:r()[t+10],Dc:r()[t+11],ud:r()[t+12],vd:r()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ft(8);r()[n+4>>2]=Yt();var i={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=i),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\"EXT_disjoint_timer_query\"),t.sd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),st.create(navigator.ml.createContext(t))},E:wt,F:vt,l:At,D:Ot,t:Tt,Ua:xt,p:Et,ua:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.rc||(e.rc=X(\"GMT\")),r()[n+40>>2]=e.rc,n},X:function(){ye.Ic()},s:function(e,t){St(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[Jt()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:R||u.wasmMemory,y:function(e){St();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=o.getTimezoneOffset(),c=Math.min(u,a);return 0>n?r()[e+32>>2]=Number(a!=u&&c==i):0<n!=(c==i)&&(a=Math.max(u,a),t.setTime(t.getTime()+6e4*((0<n?c:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){st.hc(e)},Pa:function(e){st.release(e)},La:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.add(t,n),mt.create(n)},Ka:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.averagePool2d(t,n),mt.create(n)},Ja:function(e,t,n,i,a){return e=lt.get(e),t=mt.get(t),n=mt.get(n),i=mt.get(i),a={scale:mt.get(r()[a>>2]),bias:mt.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:o()[a+12>>2],activation:bt.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),mt.create(a)},Ia:function(e,t){e=lt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ha:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),mt.create(n)},Ga:function(e,t,n,r){e=lt.get(e),t=it(t,n),n=[];for(var i=0;i<t.length;++i)n.push(mt.get(t[i]));return r=e.concat(n,r),mt.create(r)},Fa:function(e,t,n){return e=lt.get(e),n=ot(n,(t=ut(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),mt.create(n)},Ea:function(e,t,n,o){return e=lt.get(e),t=mt.get(t),n=mt.get(n),o={padding:\"explicit\"===Ke[r()[o+40>>2]]?it(i()[o>>2],r()[o+4>>2]):void 0,strides:it(i()[o+8>>2],r()[o+12>>2]),dilations:it(i()[o+16>>2],r()[o+20>>2]),autoPad:Ke[r()[o+40>>2]],groups:r()[o+48>>2],inputLayout:tt[r()[o+52>>2]],filterLayout:et[r()[o+56>>2]],bias:mt.get(r()[o+60>>2]),activation:bt.get(r()[o+64>>2])},o=e.conv2d(t,n,o),mt.create(o)},Da:function(e,n,i,a){return e=lt.get(e),n=mt.get(n),i=mt.get(i),a={c:mt.get(r()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),mt.create(a)},Ca:function(e,t,n){return e=lt.get(e),t=L(t),n=ut(n),n=e.input(t,n),mt.create(n)},Ba:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=at(n),n=e.leakyRelu(t,n),mt.create(n)},Aa:function(e,t){return e=lt.get(e),t=at(t),t=e.leakyRelu(t),bt.create(t)},za:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.matmul(t,n),mt.create(n)},ya:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.maxPool2d(t,n),mt.create(n)},ra:function(e){lt.release(e)},xa:function(e,t){return e=lt.get(e),t=mt.get(t),t=e.relu(t),mt.create(t)},wa:function(e){return e=lt.get(e).relu(),bt.create(e)},va:function(e,t,n){e=lt.get(e),t=mt.get(t);var a=nt[r()[n>>2]],u=i()[n+4>>2],c=r()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:a,scales:u,sizes:it(i()[n+12>>2],r()[n+16>>2]),axes:it(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),mt.create(n)},ta:function(e,t,n,r){return e=lt.get(e),t=mt.get(t),n=it(r,n),n=e.reshape(t,n),mt.create(n)},sa:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={permutation:it(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),mt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=dt.get(t),n=pt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){dt.release(e)},qa:function(e,t,n){e=dt.get(e),t=L(t),n=0===r()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:it(i()[n+16>>2],r()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=L(t),n=mt.get(n),e[t]=n},la:function(e){pt.release(e)},ma:function(e,t,n){e=pt.get(e),t=L(t),n=ot(n),e[t]=n},ka:function(e){mt.hc(e)},ja:function(e){mt.release(e)},ia:function(e){bt.hc(e)},ha:function(e){bt.release(e)},Sa:Pt,g:function(e,t,n,r){return Pt(e,t,n,r)},ga:function(e){return e=st.get(e),e=new MLGraphBuilder(e),lt.create(e)},fa:function(){return dt.create({})},ea:function(){return ht.create({})},da:function(){return pt.create({})}};!function(){function e(e,t){u.asm=e.exports,K=u.asm.pb,te.unshift(u.asm.Wa),ye.qc.push(u.asm.ub),C=t,A||(ce--,u.monitorRunDependencies&&u.monitorRunDependencies(ce),0==ce&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!S&&(y||w)){if(\"function\"==typeof fetch&&!ue.startsWith(\"file://\"))return fetch(ue,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ue+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(m)return new Promise((function(e,t){m(ue,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){M(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Zt};if(A||(ce++,u.monitorRunDependencies&&u.monitorRunDependencies(ce)),u.instantiateWasm)try{return u.instantiateWasm(r,e)}catch(e){return M(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ue.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ue,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return M(\"wasm streaming compile failed: \"+e),M(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Wa).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Xa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Ya).apply(null,arguments)},u._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(u._OrtSessionOptionsAppendExecutionProviderWebNN=u.asm.Za).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm._a).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.$a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.ab).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.bb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.cb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.db).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.eb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.fb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.gb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.hb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.ib).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.jb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.kb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.lb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.mb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.nb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.ob).apply(null,arguments)};var Ft=u._malloc=function(){return(Ft=u._malloc=u.asm.qb).apply(null,arguments)},jt=u.___errno_location=function(){return(jt=u.___errno_location=u.asm.rb).apply(null,arguments)},Wt=u._free=function(){return(Wt=u._free=u.asm.sb).apply(null,arguments)},Yt=u._pthread_self=function(){return(Yt=u._pthread_self=u.asm.tb).apply(null,arguments)};u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.ub).apply(null,arguments)},u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.vb).apply(null,arguments)};var Ut,qt=u._emscripten_register_main_browser_thread_id=function(){return(qt=u._emscripten_register_main_browser_thread_id=u.asm.wb).apply(null,arguments)},Bt=u._emscripten_main_browser_thread_id=function(){return(Bt=u._emscripten_main_browser_thread_id=u.asm.xb).apply(null,arguments)},Gt=u._emscripten_sync_run_in_main_thread_4=function(){return(Gt=u._emscripten_sync_run_in_main_thread_4=u.asm.yb).apply(null,arguments)},Nt=u._emscripten_main_thread_process_queued_calls=function(){return(Nt=u._emscripten_main_thread_process_queued_calls=u.asm.zb).apply(null,arguments)},Ht=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ht=u._emscripten_run_in_main_runtime_thread_js=u.asm.Ab).apply(null,arguments)},Lt=u.__emscripten_call_on_thread=function(){return(Lt=u.__emscripten_call_on_thread=u.asm.Bb).apply(null,arguments)},zt=u._pthread_testcancel=function(){return(zt=u._pthread_testcancel=u.asm.Cb).apply(null,arguments)},Vt=u._pthread_exit=function(){return(Vt=u._pthread_exit=u.asm.Db).apply(null,arguments)},Qt=u.__emscripten_thread_init=function(){return(Qt=u.__emscripten_thread_init=u.asm.Eb).apply(null,arguments)},Xt=u._emscripten_get_global_libc=function(){return(Xt=u._emscripten_get_global_libc=u.asm.Fb).apply(null,arguments)},$t=u.___pthread_tsd_run_dtors=function(){return($t=u.___pthread_tsd_run_dtors=u.asm.Gb).apply(null,arguments)},Jt=u.__get_tzname=function(){return(Jt=u.__get_tzname=u.asm.Hb).apply(null,arguments)},Kt=u.__get_daylight=function(){return(Kt=u.__get_daylight=u.asm.Ib).apply(null,arguments)},en=u.__get_timezone=function(){return(en=u.__get_timezone=u.asm.Jb).apply(null,arguments)},tn=u.stackSave=function(){return(tn=u.stackSave=u.asm.Kb).apply(null,arguments)},nn=u.stackRestore=function(){return(nn=u.stackRestore=u.asm.Lb).apply(null,arguments)},rn=u.stackAlloc=function(){return(rn=u.stackAlloc=u.asm.Mb).apply(null,arguments)},on=u._emscripten_stack_set_limits=function(){return(on=u._emscripten_stack_set_limits=u.asm.Nb).apply(null,arguments)},an=u._memalign=function(){return(an=u._memalign=u.asm.Ob).apply(null,arguments)},un=u.__emscripten_allow_main_runtime_queued_calls=999380,cn=u.__emscripten_main_thread_futex=1003380;function sn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function fn(){function e(){if(!Ut&&(Ut=!0,u.calledRun=!0,!I)&&(A||me(te),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!A)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e=u.postRun.shift();re.unshift(e)}me(re)}}if(!(0<ce))if(A)c(u),A||me(te),postMessage({cmd:\"loaded\"});else{if(!A){if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)ae();me(ee)}0<ce||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),e()}),1)):e())}}function ln(e){if(P=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new sn(e);oe()||(ye.xc(),A||(me(ne),\"undefined\"!=typeof _fflush&&_fflush(0),Se[1].length&&ke(1,10),Se[2].length&&ke(2,10))),P=e,oe()||(ye.xc(),u.onExit&&u.onExit(e),I=!0),p(e,new sn(e))}if(u.UTF8ToString=L,u.stringToUTF8=V,u.lengthBytesUTF8=Q,u.keepRuntimeAlive=oe,u.PThread=ye,u.stackSave=tn,u.stackRestore=nn,u.stackAlloc=rn,u.PThread=ye,u.wasmMemory=R,u.ExitStatus=sn,fe=function e(){Ut||fn(),Ut||(fe=e)},u.run=fn,u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return A&&(D=!1,ye.Jc()),fn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},l;for(l in d)d.hasOwnProperty(l)&&(g[l]=d[l]);var ca=\"./this.program\",da=\"object\"===typeof window,p=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,r=\"\",fa,u,w,x,y;\nif(ea)r=p?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",fa=function(a,b){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);return x.readFileSync(a,b?null:\"utf8\")},w=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||A(\"Assertion failed: undefined\");return a},u=function(a,b,c){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);x.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",A),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||p)p?r=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.lastIndexOf(\"/\")+1):r=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},p&&(w=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\nb.send(null);return new Uint8Array(b.response)}),u=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ha=d.print||console.log.bind(console),B=d.printErr||console.warn.bind(console);for(l in g)g.hasOwnProperty(l)&&(d[l]=g[l]);g=null;d.thisProgram&&(ca=d.thisProgram);var C;d.wasmBinary&&(C=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&A(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction la(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var m=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|m:(h&7)<<18|k<<12|m<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function D(a,b){return a?la(E,a,b):\"\"}\nfunction ma(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var m=a.charCodeAt(k);if(55296<=m&&57343>=m){var t=a.charCodeAt(++k);m=65536+((m&1023)<<10)|t&1023}if(127>=m){if(c>=e)break;b[c++]=m}else{if(2047>=m){if(c+1>=e)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=e)break;b[c++]=224|m>>12}else{if(c+3>=e)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-h}\nfunction na(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function oa(a){var b=na(a)+1,c=pa(b);c&&ma(a,F,c,b);return c}var qa,F,E,G,H,J;\nfunction ra(){var a=ia.buffer;qa=a;d.HEAP8=F=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=E=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=J=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var sa,ta=[],ua=[],va=[],wa=[];function xa(){var a=d.preRun.shift();ta.unshift(a)}var K=0,ya=null,L=null;d.preloadedImages={};d.preloadedAudios={};\nfunction A(a){if(d.onAbort)d.onAbort(a);B(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function za(){return M.startsWith(\"data:application/octet-stream;base64,\")}var M;M=\"ort-wasm.wasm\";if(!za()){var Aa=M;M=d.locateFile?d.locateFile(Aa,r):r+Aa}function Ba(){var a=M;try{if(a==M&&C)return new Uint8Array(C);if(w)return w(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){A(b)}}\nfunction Ca(){if(!C&&(da||p)){if(\"function\"===typeof fetch&&!M.startsWith(\"file://\"))return fetch(M,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+M+\"'\";return a.arrayBuffer()}).catch(function(){return Ba()});if(u)return new Promise(function(a,b){u(M,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ba()})}\nfunction Da(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.ub;\"number\"===typeof c?void 0===b.kb?sa.get(c)():sa.get(c)(b.kb):c(void 0===b.kb?null:b.kb)}}}function Ea(a){this.mb=a-16;this.Eb=function(b){G[this.mb+4>>2]=b};this.Bb=function(b){G[this.mb+8>>2]=b};this.Cb=function(){G[this.mb>>2]=0};this.Ab=function(){F[this.mb+12>>0]=0};this.Db=function(){F[this.mb+13>>0]=0};this.wb=function(b,c){this.Eb(b);this.Bb(c);this.Cb();this.Ab();this.Db()}}\nvar Fa=0,Ga={},Ha=[null,[],[]],N={},O;O=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ia=[\"explicit\",\"same-upper\",\"same-lower\"],Ja=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ka=[\"nchw\",\"nhwc\"],La=[\"nearest-neighbor\",\"linear\"],Ma=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function P(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(G[b>>2]);return c}}\nfunction Na(a,b=\"float32\"){const c=G[a>>2]+H[a+8>>2];a=H[a+4>>2];\"float32\"===b||A(\"Assertion failed: undefined\");return new Float32Array(E.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Oa(a){return{type:Ma[H[a>>2]],dimensions:P(H[a+8>>2],G[a+4>>2])}}function Pa(a){return{windowDimensions:P(H[a>>2],G[a+4>>2]),padding:\"explicit\"===Ia[G[a+32>>2]]?P(H[a+8>>2],G[a+12>>2]):void 0,strides:P(H[a+16>>2],G[a+20>>2]),dilations:P(H[a+24>>2],G[a+28>>2]),autoPad:Ia[G[a+32>>2]],layout:Ka[G[a+36>>2]]}}\nvar Q,S,T,U,V,W,X,Y,Qa={};function Ra(){if(!Sa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Qa)void 0===Qa[b]?delete a[b]:a[b]=Qa[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Sa=c}return Sa}var Sa;\nfunction Ta(a,b){a=new Date(1E3*G[a>>2]);G[b>>2]=a.getUTCSeconds();G[b+4>>2]=a.getUTCMinutes();G[b+8>>2]=a.getUTCHours();G[b+12>>2]=a.getUTCDate();G[b+16>>2]=a.getUTCMonth();G[b+20>>2]=a.getUTCFullYear()-1900;G[b+24>>2]=a.getUTCDay();G[b+36>>2]=0;G[b+32>>2]=0;G[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Ta.tb||(Ta.tb=oa(\"GMT\"));G[b+40>>2]=Ta.tb;return b}\nfunction Ua(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}if(!Va){Va=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);G[Wa()>>2]=60*k;G[$a()>>2]=Number(b!=h);c=a(c);e=a(e);c=oa(c);e=oa(e);h<b?(G[Z()>>2]=c,G[Z()+4>>2]=e):(G[Z()>>2]=e,G[Z()+4>>2]=c)}}var Va;function ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function bb(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar cb=[31,29,31,30,31,30,31,31,30,31,30,31],db=[31,28,31,30,31,30,31,31,30,31,30,31];function eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=(ab(a.getFullYear())?cb:db)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction fb(a,b,c,e){function h(f,n,q){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<n;)f=q[0]+f;return f}function k(f,n){return h(f,n,\"0\")}function m(f,n){function q(Xa){return 0>Xa?-1:0<Xa?1:0}var I;0===(I=q(f.getFullYear()-n.getFullYear()))&&0===(I=q(f.getMonth()-n.getMonth()))&&(I=q(f.getDate()-n.getDate()));return I}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function R(f){f=eb(new Date(f.ib+1900,0,1),f.rb);var n=new Date(f.getFullYear()+1,0,4),q=t(new Date(f.getFullYear(),0,4));n=t(n);return 0>=m(q,f)?0>=m(n,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var z=G[e+40>>2];e={Hb:G[e>>2],Gb:G[e+4>>2],pb:G[e+8>>2],nb:G[e+12>>2],jb:G[e+16>>2],ib:G[e+20>>2],qb:G[e+24>>2],rb:G[e+28>>2],Pb:G[e+32>>2],Fb:G[e+\n36>>2],Ib:z?D(z):\"\"};c=D(c);z={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in z)c=c.replace(new RegExp(v,\"g\"),z[v]);var Ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nZa=\"January February March April May June July August September October November December\".split(\" \");z={\"%a\":function(f){return Ya[f.qb].substring(0,3)},\"%A\":function(f){return Ya[f.qb]},\"%b\":function(f){return Za[f.jb].substring(0,3)},\"%B\":function(f){return Za[f.jb]},\"%C\":function(f){return k((f.ib+1900)/100|0,2)},\"%d\":function(f){return k(f.nb,2)},\"%e\":function(f){return h(f.nb,2,\" \")},\"%g\":function(f){return R(f).toString().substring(2)},\"%G\":function(f){return R(f)},\"%H\":function(f){return k(f.pb,\n2)},\"%I\":function(f){f=f.pb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.nb+bb(ab(f.ib+1900)?cb:db,f.jb-1),3)},\"%m\":function(f){return k(f.jb+1,2)},\"%M\":function(f){return k(f.Gb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.pb&&12>f.pb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Hb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.qb||7},\"%U\":function(f){var n=new Date(f.ib+1900,0,1),q=0===n.getDay()?n:eb(n,7-n.getDay());f=new Date(f.ib+1900,f.jb,f.nb);return 0>\nm(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%V\":function(f){var n=new Date(f.ib+1901,0,4),q=t(new Date(f.ib+1900,0,4));n=t(n);var I=eb(new Date(f.ib+1900,0,1),f.rb);return 0>m(I,q)?\"53\":0>=m(n,I)?\"01\":k(Math.ceil((q.getFullYear()<f.ib+1900?f.rb+32-q.getDate():f.rb+1-q.getDate())/7),2)},\"%w\":function(f){return f.qb},\"%W\":function(f){var n=new Date(f.ib,0,1),q=1===n.getDay()?n:eb(n,0===n.getDay()?1:7-n.getDay()+1);f=\nnew Date(f.ib+1900,f.jb,f.nb);return 0>m(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%y\":function(f){return(f.ib+1900).toString().substring(2)},\"%Y\":function(f){return f.ib+1900},\"%z\":function(f){f=f.Fb;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Ib},\"%%\":function(){return\"%\"}};for(v in z)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),z[v](e)));v=gb(c);\nif(v.length>b)return 0;F.set(v,a);return v.length-1}(function(){function a(){return{lb:{},zb:1,create:function(b,c){c=c||{};var e=this.zb++;c.sb=1;c.object=b;this.lb[e]=c;return e},get:function(b){if(0!==b)return this.lb[b].object},ob:function(b){this.lb[b].sb++},release:function(b){var c=this.lb[b];c.sb--;0>=c.sb&&delete this.lb[b]}}}Q||(Q=Q||a(),S=S||a(),T=T||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function gb(a){var b=Array(na(a)+1);ma(a,b,0,b.length);return b}\nvar kb={a:function(a){return pa(a+16)+16},c:function(a,b){va.unshift({ub:a,kb:b})},f:function(a,b){va.unshift({ub:a,kb:b})},b:function(a,b,c){(new Ea(a)).wb(b,c);Fa++;throw a;},L:function(a,b){a=D(a);return N.Jb(a,b)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(a,b){a=D(a);return N.Kb(a,b)},S:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var m=hb(65536,a);\nm?(E.fill(0,m,m+a),a=m):a=0;a?(Ga[a]={yb:a,xb:b,vb:!0,fd:h,Ob:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},R:function(a,b){var c=Ga[a];0!==b&&c?(b===c.xb&&(Ga[a]=null,c.vb&&ib(c.yb)),a=0):a=-28;return a},m:function(){},I:function(a,b,c){a=D(a);return N.Lb(a,b,c)},G:function(){},s:function(){},H:function(){},k:function(){A()},v:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=O();else return G[jb()>>2]=28,-1;G[b>>2]=a/1E3|0;G[b+4>>2]=a%1E3*1E6|0;return 0},J:function(a,b){return a-\nb},Ba:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ca:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Aa:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nN:function(){return 2147483648},A:function(a,b,c){E.copyWithin(a,b,b+c)},l:function(a){var b=E.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ia.grow(Math.min(2147483648,e)-qa.byteLength+65535>>>16);ra();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},F:function(a){for(var b=O();O()-b<a;);},ya:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[H[a>>2]],powerPreference:e[H[a+4>>2]]});return Q.create(navigator.ml.createContext(b))},D:function(a,b){var c=0;Ra().forEach(function(e,h){var k=b+c;h=G[a+4*h>>2]=k;for(k=0;k<e.length;++k)F[h++>>0]=e.charCodeAt(k);F[h>>0]=0;c+=e.length+1});return 0},E:function(a,b){var c=Ra();G[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});G[b>>2]=e;return 0},i:function(){return 0},C:function(a,b){a=1==a||2==a?2:\nA();F[b>>0]=a;return 0},p:function(a,b,c,e){a=N.Nb(a);b=N.Mb(a,b,c);G[e>>2]=b;return 0},z:function(){},q:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var m=G[b+8*k>>2],t=G[b+(8*k+4)>>2],R=0;R<t;R++){var z=E[m+R],v=Ha[a];0===z||10===z?((1===a?ha:B)(la(v,0)),v.length=0):v.push(z)}h+=t}G[e>>2]=h;return 0},da:function(a){var b=Date.now();G[a>>2]=b/1E3|0;G[a+4>>2]=b%1E3*1E3|0;return 0},P:Ta,t:function(a,b){Ua();a=new Date(1E3*G[a>>2]);G[b>>2]=a.getSeconds();G[b+4>>2]=a.getMinutes();G[b+8>>2]=a.getHours();\nG[b+12>>2]=a.getDate();G[b+16>>2]=a.getMonth();G[b+20>>2]=a.getFullYear()-1900;G[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;G[b+32>>2]=a;a=G[Z()+(a?4:0)>>2];G[b+40>>2]=a;return b},n:function(a){Ua();var b=new Date(G[a+20>>2]+1900,G[a+16>>2],G[a+12>>2],G[a+8>>2],G[a+4>>2],G[a>>\n2],0),c=G[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),m=h.getTimezoneOffset(),t=Math.min(m,k);0>c?G[a+32>>2]=Number(k!=m&&t==e):0<c!=(t==e)&&(k=Math.max(m,k),b.setTime(b.getTime()+6E4*((0<c?t:k)-e)));G[a+24>>2]=b.getDay();G[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;G[a>>2]=b.getSeconds();G[a+4>>2]=b.getMinutes();G[a+8>>2]=b.getHours();G[a+12>>2]=b.getDate();G[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},y:function(a){Q.ob(a)},\nx:function(a){Q.release(a)},va:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.add(b,c);return X.create(c)},ua:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.averagePool2d(b,c);return X.create(c)},ta:function(a,b,c,e,h){a=T.get(a);b=X.get(b);c=X.get(c);e=X.get(e);h={scale:X.get(G[h>>2]),bias:X.get(G[h+4>>2]),axis:G[h+8>>2],epsilon:J[h+12>>2],activation:Y.get(G[h+16>>2])};h=a.batchNormalization(b,c,e,h);return X.create(h)},sa:function(a,b){a=T.get(a);b=W.get(b);try{var c=a.build(b);return S.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},ra:function(a,b,c){a=T.get(a);b=X.get(b);c=a.clamp(b,{minValue:J[c>>2],maxValue:J[c+4>>2]});return X.create(c)},qa:function(a,b,c,e){a=T.get(a);b=P(b,c);c=[];for(var h=0;h<b.length;++h)c.push(X.get(b[h]));e=a.concat(c,e);return X.create(e)},pa:function(a,b,c){a=T.get(a);b=Oa(b);c=Na(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return X.create(c)},oa:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={padding:\"explicit\"===Ia[G[e+40>>2]]?P(H[e>>2],G[e+4>>2]):void 0,strides:P(H[e+\n8>>2],G[e+12>>2]),dilations:P(H[e+16>>2],G[e+20>>2]),autoPad:Ia[G[e+40>>2]],groups:G[e+48>>2],inputLayout:Ka[G[e+52>>2]],filterLayout:Ja[G[e+56>>2]],bias:X.get(G[e+60>>2]),activation:Y.get(G[e+64>>2])};e=a.conv2d(b,c,e);return X.create(e)},na:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={c:X.get(G[e>>2]),alpha:J[e+4>>2],beta:J[e+8>>2],aTranspose:0!==F[e+12>>0],bTranspose:0!==F[e+13>>0]};e=a.gemm(b,c,e);return X.create(e)},ma:function(a,b,c){a=T.get(a);b=D(b);c=Oa(c);c=a.input(b,c);return X.create(c)},\nla:function(a,b,c){a=T.get(a);b=X.get(b);c=a.leakyRelu(b,{alpha:J[c>>2]});return X.create(c)},ka:function(a,b){a=T.get(a).leakyRelu({alpha:J[b>>2]});return Y.create(a)},ja:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.matmul(b,c);return X.create(c)},ia:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.maxPool2d(b,c);return X.create(c)},u:function(a){T.release(a)},ha:function(a,b){a=T.get(a);b=X.get(b);b=a.relu(b);return X.create(b)},ga:function(a){a=T.get(a).relu();return Y.create(a)},fa:function(a,\nb,c){a=T.get(a);b=X.get(b);var e=La[G[c>>2]];var h=H[c+4>>2];var k=G[c+8>>2];if(0!==h&&0!==k){for(var m=[],t=0;t<h;++t,k+=4)m.push(J[k>>2]);h=m}else h=void 0;c={mode:e,scales:h,sizes:P(H[c+12>>2],G[c+16>>2]),axes:P(H[c+20>>2],G[c+24>>2])};c=a.resample2d(b,c);return X.create(c)},ea:function(a,b,c,e){a=T.get(a);b=X.get(b);c=P(e,c);c=a.reshape(b,c);return X.create(c)},ca:function(a,b,c){a=T.get(a);b=X.get(b);c={permutation:P(H[c>>2],G[c+4>>2])};c=a.transpose(b,c);return X.create(c)},xa:function(a,b,\nc){a=S.get(a);b=U.get(b);c=V.get(c);return a.compute(b,c)},wa:function(a){S.ob(a)},w:function(a){S.release(a)},aa:function(a){U.release(a)},ba:function(a,b,c){a=U.get(a);b=D(b);c=0===G[c+12>>2]?Na(c+0):{resource:Na(c+0),dimensions:P(H[c+16>>2],G[c+12>>2])};a[b]=c},_:function(a){W.release(a)},$:function(a,b,c){a=W.get(a);b=D(b);c=X.get(c);a[b]=c},Y:function(a){V.release(a)},Z:function(a,b,c){a=V.get(a);b=D(b);c=Na(c);a[b]=c},e:function(a){X.ob(a)},d:function(a){X.release(a)},X:function(a){Y.ob(a)},\nh:function(a){Y.release(a)},za:fb,g:function(a,b,c,e){return fb(a,b,c,e)},W:function(a){a=Q.get(a);a=new MLGraphBuilder(a);return T.create(a)},V:function(){return U.create({})},U:function(){return W.create({})},T:function(){return V.create({})}};\n(function(){function a(h){d.asm=h.exports;ia=d.asm.Da;ra();sa=d.asm.hb;ua.unshift(d.asm.Ea);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==ya&&(clearInterval(ya),ya=null),L&&(h=L,L=null,h()))}function b(h){a(h.instance)}function c(h){return Ca().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){B(\"failed to asynchronously prepare wasm: \"+k);A(k)})}var e={a:kb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return B(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return C||\"function\"!==typeof WebAssembly.instantiateStreaming||za()||M.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(M,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){B(\"wasm streaming compile failed: \"+k);B(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ea).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Fa).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ga).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Ha).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Ia).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Ja).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ka).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.La).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ma).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Na).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Oa).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Pa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Qa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ra).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Sa).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Ta).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Ua).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Va).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Wa).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.Xa).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Ya).apply(null,arguments)};\nvar pa=d._malloc=function(){return(pa=d._malloc=d.asm.Za).apply(null,arguments)},jb=d.___errno_location=function(){return(jb=d.___errno_location=d.asm._a).apply(null,arguments)},ib=d._free=function(){return(ib=d._free=d.asm.$a).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm.ab).apply(null,arguments)},$a=d.__get_daylight=function(){return($a=d.__get_daylight=d.asm.bb).apply(null,arguments)},Wa=d.__get_timezone=function(){return(Wa=d.__get_timezone=d.asm.cb).apply(null,\narguments)},lb=d.stackSave=function(){return(lb=d.stackSave=d.asm.db).apply(null,arguments)},mb=d.stackRestore=function(){return(mb=d.stackRestore=d.asm.eb).apply(null,arguments)},nb=d.stackAlloc=function(){return(nb=d.stackAlloc=d.asm.fb).apply(null,arguments)},hb=d._memalign=function(){return(hb=d._memalign=d.asm.gb).apply(null,arguments)};d.UTF8ToString=D;d.stringToUTF8=function(a,b,c){return ma(a,E,b,c)};d.lengthBytesUTF8=na;d.stackSave=lb;d.stackRestore=mb;d.stackAlloc=nb;var ob;\nL=function pb(){ob||qb();ob||(L=pb)};\nfunction qb(){function a(){if(!ob&&(ob=!0,d.calledRun=!0,!ja)){Da(ua);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();wa.unshift(b)}Da(wa)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)xa();Da(ta);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=qb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();qb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return D.buffer!=W&&$(D.buffer),L}function r(){return D.buffer!=W&&$(D.buffer),z}function i(){return D.buffer!=W&&$(D.buffer),Y}function a(){return D.buffer!=W&&$(D.buffer),H}function o(){return D.buffer!=W&&$(D.buffer),B}function u(){return D.buffer!=W&&$(D.buffer),N}var s,c,l;e=e||{},s||(s=void 0!==e?e:{}),s.ready=new Promise((function(e,t){c=e,l=t}));var f,d={};for(f in s)s.hasOwnProperty(f)&&(d[f]=s[f]);var p=\\\"./this.program\\\";function b(e,t){throw t}var h,g,m,v,y,w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=s.ENVIRONMENT_IS_PTHREAD||!1,S=\\\"\\\";function E(e){return s.locateFile?s.locateFile(e,S):S+e}if(O){if(S=_?n(908).dirname(S)+\\\"/\\\":\\\"//\\\",h=function(e,t){return v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof ln))throw e})),process.on(\\\"unhandledRejection\\\",de),b=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},s.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var T;try{T=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=T.Worker}}else(w||_)&&(_?S=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\\\"blob:\\\")?S.substr(0,S.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(h=function(e,t){return v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},_&&(m=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),g=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var x,M,k=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);for(f in d)d.hasOwnProperty(f)&&(s[f]=d[f]);d=null,s.thisProgram&&(p=s.thisProgram),s.quit&&(b=s.quit),s.wasmBinary&&(M=s.wasmBinary);var P=s.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var D,C,j,F=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,L,z,Y,H,B,N,G=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function Z(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?Z(r(),e,t):\\\"\\\"}function q(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function X(e,t,n){return q(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function J(e){var n=Q(e)+1,r=Ut(n);return r&&q(e,t(),r,n),r}function $(e){W=e,s.HEAP8=L=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=Y=new Int32Array(e),s.HEAPU8=z=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=H=new Uint32Array(e),s.HEAPF32=B=new Float32Array(e),s.HEAPF64=N=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),A&&(W=s.buffer);var K=s.INITIAL_MEMORY||16777216;if(A)D=s.wasmMemory,W=s.buffer;else if(s.wasmMemory)D=s.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");D&&(W=D.buffer),K=W.byteLength,$(W);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return P||0<ae}function ue(){var e=s.preRun.shift();te.unshift(e)}var se,ce=0,le=null,fe=null;function de(e){throw s.onAbort&&s.onAbort(e),I(!A),R(e),F=!0,j=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function pe(){return se.startsWith(\\\"data:application/octet-stream;base64,\\\")}function be(){var e=se;try{if(e==se&&M)return new Uint8Array(M);if(m)return m(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}s.preloadedImages={},s.preloadedAudios={},se=\\\"ort-wasm-threaded.wasm\\\",pe()||(se=E(se));var he={999828:function(){throw\\\"Canceled!\\\"}};function ge(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(s);else{var n=t.Ec;\\\"number\\\"==typeof n?void 0===t.Wb?ee.get(n)():ee.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function me(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),cn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),cn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ve(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=we.Rb[e];t&&(i()[e+12>>2]=0,we.ic(t.worker))}s._emscripten_futex_wake=me;var ye,we={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ut(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Ut(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),Qt(e,!_,1),Ht(e)},Jc:function(){we.receiveObjectTransfer=we.Pc,we.threadInit=we.Zc,we.threadCancel=we.Yc,we.threadExit=we.yc,we.setExitStatus=we.Rc},Rb:{},pc:[],vc:function(){for(;0<we.pc.length;)we.pc.pop()();$t()},wc:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),we.vc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),me(e+0,2147483647),Qt(0,0,0)},Rc:function(e){j=e},yc:function(e){var t=zt();t&&(we.wc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},Yc:function(){we.wc(zt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},xc:function(){for(var e in we.Rb){var t=we.Rb[e];t&&t.worker&&we.ic(t.worker)}for(we.Rb={},e=0;e<we.Ub.length;++e){var n=we.Ub[e];n.terminate()}for(we.Ub=[],e=0;e<we.Tb.length;++e)t=(n=we.Tb[e]).Qb,we.nc(t),n.terminate();we.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=i()[e.Sb+100>>2];i()[e.Sb+100>>2]=0,Lt(t),Lt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Lt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){we.Qc((function(){delete we.Rb[e.Qb.Sb],we.Ub.push(e),we.Tb.splice(we.Tb.indexOf(e),1),we.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){i()[sn>>2]=0;try{e()}finally{i()[sn>>2]=1}},Pc:function(){},Zc:function(){for(var e in we.qc)we.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.Qb&&(we.Cc=e.Qb.Sb),r.targetThread&&r.targetThread!=zt()){var u=we.Rb[r.wd];u?u.worker.postMessage(n.data,r.transferList):R('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)Gt();else if(\\\"spawnThread\\\"===o)Se(n.data);else if(\\\"cleanupThread\\\"===o)ve(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=we.Rb[n],delete we.Rb[n],r.worker.terminate(),we.nc(r),we.Tb.splice(we.Tb.indexOf(r.worker),1),r.worker.Qb=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";we.Rb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)R(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.Qb&&Atomics.load(a(),e.Qb.Sb+64>>2)&&we.ic(e);else if(\\\"exitProcess\\\"===o)try{dn(r.returnCode)}catch(e){if(e instanceof ln)return;throw e}else\\\"cancelDone\\\"===o?we.ic(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):R(\\\"worker sent an unknown command \\\"+o));we.Cc=void 0},e.onerror=function(e){R(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:C})},zc:function(){var e=E(\\\"ort-wasm-threaded.worker.js\\\");we.Ub.push(new Worker(e))},Fc:function(){return 0==we.Ub.length&&(we.zc(),we.Lc(we.Ub[0])),we.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function _e(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Wt()>>2]=28,-1;e=ye()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return Ve(1,1,e,t);re.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){i()[this.$b+4>>2]=e},this.Tc=function(e){i()[this.$b+8>>2]=e},this.Uc=function(){i()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Se(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=we.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\\\"Internal error!\\\";if(!e.fc)throw\\\"Internal error, no pthread ptr!\\\";we.Tb.push(t);for(var n=Ut(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.Vb+e.Xb,u=(r=we.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.Sb),Atomics.store(a(),u+20,e.Xb),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.Xb),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=Jt()+40,Atomics.store(a(),u+43,n),t.Qb=r;var s={cmd:\\\"run\\\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){s.time=performance.now(),t.postMessage(s,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Ee(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),cn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),cn>>2,0),-73;if(0==(a=Atomics.exchange(i(),cn>>2,0)))break;if(Gt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),cn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Te(){O||_||(x||(x={}),x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,R(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}s.establishStackSpace=function(e,t){on(e,t),rn(e)},s.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ye=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-s.__performance_now_clock_drift}:function(){return performance.now()};var xe={},Me=[null,[],[]];function ke(e,t){var n=Me[e];0===t||10===t?((1===e?k:R)(Z(n,0)),n.length=0):n.push(t)}var Re={};function Pe(e,t){return A?Ve(2,1,e,t):(e=V(e),Re.kd(e,t))}function De(e,t,n){return A?Ve(3,1,e,t,n):0}function Ce(e,t){if(A)return Ve(4,1,e,t)}function je(e,t,n){if(A)return Ve(5,1,e,t,n)}function Fe(e,t,n){return A?Ve(6,1,e,t,n):0}function Ie(e,t){if(A)return Ve(7,1,e,t)}function Ue(e,t){return A?Ve(8,1,e,t):(e=V(e),Re.ld(e,t))}function We(e,t,n,i,a,o){if(A)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=un(65536,u))?r().fill(0,e,e+u):e=0,e?(xe[e]={Nc:e,Kc:t,Ac:!0,fd:a,td:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Le(e,t){if(A)e=Ve(10,1,e,t);else{var n=xe[e];0!==t&&n?(t===n.Kc&&(xe[e]=null,n.Ac&&Lt(n.Nc)),e=0):e=-28}return e}function ze(e,t,n){if(A)return Ve(11,1,e,t,n)}function Ye(e,t,n){return A?Ve(12,1,e,t,n):(e=V(e),Re.md(e,t,n))}function He(e){if(A)return Ve(13,1,e)}function Be(e,t){if(A)return Ve(14,1,e,t)}function Ne(e){if(A)return Ve(15,1,e)}function Ge(){if(A)return Ve(16,1);de()}var Ze=[];function Ve(e,t){for(var n=arguments.length-2,r=nn(),i=an(8*n),a=i>>3,o=0;o<n;o++){var s=arguments[2+o];u()[a+o]=s}return n=Zt(e,n,i,t),rn(r),n}var qe=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Qe(e){return e=2<e?V(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Je(e,t,n){var r=Qe(e);if(!r)return-4;if(r.ec&&(i()[r.ec>>2]=t,i()[r.ec+4>>2]=n),!r.uc&&r.hd){if(r.ec){r=i()[r.ec+8>>2],e=e?V(e):\\\"\\\";var a=nn(),o=an(12),u=0;if(e){u=Q(e)+1;var s=Ut(u);X(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Vt(0,r,657457152,0,u,o),rn(a),1}return-4}return r.uc&&(r=r.uc),e=!1,r.dc&&r.dc.cc&&(e=0===(e=r.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Ve(17,1,e,t,n):Je(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=[\\\"nearest-neighbor\\\",\\\"linear\\\"],it=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function at(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ot(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function ut(e){return{alpha:o()[e>>2]}}function st(e){return{type:it[a()[e>>2]],dimensions:at(a()[e+8>>2],i()[e+4>>2])}}function ct(e){return{windowDimensions:at(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?at(a()[e+8>>2],i()[e+12>>2]):void 0,strides:at(a()[e+16>>2],i()[e+20>>2]),dilations:at(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var lt,ft,dt,pt,bt,ht,gt,mt,vt,yt={};function wt(){if(!vt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in yt)void 0===yt[e]?delete t[e]:t[e]=yt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);vt=n}return vt}function _t(e,n){if(A)return Ve(18,1,e,n);var r=0;return wt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Ot(e,t){if(A)return Ve(19,1,e,t);var n=wt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function At(e){return A?Ve(20,1,e):0}function St(e,n){return A?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Et(e,t,n,r){return A?Ve(22,1,e,t,n,r):(e=Re.od(e),t=Re.nd(e,t,n),i()[r>>2]=t,0)}function Tt(e,t,n,r,i){if(A)return Ve(23,1,e,t,n,r,i)}function xt(e,t,n,a){if(A)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],l=0;l<c;l++)ke(e,r()[s+l]);o+=c}return i()[a>>2]=o,0}function Mt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return Ve(25,1);if(!Mt.Bc){Mt.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[tn()>>2]=60*o,i()[en()>>2]=Number(t!=a),n=e(n),r=e(r),n=J(n),r=J(r),a<t?(i()[Kt()>>2]=n,i()[Kt()+4>>2]=r):(i()[Kt()>>2]=r,i()[Kt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Rt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Pt=[31,29,31,30,31,30,31,31,30,31,30,31],Dt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Pt:Dt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function jt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var f=i()[a+40>>2];for(var d in a={bd:i()[a>>2],ad:i()[a+4>>2],jc:i()[a+8>>2],bc:i()[a+12>>2],Yb:i()[a+16>>2],Pb:i()[a+20>>2],kc:i()[a+24>>2],lc:i()[a+28>>2],xd:i()[a+32>>2],$c:i()[a+36>>2],cd:f?V(f):\\\"\\\"},r=V(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),f[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),b=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in f={\\\"%a\\\":function(e){return p[e.kc].substring(0,3)},\\\"%A\\\":function(e){return p[e.kc]},\\\"%b\\\":function(e){return b[e.Yb].substring(0,3)},\\\"%B\\\":function(e){return b[e.Yb]},\\\"%C\\\":function(e){return u((e.Pb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.bc,2)},\\\"%e\\\":function(e){return o(e.bc,2,\\\" \\\")},\\\"%g\\\":function(e){return l(e).toString().substring(2)},\\\"%G\\\":function(e){return l(e)},\\\"%H\\\":function(e){return u(e.jc,2)},\\\"%I\\\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.bc+Rt(kt(e.Pb+1900)?Pt:Dt,e.Yb-1),3)},\\\"%m\\\":function(e){return u(e.Yb+1,2)},\\\"%M\\\":function(e){return u(e.ad,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.jc&&12>e.jc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.bd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.kc||7},\\\"%U\\\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Pb+1901,0,4),n=c(new Date(e.Pb+1900,0,4));t=c(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.kc},\\\"%W\\\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Pb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Pb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.cd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),f[d](a)));return(d=function(e){var t=Array(Q(e)+1);return q(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}lt||(lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},gt=gt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var Ft=[null,Oe,Pe,De,Ce,je,Fe,Ie,Ue,We,Le,ze,Ye,He,Be,Ne,Ge,$e,_t,Ot,At,St,Et,Tt,xt,Mt],It={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},G:function(e,t){return _e(e,t)},b:function(e){return Ut(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){we.pc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return R(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return R(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(A&&0===o.length)return Nt(687865856,e,t,n,r);var u=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,u=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==u)?u=un(16,c):I(0<(u-=c));for(var l=Ut(228),f=0;57>f;++f)a()[(l>>2)+f]=0;return i()[e>>2]=l,i()[l+12>>2]=l,e=l+152,i()[e>>2]=e,n={Vb:u,Xb:c,mc:t,detached:s,Xc:n,fc:l,Wb:r,dd:o},A?(n.gd=\\\"spawnThread\\\",postMessage(n,o),0):Se(n)},T:function(e){throw A?we.yc(e):(we.vc(),dn(e)),\\\"unwind\\\"},U:function(e,t){return function(e,t){if(!e)return R(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&zt()==e)return R(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Bt()==e)return R(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return R(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return R(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Te();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ve(e),0;qt(),A||Gt(),Ee(e+0,n,A?100:1)}}(e,t)},L:Pe,r:De,P:Ce,K:je,u:function(){return 42},C:Fe,M:Ie,Q:Ue,S:We,R:Le,q:ze,J:Ye,H:He,v:Be,I:Ne,aa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=we.Rb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ge,x:_e,Ta:function(e,t){return e-t},W:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},O:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ca:function(e,t,n){var a;for(Ze.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Ze.push(a?u()[n++>>1]:i()[n]),++n;return he[e].apply(null,Ze)},B:Te,n:function(){},k:Ee,j:me,N:function(){return 2147483648},i:ye,z:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(993).cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){qe.length=t,n>>=3;for(var r=0;r<t;r++)qe[r]=u()[n+r];return(0>e?he[-e-1]:Ft[e]).apply(null,qe)},A:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{D.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),$(D.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},_:function(e,t,n){return Qe(e)?Je(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!F){try{e()}catch(e){if(e instanceof ln)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&R(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{A?Xt(j):dn(j)}catch(e){if(!(e instanceof ln))throw e}}}((function(){ee.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Mc:i()[t+8],rd:i()[t+9],sc:i()[t+10],Dc:i()[t+11],ud:i()[t+12],vd:i()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Ut(8);i()[n+4>>2]=zt();var r={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=r),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.sd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),lt.create(navigator.ml.createContext(t))},E:_t,F:Ot,l:At,D:St,t:Et,Ua:Tt,p:xt,ua:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.rc||(e.rc=J(\\\"GMT\\\")),i()[n+40>>2]=e.rc,n},X:function(){we.Ic()},s:function(e,t){Mt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[Kt()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:D||s.wasmMemory,y:function(e){Mt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){lt.hc(e)},Pa:function(e){lt.release(e)},La:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.add(t,n),gt.create(n)},Ka:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.averagePool2d(t,n),gt.create(n)},Ja:function(e,t,n,r,a){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r=gt.get(r),a={scale:gt.get(i()[a>>2]),bias:gt.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:mt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),gt.create(a)},Ia:function(e,t){e=dt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ha:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),gt.create(n)},Ga:function(e,t,n,r){e=dt.get(e),t=at(t,n),n=[];for(var i=0;i<t.length;++i)n.push(gt.get(t[i]));return r=e.concat(n,r),gt.create(r)},Fa:function(e,t,n){return e=dt.get(e),n=ot(n,(t=st(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),gt.create(n)},Ea:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?at(a()[r>>2],i()[r+4>>2]):void 0,strides:at(a()[r+8>>2],i()[r+12>>2]),dilations:at(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:gt.get(i()[r+60>>2]),activation:mt.get(i()[r+64>>2])},r=e.conv2d(t,n,r),gt.create(r)},Da:function(e,n,r,a){return e=dt.get(e),n=gt.get(n),r=gt.get(r),a={c:gt.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),gt.create(a)},Ca:function(e,t,n){return e=dt.get(e),t=V(t),n=st(n),n=e.input(t,n),gt.create(n)},Ba:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ut(n),n=e.leakyRelu(t,n),gt.create(n)},Aa:function(e,t){return e=dt.get(e),t=ut(t),t=e.leakyRelu(t),mt.create(t)},za:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.matmul(t,n),gt.create(n)},ya:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.maxPool2d(t,n),gt.create(n)},ra:function(e){dt.release(e)},xa:function(e,t){return e=dt.get(e),t=gt.get(t),t=e.relu(t),gt.create(t)},wa:function(e){return e=dt.get(e).relu(),mt.create(e)},va:function(e,t,n){e=dt.get(e),t=gt.get(t);var r=rt[i()[n>>2]],u=a()[n+4>>2],s=i()[n+8>>2];if(0!==u&&0!==s){for(var c=[],l=0;l<u;++l,s+=4)c.push(o()[s>>2]);u=c}else u=void 0;return n={mode:r,scales:u,sizes:at(a()[n+12>>2],i()[n+16>>2]),axes:at(a()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),gt.create(n)},ta:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=at(r,n),n=e.reshape(t,n),gt.create(n)},sa:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={permutation:at(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),gt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=pt.get(t),n=bt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){pt.release(e)},qa:function(e,t,n){e=pt.get(e),t=V(t),n=0===i()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:at(a()[n+16>>2],i()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=V(t),n=gt.get(n),e[t]=n},la:function(e){bt.release(e)},ma:function(e,t,n){e=bt.get(e),t=V(t),n=ot(n),e[t]=n},ka:function(e){gt.hc(e)},ja:function(e){gt.release(e)},ia:function(e){mt.hc(e)},ha:function(e){mt.release(e)},Sa:jt,g:function(e,t,n,r){return jt(e,t,n,r)},ga:function(e){return e=lt.get(e),e=new MLGraphBuilder(e),dt.create(e)},fa:function(){return pt.create({})},ea:function(){return ht.create({})},da:function(){return bt.create({})}};!function(){function e(e,t){s.asm=e.exports,ee=s.asm.pb,ne.unshift(s.asm.Wa),we.qc.push(s.asm.ub),C=t,A||(ce--,s.monitorRunDependencies&&s.monitorRunDependencies(ce),0==ce&&(null!==le&&(clearInterval(le),le=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(w||_)){if(\\\"function\\\"==typeof fetch&&!se.startsWith(\\\"file://\\\"))return fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+se+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return be()}));if(g)return new Promise((function(e,t){g(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return be()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){R(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:It};if(A||(ce++,s.monitorRunDependencies&&s.monitorRunDependencies(ce)),s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(e){return R(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||se.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return R(\\\"wasm streaming compile failed: \\\"+e),R(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.Wa).apply(null,arguments)},s._OrtInit=function(){return(s._OrtInit=s.asm.Xa).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm.Ya).apply(null,arguments)},s._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(s._OrtSessionOptionsAppendExecutionProviderWebNN=s.asm.Za).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm._a).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.$a).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm.ab).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.bb).apply(null,arguments)},s._OrtGetInputCount=function(){return(s._OrtGetInputCount=s.asm.cb).apply(null,arguments)},s._OrtGetOutputCount=function(){return(s._OrtGetOutputCount=s.asm.db).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.eb).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.fb).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.gb).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.hb).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.ib).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.jb).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.kb).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.lb).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.mb).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.nb).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.ob).apply(null,arguments)};var Ut=s._malloc=function(){return(Ut=s._malloc=s.asm.qb).apply(null,arguments)},Wt=s.___errno_location=function(){return(Wt=s.___errno_location=s.asm.rb).apply(null,arguments)},Lt=s._free=function(){return(Lt=s._free=s.asm.sb).apply(null,arguments)},zt=s._pthread_self=function(){return(zt=s._pthread_self=s.asm.tb).apply(null,arguments)};s._emscripten_tls_init=function(){return(s._emscripten_tls_init=s.asm.ub).apply(null,arguments)},s._emscripten_current_thread_process_queued_calls=function(){return(s._emscripten_current_thread_process_queued_calls=s.asm.vb).apply(null,arguments)};var Yt,Ht=s._emscripten_register_main_browser_thread_id=function(){return(Ht=s._emscripten_register_main_browser_thread_id=s.asm.wb).apply(null,arguments)},Bt=s._emscripten_main_browser_thread_id=function(){return(Bt=s._emscripten_main_browser_thread_id=s.asm.xb).apply(null,arguments)},Nt=s._emscripten_sync_run_in_main_thread_4=function(){return(Nt=s._emscripten_sync_run_in_main_thread_4=s.asm.yb).apply(null,arguments)},Gt=s._emscripten_main_thread_process_queued_calls=function(){return(Gt=s._emscripten_main_thread_process_queued_calls=s.asm.zb).apply(null,arguments)},Zt=s._emscripten_run_in_main_runtime_thread_js=function(){return(Zt=s._emscripten_run_in_main_runtime_thread_js=s.asm.Ab).apply(null,arguments)},Vt=s.__emscripten_call_on_thread=function(){return(Vt=s.__emscripten_call_on_thread=s.asm.Bb).apply(null,arguments)},qt=s._pthread_testcancel=function(){return(qt=s._pthread_testcancel=s.asm.Cb).apply(null,arguments)},Xt=s._pthread_exit=function(){return(Xt=s._pthread_exit=s.asm.Db).apply(null,arguments)},Qt=s.__emscripten_thread_init=function(){return(Qt=s.__emscripten_thread_init=s.asm.Eb).apply(null,arguments)},Jt=s._emscripten_get_global_libc=function(){return(Jt=s._emscripten_get_global_libc=s.asm.Fb).apply(null,arguments)},$t=s.___pthread_tsd_run_dtors=function(){return($t=s.___pthread_tsd_run_dtors=s.asm.Gb).apply(null,arguments)},Kt=s.__get_tzname=function(){return(Kt=s.__get_tzname=s.asm.Hb).apply(null,arguments)},en=s.__get_daylight=function(){return(en=s.__get_daylight=s.asm.Ib).apply(null,arguments)},tn=s.__get_timezone=function(){return(tn=s.__get_timezone=s.asm.Jb).apply(null,arguments)},nn=s.stackSave=function(){return(nn=s.stackSave=s.asm.Kb).apply(null,arguments)},rn=s.stackRestore=function(){return(rn=s.stackRestore=s.asm.Lb).apply(null,arguments)},an=s.stackAlloc=function(){return(an=s.stackAlloc=s.asm.Mb).apply(null,arguments)},on=s._emscripten_stack_set_limits=function(){return(on=s._emscripten_stack_set_limits=s.asm.Nb).apply(null,arguments)},un=s._memalign=function(){return(un=s._memalign=s.asm.Ob).apply(null,arguments)},sn=s.__emscripten_allow_main_runtime_queued_calls=999380,cn=s.__emscripten_main_thread_futex=1003380;function ln(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function fn(){function e(){if(!Yt&&(Yt=!0,s.calledRun=!0,!F)&&(A||ge(ne),c(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!A)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();ie.unshift(e)}ge(ie)}}if(!(0<ce))if(A)c(s),A||ge(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)ue();ge(te)}0<ce||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function dn(e){if(j=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new ln(e);oe()||(we.xc(),A||(ge(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),Me[1].length&&ke(1,10),Me[2].length&&ke(2,10))),j=e,oe()||(we.xc(),s.onExit&&s.onExit(e),F=!0),b(e,new ln(e))}if(s.UTF8ToString=V,s.stringToUTF8=X,s.lengthBytesUTF8=Q,s.keepRuntimeAlive=oe,s.PThread=we,s.stackSave=nn,s.stackRestore=rn,s.stackAlloc=an,s.PThread=we,s.wasmMemory=D,s.ExitStatus=ln,fe=function e(){Yt||fn(),Yt||(fe=e)},s.run=fn,s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return A&&(P=!1,we.Jc()),fn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,s,c,l,f,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=b?n(908).dirname(g)+\\\"/\\\":\\\"//\\\",u=function(e,t){return l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||G(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",G),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||b)&&(b?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var m,v=t.print||console.log.bind(console),y=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(m=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&G(\\\"no native wasm support detected\\\");var w,_,O,A,S,E,T,x=!1,M=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&M)return M.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function R(e,t){return e?k(A,e,t):\\\"\\\"}function P(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function D(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function C(e){var t=D(e)+1,n=Pe(t);return n&&P(e,O,n,t),n}function j(){var e=w.buffer;_=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=S=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=E=new Uint32Array(e),t.HEAPF32=T=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var F,I=[],U=[],W=[],L=[];function z(){var e=t.preRun.shift();I.unshift(e)}var Y,H=0,B=null,N=null;function G(e){throw t.onAbort&&t.onAbort(e),y(e),x=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function Z(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Y=\\\"ort-wasm.wasm\\\",!Z()){var V=Y;Y=t.locateFile?t.locateFile(V,g):g+V}function q(){var e=Y;try{if(e==Y&&m)return new Uint8Array(m);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){G(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ub;\\\"number\\\"==typeof r?void 0===n.kb?F.get(r)():F.get(r)(n.kb):r(void 0===n.kb?null:n.kb)}}}function Q(e){this.mb=e-16,this.Eb=function(e){S[this.mb+4>>2]=e},this.Bb=function(e){S[this.mb+8>>2]=e},this.Cb=function(){S[this.mb>>2]=0},this.Ab=function(){O[this.mb+12>>0]=0},this.Db=function(){O[this.mb+13>>0]=0},this.wb=function(e,t){this.Eb(e),this.Bb(t),this.Cb(),this.Ab(),this.Db()}}var J,$={},K=[null,[],[]],ee={};J=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function oe(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(S[t>>2]);return n}}function ue(e,t=\\\"float32\\\"){const n=S[e>>2]+E[e+8>>2];return e=E[e+4>>2],\\\"float32\\\"===t||G(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function se(e){return{type:ae[E[e>>2]],dimensions:oe(E[e+8>>2],S[e+4>>2])}}function ce(e){return{windowDimensions:oe(E[e>>2],S[e+4>>2]),padding:\\\"explicit\\\"===te[S[e+32>>2]]?oe(E[e+8>>2],S[e+12>>2]):void 0,strides:oe(E[e+16>>2],S[e+20>>2]),dilations:oe(E[e+24>>2],S[e+28>>2]),autoPad:te[S[e+32>>2]],layout:re[S[e+36>>2]]}}var le,fe,de,pe,be,he,ge,me,ve,ye,we={};function _e(){if(!ve){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in we)void 0===we[e]?delete t[e]:t[e]=we[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);ve=n}return ve}function Oe(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!ye){ye=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);S[Ie()>>2]=60*a,S[Fe()>>2]=Number(t!=i),n=e(n),r=e(r),n=C(n),r=C(r),i<t?(S[je()>>2]=n,S[je()+4>>2]=r):(S[je()>>2]=r,S[je()+4>>2]=n)}}function Ae(e){return 0==e%4&&(0!=e%100||0==e%400)}function Se(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ee=[31,29,31,30,31,30,31,31,30,31,30,31],Te=[31,28,31,30,31,30,31,31,30,31,30,31];function xe(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ae(e.getFullYear())?Ee:Te)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Me(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=xe(new Date(e.ib+1900,0,1),e.rb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=S[r+40>>2];for(var l in r={Hb:S[r>>2],Gb:S[r+4>>2],pb:S[r+8>>2],nb:S[r+12>>2],jb:S[r+16>>2],ib:S[r+20>>2],qb:S[r+24>>2],rb:S[r+28>>2],Pb:S[r+32>>2],Fb:S[r+36>>2],Ib:c?R(c):\\\"\\\"},n=R(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),c[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in c={\\\"%a\\\":function(e){return f[e.qb].substring(0,3)},\\\"%A\\\":function(e){return f[e.qb]},\\\"%b\\\":function(e){return d[e.jb].substring(0,3)},\\\"%B\\\":function(e){return d[e.jb]},\\\"%C\\\":function(e){return a((e.ib+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.nb,2)},\\\"%e\\\":function(e){return i(e.nb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return a(e.pb,2)},\\\"%I\\\":function(e){return 0==(e=e.pb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.nb+Se(Ae(e.ib+1900)?Ee:Te,e.jb-1),3)},\\\"%m\\\":function(e){return a(e.jb+1,2)},\\\"%M\\\":function(e){return a(e.Gb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.pb&&12>e.pb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Hb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.qb||7},\\\"%U\\\":function(e){var t=new Date(e.ib+1900,0,1),n=0===t.getDay()?t:xe(t,7-t.getDay());return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.ib+1901,0,4),n=u(new Date(e.ib+1900,0,4));t=u(t);var r=xe(new Date(e.ib+1900,0,1),e.rb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.ib+1900?e.rb+32-n.getDate():e.rb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.qb},\\\"%W\\\":function(e){var t=new Date(e.ib,0,1),n=1===t.getDay()?t:xe(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.ib+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ib+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Fb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Ib},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),c[l](r)));return(l=function(e){var t=Array(D(e)+1);return P(e,t,0,t.length),t}(n)).length>t?0:(O.set(l,e),l.length-1)}le||(le=le||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},fe=fe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},de=de||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},pe=pe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},be=be||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},he=he||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},ge=ge||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},me=me||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}});var ke={a:function(e){return Pe(e+16)+16},c:function(e,t){W.unshift({ub:e,kb:t})},f:function(e,t){W.unshift({ub:e,kb:t})},b:function(e,t,n){throw new Q(e).wb(t,n),e},L:function(e,t){return e=R(e),ee.Jb(e,t)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(e,t){return e=R(e),ee.Kb(e,t)},S:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=ze(65536,e);o?(A.fill(0,o,o+e),e=o):e=0,e?($[e]={yb:e,xb:t,vb:!0,fd:i,Ob:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},R:function(e,t){var n=$[e];return 0!==t&&n?(t===n.xb&&($[e]=null,n.vb&&Ce(n.yb)),e=0):e=-28,e},m:function(){},I:function(e,t,n){return e=R(e),ee.Lb(e,t,n)},G:function(){},s:function(){},H:function(){},k:function(){G()},v:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return S[De()>>2]=28,-1;e=J()}return S[t>>2]=e/1e3|0,S[t+4>>2]=e%1e3*1e6|0,0},J:function(e,t){return e-t},Ba:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ca:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Aa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){return 2147483648},A:function(e,t,n){A.copyWithin(e,t,t+n)},l:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{w.grow(Math.min(2147483648,r)-_.byteLength+65535>>>16),j();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},F:function(e){for(var t=J();J()-t<e;);},ya:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][E[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][E[e+4>>2]]}),le.create(navigator.ml.createContext(t))},D:function(e,t){var n=0;return _e().forEach((function(r,i){var a=t+n;for(i=S[e+4*i>>2]=a,a=0;a<r.length;++a)O[i++>>0]=r.charCodeAt(a);O[i>>0]=0,n+=r.length+1})),0},E:function(e,t){var n=_e();S[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),S[t>>2]=r,0},i:function(){return 0},C:function(e,t){return e=1==e||2==e?2:G(),O[t>>0]=e,0},p:function(e,t,n,r){return e=ee.Nb(e),t=ee.Mb(e,t,n),S[r>>2]=t,0},z:function(){},q:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=S[t+8*a>>2],u=S[t+(8*a+4)>>2],s=0;s<u;s++){var c=A[o+s],l=K[e];0===c||10===c?((1===e?v:y)(k(l,0)),l.length=0):l.push(c)}i+=u}return S[r>>2]=i,0},da:function(e){var t=Date.now();return S[e>>2]=t/1e3|0,S[e+4>>2]=t%1e3*1e3|0,0},P:function e(t,n){return t=new Date(1e3*S[t>>2]),S[n>>2]=t.getUTCSeconds(),S[n+4>>2]=t.getUTCMinutes(),S[n+8>>2]=t.getUTCHours(),S[n+12>>2]=t.getUTCDate(),S[n+16>>2]=t.getUTCMonth(),S[n+20>>2]=t.getUTCFullYear()-1900,S[n+24>>2]=t.getUTCDay(),S[n+36>>2]=0,S[n+32>>2]=0,S[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.tb||(e.tb=C(\\\"GMT\\\")),S[n+40>>2]=e.tb,n},t:function(e,t){Oe(),e=new Date(1e3*S[e>>2]),S[t>>2]=e.getSeconds(),S[t+4>>2]=e.getMinutes(),S[t+8>>2]=e.getHours(),S[t+12>>2]=e.getDate(),S[t+16>>2]=e.getMonth(),S[t+20>>2]=e.getFullYear()-1900,S[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);S[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,S[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),S[t+32>>2]=e,e=S[je()+(e?4:0)>>2],S[t+40>>2]=e,t},n:function(e){Oe();var t=new Date(S[e+20>>2]+1900,S[e+16>>2],S[e+12>>2],S[e+8>>2],S[e+4>>2],S[e>>2],0),n=S[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?S[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),S[e+24>>2]=t.getDay(),S[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,S[e>>2]=t.getSeconds(),S[e+4>>2]=t.getMinutes(),S[e+8>>2]=t.getHours(),S[e+12>>2]=t.getDate(),S[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},y:function(e){le.ob(e)},x:function(e){le.release(e)},va:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.add(t,n),ge.create(n)},ua:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.averagePool2d(t,n),ge.create(n)},ta:function(e,t,n,r,i){return e=de.get(e),t=ge.get(t),n=ge.get(n),r=ge.get(r),i={scale:ge.get(S[i>>2]),bias:ge.get(S[i+4>>2]),axis:S[i+8>>2],epsilon:T[i+12>>2],activation:me.get(S[i+16>>2])},i=e.batchNormalization(t,n,r,i),ge.create(i)},sa:function(e,t){e=de.get(e),t=he.get(t);try{var n=e.build(t);return fe.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},ra:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.clamp(t,{minValue:T[n>>2],maxValue:T[n+4>>2]}),ge.create(n)},qa:function(e,t,n,r){e=de.get(e),t=oe(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ge.get(t[i]));return r=e.concat(n,r),ge.create(r)},pa:function(e,t,n){return e=de.get(e),n=ue(n,(t=se(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ge.create(n)},oa:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={padding:\\\"explicit\\\"===te[S[r+40>>2]]?oe(E[r>>2],S[r+4>>2]):void 0,strides:oe(E[r+8>>2],S[r+12>>2]),dilations:oe(E[r+16>>2],S[r+20>>2]),autoPad:te[S[r+40>>2]],groups:S[r+48>>2],inputLayout:re[S[r+52>>2]],filterLayout:ne[S[r+56>>2]],bias:ge.get(S[r+60>>2]),activation:me.get(S[r+64>>2])},r=e.conv2d(t,n,r),ge.create(r)},na:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={c:ge.get(S[r>>2]),alpha:T[r+4>>2],beta:T[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),ge.create(r)},ma:function(e,t,n){return e=de.get(e),t=R(t),n=se(n),n=e.input(t,n),ge.create(n)},la:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.leakyRelu(t,{alpha:T[n>>2]}),ge.create(n)},ka:function(e,t){return e=de.get(e).leakyRelu({alpha:T[t>>2]}),me.create(e)},ja:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.matmul(t,n),ge.create(n)},ia:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.maxPool2d(t,n),ge.create(n)},u:function(e){de.release(e)},ha:function(e,t){return e=de.get(e),t=ge.get(t),t=e.relu(t),ge.create(t)},ga:function(e){return e=de.get(e).relu(),me.create(e)},fa:function(e,t,n){e=de.get(e),t=ge.get(t);var r=ie[S[n>>2]],i=E[n+4>>2],a=S[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(T[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:oe(E[n+12>>2],S[n+16>>2]),axes:oe(E[n+20>>2],S[n+24>>2])},n=e.resample2d(t,n),ge.create(n)},ea:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=oe(r,n),n=e.reshape(t,n),ge.create(n)},ca:function(e,t,n){return e=de.get(e),t=ge.get(t),n={permutation:oe(E[n>>2],S[n+4>>2])},n=e.transpose(t,n),ge.create(n)},xa:function(e,t,n){return e=fe.get(e),t=pe.get(t),n=be.get(n),e.compute(t,n)},wa:function(e){fe.ob(e)},w:function(e){fe.release(e)},aa:function(e){pe.release(e)},ba:function(e,t,n){e=pe.get(e),t=R(t),n=0===S[n+12>>2]?ue(n+0):{resource:ue(n+0),dimensions:oe(E[n+16>>2],S[n+12>>2])},e[t]=n},_:function(e){he.release(e)},$:function(e,t,n){e=he.get(e),t=R(t),n=ge.get(n),e[t]=n},Y:function(e){be.release(e)},Z:function(e,t,n){e=be.get(e),t=R(t),n=ue(n),e[t]=n},e:function(e){ge.ob(e)},d:function(e){ge.release(e)},X:function(e){me.ob(e)},h:function(e){me.release(e)},za:Me,g:function(e,t,n,r){return Me(e,t,n,r)},W:function(e){return e=le.get(e),e=new MLGraphBuilder(e),de.create(e)},V:function(){return pe.create({})},U:function(){return he.create({})},T:function(){return be.create({})}};!function(){function e(e){t.asm=e.exports,w=t.asm.Da,j(),F=t.asm.hb,U.unshift(t.asm.Ea),H--,t.monitorRunDependencies&&t.monitorRunDependencies(H),0==H&&(null!==B&&(clearInterval(B),B=null),N&&(e=N,N=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!m&&(p||b)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return q()}));if(s)return new Promise((function(e,t){s(Y,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return q()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){y(\\\"failed to asynchronously prepare wasm: \\\"+e),G(e)}))}var a={a:ke};if(H++,t.monitorRunDependencies&&t.monitorRunDependencies(H),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return y(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Z()||Y.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return y(\\\"wasm streaming compile failed: \\\"+e),y(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ea).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Fa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ga).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Ha).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Ia).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Ja).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ka).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.La).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Ma).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.Na).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Oa).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Pa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Qa).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ra).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Sa).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ta).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Ua).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Va).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Wa).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Xa).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ya).apply(null,arguments)};var Re,Pe=t._malloc=function(){return(Pe=t._malloc=t.asm.Za).apply(null,arguments)},De=t.___errno_location=function(){return(De=t.___errno_location=t.asm._a).apply(null,arguments)},Ce=t._free=function(){return(Ce=t._free=t.asm.$a).apply(null,arguments)},je=t.__get_tzname=function(){return(je=t.__get_tzname=t.asm.ab).apply(null,arguments)},Fe=t.__get_daylight=function(){return(Fe=t.__get_daylight=t.asm.bb).apply(null,arguments)},Ie=t.__get_timezone=function(){return(Ie=t.__get_timezone=t.asm.cb).apply(null,arguments)},Ue=t.stackSave=function(){return(Ue=t.stackSave=t.asm.db).apply(null,arguments)},We=t.stackRestore=function(){return(We=t.stackRestore=t.asm.eb).apply(null,arguments)},Le=t.stackAlloc=function(){return(Le=t.stackAlloc=t.asm.fb).apply(null,arguments)},ze=t._memalign=function(){return(ze=t._memalign=t.asm.gb).apply(null,arguments)};function Ye(){function e(){if(!Re&&(Re=!0,t.calledRun=!0,!x)){if(X(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();L.unshift(e)}X(L)}}if(!(0<H)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)z();X(I),0<H||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=R,t.stringToUTF8=function(e,t,n){return P(e,A,t,n)},t.lengthBytesUTF8=D,t.stackSave=Ue,t.stackRestore=We,t.stackAlloc=Le,N=function e(){Re||Ye(),Re||(N=e)},t.run=Ye,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Ye(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,i,a){if(\\\"object\\\"==typeof e&&null!==e){if(i.has(e))throw new Error(\\\"Circular reference in options\\\");i.add(e)}Object.entries(e).forEach((function(e){var o=n(e,2),u=o[0],s=o[1],c=r?r+u:u;if(\\\"object\\\"==typeof s)t.iterateExtraOptions(s,c+\\\".\\\",i,a);else if(\\\"string\\\"==typeof s||\\\"number\\\"==typeof s)a(c,s.toString());else{if(\\\"boolean\\\"!=typeof s)throw new Error(\\\"Can't handle extra config type: \\\"+typeof s);a(c,s?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),i=n(983),a=n(361);t.setRunOptions=function(e){var t=a.getInstance(),n=0,o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var s=0;if(void 0!==(null==e?void 0:e.tag)&&(s=i.allocWasmString(e.tag,o)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,s)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var i=n(967),a=n(983),o=n(361);t.setSessionOptions=function(e){var t,n,u=o.getInstance(),s=0,c=[],l=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(l);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(l.graphOptimizationLevel=\\\"all\\\");var f=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(l.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(l.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(l.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(l.executionMode=\\\"sequential\\\");var d=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(l.executionMode),p=0;if(void 0!==(null==e?void 0:e.logId)&&(p=a.allocWasmString(e.logId,c)),void 0===(null==e?void 0:e.logSeverityLevel))l.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))l.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(l.enableProfiling=!1),0===(s=u._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,p,l.logSeverityLevel,l.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&i.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=a.allocWasmString(e,c),r=a.allocWasmString(t,c);if(0!==u._OrtAddSessionConfigEntry(s,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var b=r(e.executionProviders),h=b.next();!h.done;h=b.next()){var g=h.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof g?g:g.name)){var m=0;if(\\\"string\\\"!=typeof g){var v=g;(null==v?void 0:v.devicePreference)&&(m=v.devicePreference)}if(console.log(\\\"webnn device preference: \\\"+m),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(s,m))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=b.return)&&n.call(b)}finally{if(t)throw t.error}}return[s,c]}catch(e){throw 0!==s&&u._OrtReleaseSessionOptions(s),c.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var a=n(586),o=n(919),u=n(983),s=n(361);t.initOrt=function(e,t){var n=s.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var c=[];t.createSession=function(e,t){var n,i=s.getInstance(),a=i._malloc(e.byteLength),u=0,l=0,f=[];try{if(l=(n=r(o.setSessionOptions(t),2))[0],f=n[1],i.HEAPU8.set(e,a),0===(u=i._OrtCreateSession(a,e.byteLength,l)))throw new Error(\\\"Can't create a session\\\")}finally{i._free(a),i._OrtReleaseSessionOptions(l),f.forEach(i._free)}for(var d=i._OrtGetInputCount(u),p=i._OrtGetOutputCount(u),b=[],h=[],g=[],m=[],v=0;v<d;v++){var y=i._OrtGetInputName(u,v);if(0===y)throw new Error(\\\"Can't get an input name\\\");h.push(y),b.push(i.UTF8ToString(y))}for(v=0;v<p;v++){var w=i._OrtGetOutputName(u,v);if(0===w)throw new Error(\\\"Can't get an output name\\\");m.push(w),g.push(i.UTF8ToString(w))}return c.push([u,h,m]),[c.length-1,b,g]},t.releaseSession=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),c[e]=void 0};var l=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},f=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,i,o){var d,p=s.getInstance(),b=c[e];if(!b)throw new Error(\\\"invalid session id\\\");var h=b[0],g=b[1],m=b[2],v=t.length,y=i.length,w=0,_=[],O=[],A=[];try{w=(d=r(a.setRunOptions(o),2))[0],_=d[1];for(var S=function(e){var t=n[e][0],r=n[e][1],i=n[e][2],a=void 0,o=void 0;if(Array.isArray(i)){o=4*i.length,a=p._malloc(o),A.push(a);for(var s=a/4,c=0;c<i.length;c++){if(\\\"string\\\"!=typeof i[c])throw new TypeError(\\\"tensor data at index \\\"+c+\\\" is not a string\\\");p.HEAPU32[s++]=u.allocWasmString(i[c],A)}}else o=i.byteLength,a=p._malloc(o),A.push(a),p.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,o),a);var l=p.stackSave(),f=p.stackAlloc(4*r.length);try{var d=f/4;r.forEach((function(e){return p.HEAP32[d++]=e}));var b=p._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),a,o,f,r.length);if(0===b)throw new Error(\\\"Can't create a tensor\\\");O.push(b)}finally{p.stackRestore(l)}},E=0;E<v;E++)S(E);var T=p.stackSave(),x=p.stackAlloc(4*v),M=p.stackAlloc(4*v),k=p.stackAlloc(4*y),R=p.stackAlloc(4*y);try{var P=x/4,D=M/4,C=k/4,j=R/4;for(E=0;E<v;E++)p.HEAPU32[P++]=O[E],p.HEAPU32[D++]=g[t[E]];for(E=0;E<y;E++)p.HEAPU32[C++]=0,p.HEAPU32[j++]=m[i[E]];var F=p._OrtRun(h,M,x,v,R,y,k,w),I=[];if(0===F)for(E=0;E<y;E++){var U=p.HEAPU32[k/4+E],W=p.stackSave(),L=p.stackAlloc(16),z=void 0,Y=0;try{if(0!==(F=p._OrtGetTensorData(U,L,L+4,L+8,L+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+F);var H=L/4,B=p.HEAPU32[H++];Y=p.HEAPU32[H++];for(var N=p.HEAPU32[H++],G=p.HEAPU32[H++],Z=[],V=0;V<G;V++)Z.push(p.HEAPU32[N/4+V]);p._OrtFree(N);var q=0===Z.length?1:Z.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(z=l(B))){for(var X=[],Q=Y/4,J=0;J<q;J++){var $=p.HEAPU32[Q++],K=J===q-1?void 0:p.HEAPU32[Q]-$;X.push(p.UTF8ToString($,K))}I.push([z,Z,X])}else{var ee=new(f(z))(q);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(p.HEAPU8.subarray(Y,Y+ee.byteLength)),I.push([z,Z,ee])}}finally{p.stackRestore(W),\\\"string\\\"===z&&Y&&p._free(Y),p._OrtReleaseTensor(U)}}if(0===F)return I;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+F+\\\".\\\")}finally{p.stackRestore(T)}}finally{O.forEach(p._OrtReleaseTensor),A.forEach(p._free),p._OrtReleaseRunOptions(w),_.forEach(p._free)}},t.endProfiling=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var a=i(e),o=a.next();!o.done;o=a.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var c,l=a(n(449)),f=s(n(474)),d=s(n(932)),p=!1,b=!1,h=!1,g=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return o(void 0,void 0,void 0,(function(){var t,r,i,a,o,s,m,v,y,w,_;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(b)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return b=!0,t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),s=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,m=g(!1,a),v=g(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[v]:void 0,w=!1,_=[],t>0&&_.push(new Promise((function(e){setTimeout((function(){w=!0,e()}),t)}))),_.push(new Promise((function(e,t){var r=a?f.default:d.default,i={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===m?null!=y?y:(null!=s?s:t)+v:t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=l.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+f.default.toString()+\\\"})();\\\";i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(t){b=!1,p=!0,c=t,e()}),(function(e){b=!1,h=!0,t(e)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(p&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!p||b||h||(b=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,b=!1,p=!1,h=!0)}},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,i=r.numThreads,a=r.loggingLevel;e.initOrt(i,a),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var o=n.data.in,u=o.model,s=o.options,c=e.createSession(u,s);postMessage({type:\\\"create\\\",out:c})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var l=n.data.in;e.releaseSession(l),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var f=n.data.in,d=f.sessionId,p=f.inputIndices,b=f.inputs,h=f.outputIndices,g=(s=f.options,e.run(d,p,b,h,s));postMessage({type:\\\"run\\\",out:g},e.extractTransferableBuffers(g))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{l=n.data.in,e.endProfiling(l),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2174__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}