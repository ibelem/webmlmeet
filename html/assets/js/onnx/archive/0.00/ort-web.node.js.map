{"version":3,"sources":["webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external \"fs\"","webpack://onnxruntime-web/external \"os\"","webpack://onnxruntime-web/external \"path\"","webpack://onnxruntime-web/external \"perf_hooks\"","webpack://onnxruntime-web/external \"util\"","webpack://onnxruntime-web/external \"worker_threads\"","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["_scriptDir","e","document","currentScript","src","__filename","t","R","buffer","j","$","W","n","Y","r","U","i","q","o","B","a","G","u","c","s","ready","Promise","f","l","hasOwnProperty","d","p","h","m","b","g","_","y","window","w","importScripts","v","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","O","T","locateFile","__dirname","normalize","readFileSync","Uint8Array","Z","readFile","argv","length","replace","slice","on","sn","le","oe","exitCode","exit","inspect","global","Worker","x","console","error","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","S","k","print","log","bind","M","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","P","I","F","TextDecoder","this","decode","SharedArrayBuffer","call","N","H","subarray","String","fromCharCode","L","z","charCodeAt","V","Q","X","Ft","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","J","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","K","ee","te","ne","re","ie","ae","preRun","shift","unshift","ue","ce","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","he","999828","me","Ec","Wb","get","be","Atomics","load","cn","compareExchange","notify","ge","ye","Rb","ic","worker","_emscripten_futex_wake","_e","Ub","Tb","qc","qd","Ic","store","Qt","qt","Jc","receiveObjectTransfer","Pc","threadInit","Zc","threadCancel","Yc","threadExit","yc","setExitStatus","Rc","pc","vc","pop","$t","wc","Yt","postMessage","cmd","xc","terminate","Qb","nc","Sb","Wt","mc","Vb","Qc","push","splice","un","Lc","onmessage","data","Cc","targetThread","wd","transferList","Nt","Oe","thread","loaded","ac","threadId","text","alert","ln","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","zc","Fc","ed","now","we","Date","jt","ve","Le","Ae","$b","Wc","Tc","Uc","Sc","Vc","Gc","fc","Xb","detached","Xt","start_routine","Xc","arg","threadInfoStruct","stackBase","stackSize","time","dd","Te","exchange","wait","xe","establishStackSpace","nn","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","Se","ke","Me","De","kd","Re","Ce","Pe","Ie","Ze","Fe","ld","je","Math","ceil","an","fill","Nc","Kc","Ac","fd","td","flags","offset","We","Ye","Ue","md","qe","Be","Ge","Ne","He","arguments","tn","rn","Ht","ze","Ve","Qe","querySelector","Xe","ec","uc","hd","Lt","dc","cc","getParameter","width","height","viewport","$e","Je","Ke","et","tt","nt","rt","split","it","ot","BYTES_PER_ELEMENT","at","alpha","ut","type","dimensions","ct","windowDimensions","padding","strides","dilations","autoPad","layout","st","ft","lt","dt","pt","ht","mt","bt","gt","_t","yt","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","wt","forEach","vt","At","Ot","Tt","od","nd","xt","Et","St","toTimeString","match","Bc","getFullYear","getTimezoneOffset","max","en","Kt","Number","Jt","kt","Mt","Dt","Rt","Ct","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Pt","toString","getDay","Pb","lc","bd","ad","jc","bc","Yb","kc","xd","$c","cd","RegExp","substring","abs","includes","Array","set","Zb","Oc","create","oc","object","hc","release","It","Zt","Gt","gd","Bt","zt","aa","Ta","ba","ca","apply","copyWithin","hardwareConcurrency","min","grow","setTimeout","stack","Vt","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Mc","rd","sc","Dc","ud","vd","tc","getContext","WebGLRenderingContext","pd","attributes","version","canvas","Hc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","jd","sd","getSupportedExtensions","Ra","devicePreference","ml","createContext","Ua","ua","Va","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","rc","getSeconds","getMinutes","getHours","setTime","Qa","Pa","La","add","Ka","averagePool2d","Ja","scale","bias","axis","epsilon","activation","batchNormalization","Ia","build","Ha","minValue","maxValue","clamp","Ga","concat","Fa","constant","Ea","groups","inputLayout","filterLayout","conv2d","Da","beta","aTranspose","bTranspose","gemm","Ca","input","Ba","leakyRelu","Aa","za","matmul","ya","maxPool2d","ra","xa","relu","wa","va","mode","scales","sizes","axes","resample2d","ta","reshape","sa","permutation","transpose","Oa","compute","Na","Ma","pa","qa","resource","na","oa","la","ma","ka","ja","ia","ha","Sa","ga","MLGraphBuilder","fa","ea","da","asm","exports","pb","Wa","ub","monitorRunDependencies","clearInterval","instance","module","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Xa","_OrtCreateSessionOptions","Ya","_OrtSessionOptionsAppendExecutionProviderWebNN","Za","_OrtAddSessionConfigEntry","_a","_OrtReleaseSessionOptions","$a","_OrtCreateSession","ab","_OrtReleaseSession","bb","_OrtGetInputCount","cb","_OrtGetOutputCount","db","_OrtGetInputName","eb","_OrtGetOutputName","fb","_OrtFree","gb","_OrtCreateTensor","hb","_OrtGetTensorData","ib","_OrtReleaseTensor","jb","_OrtCreateRunOptions","kb","_OrtAddRunConfigEntry","lb","_OrtReleaseRunOptions","mb","_OrtRun","nb","_OrtEndProfiling","ob","_malloc","qb","___errno_location","rb","_free","sb","_pthread_self","tb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","vb","Ut","_emscripten_register_main_browser_thread_id","wb","_emscripten_main_browser_thread_id","xb","_emscripten_sync_run_in_main_thread_4","yb","_emscripten_main_thread_process_queued_calls","zb","_emscripten_run_in_main_runtime_thread_js","Ab","__emscripten_call_on_thread","Bb","_pthread_testcancel","Cb","_pthread_exit","Db","__emscripten_thread_init","Eb","_emscripten_get_global_libc","Fb","___pthread_tsd_run_dtors","Gb","__get_tzname","Hb","__get_daylight","Ib","__get_timezone","Jb","stackSave","Kb","stackRestore","Lb","stackAlloc","Mb","_emscripten_stack_set_limits","Nb","_memalign","Ob","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","fn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","factory","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","root","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","ArrayBuffer","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","momentum","spatial","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.node.js","sourcesContent":["var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return R.buffer!=j&&$(R.buffer),W}function n(){return R.buffer!=j&&$(R.buffer),Y}function r(){return R.buffer!=j&&$(R.buffer),U}function i(){return R.buffer!=j&&$(R.buffer),q}function o(){return R.buffer!=j&&$(R.buffer),B}function a(){return R.buffer!=j&&$(R.buffer),G}var u,c,s;e=e||{},u||(u=void 0!==e?e:{}),u.ready=new Promise((function(e,t){c=e,s=t}));var f,l={};for(f in u)u.hasOwnProperty(f)&&(l[f]=u[f]);var d=\"./this.program\";function p(e,t){throw t}var h,m,b,g,_,y=\"object\"==typeof window,w=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=u.ENVIRONMENT_IS_PTHREAD||!1,O=\"\";function T(e){return u.locateFile?u.locateFile(e,O):O+e}if(v){if(O=w?require(\"path\").dirname(O)+\"/\":__dirname+\"/\",h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof sn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},u.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||w)&&(w?O=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(O=document.currentScript.src),_scriptDir&&(O=_scriptDir),O=0!==O.indexOf(\"blob:\")?O.substr(0,O.lastIndexOf(\"/\")+1):\"\",v?(h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},w&&(b=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,S,k=u.print||console.log.bind(console),M=u.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(u[f]=l[f]);l=null,u.thisProgram&&(d=u.thisProgram),u.quit&&(p=u.quit),u.wasmBinary&&(S=u.wasmBinary);var D=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var R,C,P,I=!1;function Z(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var j,W,Y,U,q,B,G,N=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&N)return N.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?H(n(),e,t):\"\"}function z(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function V(e,t,r){return z(e,n(),t,r)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function X(e){var n=Q(e)+1,r=Ft(n);return r&&z(e,t(),r,n),r}function $(e){j=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=Y=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=q=new Uint32Array(e),u.HEAPF32=B=new Float32Array(e),u.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(j=u.buffer);var J=u.INITIAL_MEMORY||16777216;if(A)R=u.wasmMemory,j=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:J/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");R&&(j=R.buffer),J=j.byteLength,$(j);var K,ee=[],te=[],ne=[],re=[],ie=0;function oe(){return D||0<ie}function ae(){var e=u.preRun.shift();ee.unshift(e)}var ue,ce=0,se=null,fe=null;function le(e){throw u.onAbort&&u.onAbort(e),Z(!A),M(e),I=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ue.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ue;try{if(e==ue&&S)return new Uint8Array(S);if(b)return b(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue=\"ort-wasm-threaded.wasm\",de()||(ue=T(ue));var he={999828:function(){throw\"Canceled!\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(u);else{var n=t.Ec;\"number\"==typeof n?void 0===t.Wb?K.get(n)():K.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),cn>>2),o=0;if(i==e&&Atomics.compareExchange(r(),cn>>2,i,0)==i&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+o;throw\"Atomics.notify returned an unexpected value \"+e}function ge(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.Rb[e];t&&(r()[e+12>>2]=0,ye.ic(t.worker))}u._emscripten_futex_wake=be;var _e,ye={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ft(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ft(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),Qt(e,!w,1),qt(e)},Jc:function(){ye.receiveObjectTransfer=ye.Pc,ye.threadInit=ye.Zc,ye.threadCancel=ye.Yc,ye.threadExit=ye.yc,ye.setExitStatus=ye.Rc},Rb:{},pc:[],vc:function(){for(;0<ye.pc.length;)ye.pc.pop()();$t()},wc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.vc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),be(e+0,2147483647),Qt(0,0,0)},Rc:function(e){P=e},yc:function(e){var t=Yt();t&&(ye.wc(t,e),A&&postMessage({cmd:\"exit\"}))},Yc:function(){ye.wc(Yt(),-1),postMessage({cmd:\"cancelDone\"})},xc:function(){for(var e in ye.Rb){var t=ye.Rb[e];t&&t.worker&&ye.ic(t.worker)}for(ye.Rb={},e=0;e<ye.Ub.length;++e){var n=ye.Ub[e];n.terminate()}for(ye.Ub=[],e=0;e<ye.Tb.length;++e)t=(n=ye.Tb[e]).Qb,ye.nc(t),n.terminate();ye.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=r()[e.Sb+100>>2];r()[e.Sb+100>>2]=0,Wt(t),Wt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Wt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){ye.Qc((function(){delete ye.Rb[e.Qb.Sb],ye.Ub.push(e),ye.Tb.splice(ye.Tb.indexOf(e),1),ye.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){r()[un>>2]=0;try{e()}finally{r()[un>>2]=1}},Pc:function(){},Zc:function(){for(var e in ye.qc)ye.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var o=n.data,a=o.cmd;if(e.Qb&&(ye.Cc=e.Qb.Sb),o.targetThread&&o.targetThread!=Yt()){var u=ye.Rb[o.wd];u?u.worker.postMessage(n.data,o.transferList):M('Internal error! Worker sent a message \"'+a+'\" to target pthread '+o.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Nt();else if(\"spawnThread\"===a)Oe(n.data);else if(\"cleanupThread\"===a)ge(o.thread);else if(\"killThread\"===a){if(n=o.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,o=ye.Rb[n],delete ye.Rb[n],o.worker.terminate(),ye.nc(o),ye.Tb.splice(ye.Tb.indexOf(o.worker),1),o.worker.Qb=void 0}else if(\"cancelThread\"===a){if(n=o.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.Rb[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\"print\"===a)k(\"Thread \"+o.threadId+\": \"+o.text);else if(\"printErr\"===a)M(\"Thread \"+o.threadId+\": \"+o.text);else if(\"alert\"===a)alert(\"Thread \"+o.threadId+\": \"+o.text);else if(\"exit\"===a)e.Qb&&Atomics.load(i(),e.Qb.Sb+64>>2)&&ye.ic(e);else if(\"exitProcess\"===a)try{ln(o.returnCode)}catch(e){if(e instanceof sn)return;throw e}else\"cancelDone\"===a?ye.ic(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):M(\"worker sent an unknown command \"+a));ye.Cc=void 0},e.onerror=function(e){M(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},v&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},zc:function(){var e=T(\"ort-wasm-threaded.worker.js\");ye.Ub.push(new Worker(e))},Fc:function(){return 0==ye.Ub.length&&(ye.zc(),ye.Lc(ye.Ub[0])),ye.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[jt()>>2]=28,-1;e=_e()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function ve(e,t){if(A)return Le(1,1,e,t);ne.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){r()[this.$b+4>>2]=e},this.Tc=function(e){r()[this.$b+8>>2]=e},this.Uc=function(){r()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Oe(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\"Internal error!\";if(!e.fc)throw\"Internal error, no pthread ptr!\";ye.Tb.push(t);for(var n=Ft(512),o=0;128>o;++o)r()[n+4*o>>2]=0;var a=e.Vb+e.Xb,u=(o=ye.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.Sb),Atomics.store(i(),u+20,e.Xb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Xb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),n=Xt()+40,Atomics.store(i(),u+43,n),t.Qb=o;var c={cmd:\"run\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){c.time=performance.now(),t.postMessage(c,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Te(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var o=performance.now();for(i=o+i,Atomics.exchange(r(),cn>>2,e);;){if((o=performance.now())>i)return Atomics.exchange(r(),cn>>2,0),-73;if(0==(o=Atomics.exchange(r(),cn>>2,0)))break;if(Nt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),cn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){v||w||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,M(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}u.establishStackSpace=function(e,t){on(e,t),nn(e)},u.invokeEntryPoint=function(e,t){return K.get(e)(t)},_e=v?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-u.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},Se=[null,[],[]];function ke(e,t){var n=Se[e];0===t||10===t?((1===e?k:M)(H(n,0)),n.length=0):n.push(t)}var Me={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),Me.kd(e,t))}function Re(e,t,n){return A?Le(3,1,e,t,n):0}function Ce(e,t){if(A)return Le(4,1,e,t)}function Pe(e,t,n){if(A)return Le(5,1,e,t,n)}function Ie(e,t,n){return A?Le(6,1,e,t,n):0}function Ze(e,t){if(A)return Le(7,1,e,t)}function Fe(e,t){return A?Le(8,1,e,t):(e=L(e),Me.ld(e,t))}function je(e,t,r,i,o,a){if(A)t=Le(9,1,e,t,r,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=an(65536,u))?n().fill(0,e,e+u):e=0,e?(Ee[e]={Nc:e,Kc:t,Ac:!0,fd:o,td:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function We(e,t){if(A)e=Le(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Kc&&(Ee[e]=null,n.Ac&&Wt(n.Nc)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Le(11,1,e,t,n)}function Ue(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),Me.md(e,t,n))}function qe(e){if(A)return Le(13,1,e)}function Be(e,t){if(A)return Le(14,1,e,t)}function Ge(e){if(A)return Le(15,1,e)}function Ne(){if(A)return Le(16,1);le()}var He=[];function Le(e,t){for(var n=arguments.length-2,r=tn(),i=rn(8*n),o=i>>3,u=0;u<n;u++){var c=arguments[2+u];a()[o+u]=c}return n=Ht(e,n,i,t),nn(r),n}var ze=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Qe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Xe(e,t,n){var i=Qe(e);if(!i)return-4;if(i.ec&&(r()[i.ec>>2]=t,r()[i.ec+4>>2]=n),!i.uc&&i.hd){if(i.ec){i=r()[i.ec+8>>2],e=e?L(e):\"\";var o=tn(),a=rn(12),u=0;if(e){u=Q(e)+1;var c=Ft(u);V(e,c,u),u=c}return r()[a>>2]=u,r()[a+4>>2]=t,r()[a+8>>2]=n,Lt(0,i,657457152,0,u,a),nn(o),1}return-4}return i.uc&&(i=i.uc),e=!1,i.dc&&i.dc.cc&&(e=0===(e=i.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Le(17,1,e,t,n):Xe(e,t,n)}var Je=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=[\"nearest-neighbor\",\"linear\"],rt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function it(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function ot(e,t=\"float32\"){const o=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],Z(\"float32\"===t),new Float32Array(n().buffer,o,e/Float32Array.BYTES_PER_ELEMENT)}function at(e){return{alpha:o()[e>>2]}}function ut(e){return{type:rt[i()[e>>2]],dimensions:it(i()[e+8>>2],r()[e+4>>2])}}function ct(e){return{windowDimensions:it(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?it(i()[e+8>>2],r()[e+12>>2]):void 0,strides:it(i()[e+16>>2],r()[e+20>>2]),dilations:it(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var st,ft,lt,dt,pt,ht,mt,bt,gt,_t={};function yt(){if(!gt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in _t)void 0===_t[e]?delete t[e]:t[e]=_t[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);gt=n}return gt}function wt(e,n){if(A)return Le(18,1,e,n);var i=0;return yt().forEach((function(o,a){var u=n+i;for(a=r()[e+4*a>>2]=u,u=0;u<o.length;++u)t()[a++>>0]=o.charCodeAt(u);t()[a>>0]=0,i+=o.length+1})),0}function vt(e,t){if(A)return Le(19,1,e,t);var n=yt();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function At(e){return A?Le(20,1,e):0}function Ot(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Tt(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=Me.od(e),t=Me.nd(e,t,n),r()[i>>2]=t,0)}function xt(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function Et(e,t,i,o){if(A)return Le(24,1,e,t,i,o);for(var a=0,u=0;u<i;u++){for(var c=r()[t+8*u>>2],s=r()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,n()[c+f]);a+=s}return r()[o>>2]=a,0}function St(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!St.Bc){St.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var o=i.getTimezoneOffset(),a=Math.max(t,o);r()[en()>>2]=60*a,r()[Kt()>>2]=Number(t!=o),n=e(n),i=e(i),n=X(n),i=X(i),o<t?(r()[Jt()>>2]=n,r()[Jt()+4>>2]=i):(r()[Jt()>>2]=i,r()[Jt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Mt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Dt=[31,29,31,30,31,30,31,31,30,31,30,31],Rt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Dt:Rt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pt(e,n,i,o){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function u(e,t){return a(e,t,\"0\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2];for(var d in o={bd:r()[o>>2],ad:r()[o+4>>2],jc:r()[o+8>>2],bc:r()[o+12>>2],Yb:r()[o+16>>2],Pb:r()[o+20>>2],kc:r()[o+24>>2],lc:r()[o+28>>2],xd:r()[o+32>>2],$c:r()[o+36>>2],cd:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),h=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.kc].substring(0,3)},\"%A\":function(e){return p[e.kc]},\"%b\":function(e){return h[e.Yb].substring(0,3)},\"%B\":function(e){return h[e.Yb]},\"%C\":function(e){return u((e.Pb+1900)/100|0,2)},\"%d\":function(e){return u(e.bc,2)},\"%e\":function(e){return a(e.bc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return u(e.jc,2)},\"%I\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.bc+Mt(kt(e.Pb+1900)?Dt:Rt,e.Yb-1),3)},\"%m\":function(e){return u(e.Yb+1,2)},\"%M\":function(e){return u(e.ad,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.jc&&12>e.jc?\"AM\":\"PM\"},\"%S\":function(e){return u(e.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.kc||7},\"%U\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.Pb+1901,0,4),n=s(new Date(e.Pb+1900,0,4));t=s(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>c(r,n)?\"53\":0>=c(t,r)?\"01\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\"%w\":function(e){return e.kc},\"%W\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.Pb+1900).toString().substring(2)},\"%Y\":function(e){return e.Pb+1900},\"%z\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.cd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](o)));return(d=function(e){var t=Array(Q(e)+1);return z(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}st||(st=st||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var It=[null,ve,De,Re,Ce,Pe,Ie,Ze,Fe,je,We,Ye,Ue,qe,Be,Ge,Ne,$e,wt,vt,At,Ot,Tt,xt,Et,St],Zt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},G:function(e,t){return we(e,t)},b:function(e){return Ft(e+16)+16},d:function(e,t){return ve(e,t)},e:function(e,t){ye.pc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,o){if(\"undefined\"==typeof SharedArrayBuffer)return M(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return M(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Gt(687865856,e,t,n,o);var u=0,c=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,u=r()[t+8>>2],c=0!==r()[t+12>>2]}else s=2097152;(t=0==u)?u=an(16,s):Z(0<(u-=s));for(var f=Ft(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={Vb:u,Xb:s,mc:t,detached:c,Xc:n,fc:f,Wb:o,dd:a},A?(n.gd=\"spawnThread\",postMessage(n,a),0):Oe(n)},T:function(e){throw A?ye.yc(e):(ye.vc(),ln(e)),\"unwind\"},U:function(e,t){return function(e,t){if(!e)return M(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Yt()==e)return M(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Bt()==e)return M(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return M(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return M(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):ge(e),0;zt(),A||Nt(),Te(e+0,n,A?100:1)}}(e,t)},L:De,r:Re,P:Ce,K:Pe,u:function(){return 42},C:Ie,M:Ze,Q:Fe,S:je,R:We,q:Ye,J:Ue,H:qe,v:Be,I:Ge,aa:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.Rb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:Ne,x:we,Ta:function(e,t){return e-t},W:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},O:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ca:function(e,t,i){var o;for(He.length=0,i>>=2;o=n()[t++];)(o=105>o)&&1&i&&i++,He.push(o?a()[i++>>1]:r()[i]),++i;return he[e].apply(null,He)},B:xe,n:function(){},k:Te,j:be,N:function(){return 2147483648},i:_e,z:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){ze.length=t,n>>=3;for(var r=0;r<t;r++)ze[r]=a()[n+r];return(0>e?he[-e-1]:It[e]).apply(null,ze)},A:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-j.byteLength+65535>>>16),$(R.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},_:function(e,t,n){return Qe(e)?Xe(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!I){try{e()}catch(e){if(e instanceof sn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&M(\"exception thrown: \"+[e,e.stack]),e}if(!oe())try{A?Vt(P):ln(P)}catch(e){if(!(e instanceof sn))throw e}}}((function(){K.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Je[n],failIfMajorPerformanceCaveat:!!r()[t+7],Mc:r()[t+8],rd:r()[t+9],sc:r()[t+10],Dc:r()[t+11],ud:r()[t+12],vd:r()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ft(8);r()[n+4>>2]=Yt();var i={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=i),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\"EXT_disjoint_timer_query\"),t.sd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),st.create(navigator.ml.createContext(t))},E:wt,F:vt,l:At,D:Ot,t:Tt,Ua:xt,p:Et,ua:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.rc||(e.rc=X(\"GMT\")),r()[n+40>>2]=e.rc,n},X:function(){ye.Ic()},s:function(e,t){St(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[Jt()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:R||u.wasmMemory,y:function(e){St();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=o.getTimezoneOffset(),c=Math.min(u,a);return 0>n?r()[e+32>>2]=Number(a!=u&&c==i):0<n!=(c==i)&&(a=Math.max(u,a),t.setTime(t.getTime()+6e4*((0<n?c:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){st.hc(e)},Pa:function(e){st.release(e)},La:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.add(t,n),mt.create(n)},Ka:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.averagePool2d(t,n),mt.create(n)},Ja:function(e,t,n,i,a){return e=lt.get(e),t=mt.get(t),n=mt.get(n),i=mt.get(i),a={scale:mt.get(r()[a>>2]),bias:mt.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:o()[a+12>>2],activation:bt.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),mt.create(a)},Ia:function(e,t){e=lt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ha:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),mt.create(n)},Ga:function(e,t,n,r){e=lt.get(e),t=it(t,n),n=[];for(var i=0;i<t.length;++i)n.push(mt.get(t[i]));return r=e.concat(n,r),mt.create(r)},Fa:function(e,t,n){return e=lt.get(e),n=ot(n,(t=ut(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),mt.create(n)},Ea:function(e,t,n,o){return e=lt.get(e),t=mt.get(t),n=mt.get(n),o={padding:\"explicit\"===Ke[r()[o+40>>2]]?it(i()[o>>2],r()[o+4>>2]):void 0,strides:it(i()[o+8>>2],r()[o+12>>2]),dilations:it(i()[o+16>>2],r()[o+20>>2]),autoPad:Ke[r()[o+40>>2]],groups:r()[o+48>>2],inputLayout:tt[r()[o+52>>2]],filterLayout:et[r()[o+56>>2]],bias:mt.get(r()[o+60>>2]),activation:bt.get(r()[o+64>>2])},o=e.conv2d(t,n,o),mt.create(o)},Da:function(e,n,i,a){return e=lt.get(e),n=mt.get(n),i=mt.get(i),a={c:mt.get(r()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),mt.create(a)},Ca:function(e,t,n){return e=lt.get(e),t=L(t),n=ut(n),n=e.input(t,n),mt.create(n)},Ba:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=at(n),n=e.leakyRelu(t,n),mt.create(n)},Aa:function(e,t){return e=lt.get(e),t=at(t),t=e.leakyRelu(t),bt.create(t)},za:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.matmul(t,n),mt.create(n)},ya:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.maxPool2d(t,n),mt.create(n)},ra:function(e){lt.release(e)},xa:function(e,t){return e=lt.get(e),t=mt.get(t),t=e.relu(t),mt.create(t)},wa:function(e){return e=lt.get(e).relu(),bt.create(e)},va:function(e,t,n){e=lt.get(e),t=mt.get(t);var a=nt[r()[n>>2]],u=i()[n+4>>2],c=r()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:a,scales:u,sizes:it(i()[n+12>>2],r()[n+16>>2]),axes:it(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),mt.create(n)},ta:function(e,t,n,r){return e=lt.get(e),t=mt.get(t),n=it(r,n),n=e.reshape(t,n),mt.create(n)},sa:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={permutation:it(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),mt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=dt.get(t),n=pt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){dt.release(e)},qa:function(e,t,n){e=dt.get(e),t=L(t),n=0===r()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:it(i()[n+16>>2],r()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=L(t),n=mt.get(n),e[t]=n},la:function(e){pt.release(e)},ma:function(e,t,n){e=pt.get(e),t=L(t),n=ot(n),e[t]=n},ka:function(e){mt.hc(e)},ja:function(e){mt.release(e)},ia:function(e){bt.hc(e)},ha:function(e){bt.release(e)},Sa:Pt,g:function(e,t,n,r){return Pt(e,t,n,r)},ga:function(e){return e=st.get(e),e=new MLGraphBuilder(e),lt.create(e)},fa:function(){return dt.create({})},ea:function(){return ht.create({})},da:function(){return pt.create({})}};!function(){function e(e,t){u.asm=e.exports,K=u.asm.pb,te.unshift(u.asm.Wa),ye.qc.push(u.asm.ub),C=t,A||(ce--,u.monitorRunDependencies&&u.monitorRunDependencies(ce),0==ce&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!S&&(y||w)){if(\"function\"==typeof fetch&&!ue.startsWith(\"file://\"))return fetch(ue,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ue+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(m)return new Promise((function(e,t){m(ue,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){M(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Zt};if(A||(ce++,u.monitorRunDependencies&&u.monitorRunDependencies(ce)),u.instantiateWasm)try{return u.instantiateWasm(r,e)}catch(e){return M(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ue.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ue,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return M(\"wasm streaming compile failed: \"+e),M(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Wa).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Xa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Ya).apply(null,arguments)},u._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(u._OrtSessionOptionsAppendExecutionProviderWebNN=u.asm.Za).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm._a).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.$a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.ab).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.bb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.cb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.db).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.eb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.fb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.gb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.hb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.ib).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.jb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.kb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.lb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.mb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.nb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.ob).apply(null,arguments)};var Ft=u._malloc=function(){return(Ft=u._malloc=u.asm.qb).apply(null,arguments)},jt=u.___errno_location=function(){return(jt=u.___errno_location=u.asm.rb).apply(null,arguments)},Wt=u._free=function(){return(Wt=u._free=u.asm.sb).apply(null,arguments)},Yt=u._pthread_self=function(){return(Yt=u._pthread_self=u.asm.tb).apply(null,arguments)};u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.ub).apply(null,arguments)},u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.vb).apply(null,arguments)};var Ut,qt=u._emscripten_register_main_browser_thread_id=function(){return(qt=u._emscripten_register_main_browser_thread_id=u.asm.wb).apply(null,arguments)},Bt=u._emscripten_main_browser_thread_id=function(){return(Bt=u._emscripten_main_browser_thread_id=u.asm.xb).apply(null,arguments)},Gt=u._emscripten_sync_run_in_main_thread_4=function(){return(Gt=u._emscripten_sync_run_in_main_thread_4=u.asm.yb).apply(null,arguments)},Nt=u._emscripten_main_thread_process_queued_calls=function(){return(Nt=u._emscripten_main_thread_process_queued_calls=u.asm.zb).apply(null,arguments)},Ht=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ht=u._emscripten_run_in_main_runtime_thread_js=u.asm.Ab).apply(null,arguments)},Lt=u.__emscripten_call_on_thread=function(){return(Lt=u.__emscripten_call_on_thread=u.asm.Bb).apply(null,arguments)},zt=u._pthread_testcancel=function(){return(zt=u._pthread_testcancel=u.asm.Cb).apply(null,arguments)},Vt=u._pthread_exit=function(){return(Vt=u._pthread_exit=u.asm.Db).apply(null,arguments)},Qt=u.__emscripten_thread_init=function(){return(Qt=u.__emscripten_thread_init=u.asm.Eb).apply(null,arguments)},Xt=u._emscripten_get_global_libc=function(){return(Xt=u._emscripten_get_global_libc=u.asm.Fb).apply(null,arguments)},$t=u.___pthread_tsd_run_dtors=function(){return($t=u.___pthread_tsd_run_dtors=u.asm.Gb).apply(null,arguments)},Jt=u.__get_tzname=function(){return(Jt=u.__get_tzname=u.asm.Hb).apply(null,arguments)},Kt=u.__get_daylight=function(){return(Kt=u.__get_daylight=u.asm.Ib).apply(null,arguments)},en=u.__get_timezone=function(){return(en=u.__get_timezone=u.asm.Jb).apply(null,arguments)},tn=u.stackSave=function(){return(tn=u.stackSave=u.asm.Kb).apply(null,arguments)},nn=u.stackRestore=function(){return(nn=u.stackRestore=u.asm.Lb).apply(null,arguments)},rn=u.stackAlloc=function(){return(rn=u.stackAlloc=u.asm.Mb).apply(null,arguments)},on=u._emscripten_stack_set_limits=function(){return(on=u._emscripten_stack_set_limits=u.asm.Nb).apply(null,arguments)},an=u._memalign=function(){return(an=u._memalign=u.asm.Ob).apply(null,arguments)},un=u.__emscripten_allow_main_runtime_queued_calls=999380,cn=u.__emscripten_main_thread_futex=1003380;function sn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function fn(){function e(){if(!Ut&&(Ut=!0,u.calledRun=!0,!I)&&(A||me(te),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!A)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e=u.postRun.shift();re.unshift(e)}me(re)}}if(!(0<ce))if(A)c(u),A||me(te),postMessage({cmd:\"loaded\"});else{if(!A){if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)ae();me(ee)}0<ce||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),e()}),1)):e())}}function ln(e){if(P=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new sn(e);oe()||(ye.xc(),A||(me(ne),\"undefined\"!=typeof _fflush&&_fflush(0),Se[1].length&&ke(1,10),Se[2].length&&ke(2,10))),P=e,oe()||(ye.xc(),u.onExit&&u.onExit(e),I=!0),p(e,new sn(e))}if(u.UTF8ToString=L,u.stringToUTF8=V,u.lengthBytesUTF8=Q,u.keepRuntimeAlive=oe,u.PThread=ye,u.stackSave=tn,u.stackRestore=nn,u.stackAlloc=rn,u.PThread=ye,u.wasmMemory=R,u.ExitStatus=sn,fe=function e(){Ut||fn(),Ut||(fe=e)},u.run=fn,u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return A&&(D=!1,ye.Jc()),fn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},l;for(l in d)d.hasOwnProperty(l)&&(g[l]=d[l]);var ca=\"./this.program\",da=\"object\"===typeof window,p=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,r=\"\",fa,u,w,x,y;\nif(ea)r=p?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",fa=function(a,b){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);return x.readFileSync(a,b?null:\"utf8\")},w=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||A(\"Assertion failed: undefined\");return a},u=function(a,b,c){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);x.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",A),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||p)p?r=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.lastIndexOf(\"/\")+1):r=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},p&&(w=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\nb.send(null);return new Uint8Array(b.response)}),u=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ha=d.print||console.log.bind(console),B=d.printErr||console.warn.bind(console);for(l in g)g.hasOwnProperty(l)&&(d[l]=g[l]);g=null;d.thisProgram&&(ca=d.thisProgram);var C;d.wasmBinary&&(C=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&A(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction la(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var m=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|m:(h&7)<<18|k<<12|m<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function D(a,b){return a?la(E,a,b):\"\"}\nfunction ma(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var m=a.charCodeAt(k);if(55296<=m&&57343>=m){var t=a.charCodeAt(++k);m=65536+((m&1023)<<10)|t&1023}if(127>=m){if(c>=e)break;b[c++]=m}else{if(2047>=m){if(c+1>=e)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=e)break;b[c++]=224|m>>12}else{if(c+3>=e)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-h}\nfunction na(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function oa(a){var b=na(a)+1,c=pa(b);c&&ma(a,F,c,b);return c}var qa,F,E,G,H,J;\nfunction ra(){var a=ia.buffer;qa=a;d.HEAP8=F=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=E=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=J=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var sa,ta=[],ua=[],va=[],wa=[];function xa(){var a=d.preRun.shift();ta.unshift(a)}var K=0,ya=null,L=null;d.preloadedImages={};d.preloadedAudios={};\nfunction A(a){if(d.onAbort)d.onAbort(a);B(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function za(){return M.startsWith(\"data:application/octet-stream;base64,\")}var M;M=\"ort-wasm.wasm\";if(!za()){var Aa=M;M=d.locateFile?d.locateFile(Aa,r):r+Aa}function Ba(){var a=M;try{if(a==M&&C)return new Uint8Array(C);if(w)return w(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){A(b)}}\nfunction Ca(){if(!C&&(da||p)){if(\"function\"===typeof fetch&&!M.startsWith(\"file://\"))return fetch(M,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+M+\"'\";return a.arrayBuffer()}).catch(function(){return Ba()});if(u)return new Promise(function(a,b){u(M,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ba()})}\nfunction Da(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.ub;\"number\"===typeof c?void 0===b.kb?sa.get(c)():sa.get(c)(b.kb):c(void 0===b.kb?null:b.kb)}}}function Ea(a){this.mb=a-16;this.Eb=function(b){G[this.mb+4>>2]=b};this.Bb=function(b){G[this.mb+8>>2]=b};this.Cb=function(){G[this.mb>>2]=0};this.Ab=function(){F[this.mb+12>>0]=0};this.Db=function(){F[this.mb+13>>0]=0};this.wb=function(b,c){this.Eb(b);this.Bb(c);this.Cb();this.Ab();this.Db()}}\nvar Fa=0,Ga={},Ha=[null,[],[]],N={},O;O=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ia=[\"explicit\",\"same-upper\",\"same-lower\"],Ja=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ka=[\"nchw\",\"nhwc\"],La=[\"nearest-neighbor\",\"linear\"],Ma=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function P(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(G[b>>2]);return c}}\nfunction Na(a,b=\"float32\"){const c=G[a>>2]+H[a+8>>2];a=H[a+4>>2];\"float32\"===b||A(\"Assertion failed: undefined\");return new Float32Array(E.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Oa(a){return{type:Ma[H[a>>2]],dimensions:P(H[a+8>>2],G[a+4>>2])}}function Pa(a){return{windowDimensions:P(H[a>>2],G[a+4>>2]),padding:\"explicit\"===Ia[G[a+32>>2]]?P(H[a+8>>2],G[a+12>>2]):void 0,strides:P(H[a+16>>2],G[a+20>>2]),dilations:P(H[a+24>>2],G[a+28>>2]),autoPad:Ia[G[a+32>>2]],layout:Ka[G[a+36>>2]]}}\nvar Q,S,T,U,V,W,X,Y,Qa={};function Ra(){if(!Sa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Qa)void 0===Qa[b]?delete a[b]:a[b]=Qa[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Sa=c}return Sa}var Sa;\nfunction Ta(a,b){a=new Date(1E3*G[a>>2]);G[b>>2]=a.getUTCSeconds();G[b+4>>2]=a.getUTCMinutes();G[b+8>>2]=a.getUTCHours();G[b+12>>2]=a.getUTCDate();G[b+16>>2]=a.getUTCMonth();G[b+20>>2]=a.getUTCFullYear()-1900;G[b+24>>2]=a.getUTCDay();G[b+36>>2]=0;G[b+32>>2]=0;G[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Ta.tb||(Ta.tb=oa(\"GMT\"));G[b+40>>2]=Ta.tb;return b}\nfunction Ua(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}if(!Va){Va=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);G[Wa()>>2]=60*k;G[$a()>>2]=Number(b!=h);c=a(c);e=a(e);c=oa(c);e=oa(e);h<b?(G[Z()>>2]=c,G[Z()+4>>2]=e):(G[Z()>>2]=e,G[Z()+4>>2]=c)}}var Va;function ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function bb(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar cb=[31,29,31,30,31,30,31,31,30,31,30,31],db=[31,28,31,30,31,30,31,31,30,31,30,31];function eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=(ab(a.getFullYear())?cb:db)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction fb(a,b,c,e){function h(f,n,q){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<n;)f=q[0]+f;return f}function k(f,n){return h(f,n,\"0\")}function m(f,n){function q(Xa){return 0>Xa?-1:0<Xa?1:0}var I;0===(I=q(f.getFullYear()-n.getFullYear()))&&0===(I=q(f.getMonth()-n.getMonth()))&&(I=q(f.getDate()-n.getDate()));return I}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function R(f){f=eb(new Date(f.ib+1900,0,1),f.rb);var n=new Date(f.getFullYear()+1,0,4),q=t(new Date(f.getFullYear(),0,4));n=t(n);return 0>=m(q,f)?0>=m(n,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var z=G[e+40>>2];e={Hb:G[e>>2],Gb:G[e+4>>2],pb:G[e+8>>2],nb:G[e+12>>2],jb:G[e+16>>2],ib:G[e+20>>2],qb:G[e+24>>2],rb:G[e+28>>2],Pb:G[e+32>>2],Fb:G[e+\n36>>2],Ib:z?D(z):\"\"};c=D(c);z={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in z)c=c.replace(new RegExp(v,\"g\"),z[v]);var Ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nZa=\"January February March April May June July August September October November December\".split(\" \");z={\"%a\":function(f){return Ya[f.qb].substring(0,3)},\"%A\":function(f){return Ya[f.qb]},\"%b\":function(f){return Za[f.jb].substring(0,3)},\"%B\":function(f){return Za[f.jb]},\"%C\":function(f){return k((f.ib+1900)/100|0,2)},\"%d\":function(f){return k(f.nb,2)},\"%e\":function(f){return h(f.nb,2,\" \")},\"%g\":function(f){return R(f).toString().substring(2)},\"%G\":function(f){return R(f)},\"%H\":function(f){return k(f.pb,\n2)},\"%I\":function(f){f=f.pb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.nb+bb(ab(f.ib+1900)?cb:db,f.jb-1),3)},\"%m\":function(f){return k(f.jb+1,2)},\"%M\":function(f){return k(f.Gb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.pb&&12>f.pb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Hb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.qb||7},\"%U\":function(f){var n=new Date(f.ib+1900,0,1),q=0===n.getDay()?n:eb(n,7-n.getDay());f=new Date(f.ib+1900,f.jb,f.nb);return 0>\nm(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%V\":function(f){var n=new Date(f.ib+1901,0,4),q=t(new Date(f.ib+1900,0,4));n=t(n);var I=eb(new Date(f.ib+1900,0,1),f.rb);return 0>m(I,q)?\"53\":0>=m(n,I)?\"01\":k(Math.ceil((q.getFullYear()<f.ib+1900?f.rb+32-q.getDate():f.rb+1-q.getDate())/7),2)},\"%w\":function(f){return f.qb},\"%W\":function(f){var n=new Date(f.ib,0,1),q=1===n.getDay()?n:eb(n,0===n.getDay()?1:7-n.getDay()+1);f=\nnew Date(f.ib+1900,f.jb,f.nb);return 0>m(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%y\":function(f){return(f.ib+1900).toString().substring(2)},\"%Y\":function(f){return f.ib+1900},\"%z\":function(f){f=f.Fb;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Ib},\"%%\":function(){return\"%\"}};for(v in z)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),z[v](e)));v=gb(c);\nif(v.length>b)return 0;F.set(v,a);return v.length-1}(function(){function a(){return{lb:{},zb:1,create:function(b,c){c=c||{};var e=this.zb++;c.sb=1;c.object=b;this.lb[e]=c;return e},get:function(b){if(0!==b)return this.lb[b].object},ob:function(b){this.lb[b].sb++},release:function(b){var c=this.lb[b];c.sb--;0>=c.sb&&delete this.lb[b]}}}Q||(Q=Q||a(),S=S||a(),T=T||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function gb(a){var b=Array(na(a)+1);ma(a,b,0,b.length);return b}\nvar kb={a:function(a){return pa(a+16)+16},c:function(a,b){va.unshift({ub:a,kb:b})},f:function(a,b){va.unshift({ub:a,kb:b})},b:function(a,b,c){(new Ea(a)).wb(b,c);Fa++;throw a;},L:function(a,b){a=D(a);return N.Jb(a,b)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(a,b){a=D(a);return N.Kb(a,b)},S:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var m=hb(65536,a);\nm?(E.fill(0,m,m+a),a=m):a=0;a?(Ga[a]={yb:a,xb:b,vb:!0,fd:h,Ob:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},R:function(a,b){var c=Ga[a];0!==b&&c?(b===c.xb&&(Ga[a]=null,c.vb&&ib(c.yb)),a=0):a=-28;return a},m:function(){},I:function(a,b,c){a=D(a);return N.Lb(a,b,c)},G:function(){},s:function(){},H:function(){},k:function(){A()},v:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=O();else return G[jb()>>2]=28,-1;G[b>>2]=a/1E3|0;G[b+4>>2]=a%1E3*1E6|0;return 0},J:function(a,b){return a-\nb},Ba:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ca:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Aa:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nN:function(){return 2147483648},A:function(a,b,c){E.copyWithin(a,b,b+c)},l:function(a){var b=E.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ia.grow(Math.min(2147483648,e)-qa.byteLength+65535>>>16);ra();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},F:function(a){for(var b=O();O()-b<a;);},ya:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[H[a>>2]],powerPreference:e[H[a+4>>2]]});return Q.create(navigator.ml.createContext(b))},D:function(a,b){var c=0;Ra().forEach(function(e,h){var k=b+c;h=G[a+4*h>>2]=k;for(k=0;k<e.length;++k)F[h++>>0]=e.charCodeAt(k);F[h>>0]=0;c+=e.length+1});return 0},E:function(a,b){var c=Ra();G[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});G[b>>2]=e;return 0},i:function(){return 0},C:function(a,b){a=1==a||2==a?2:\nA();F[b>>0]=a;return 0},p:function(a,b,c,e){a=N.Nb(a);b=N.Mb(a,b,c);G[e>>2]=b;return 0},z:function(){},q:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var m=G[b+8*k>>2],t=G[b+(8*k+4)>>2],R=0;R<t;R++){var z=E[m+R],v=Ha[a];0===z||10===z?((1===a?ha:B)(la(v,0)),v.length=0):v.push(z)}h+=t}G[e>>2]=h;return 0},da:function(a){var b=Date.now();G[a>>2]=b/1E3|0;G[a+4>>2]=b%1E3*1E3|0;return 0},P:Ta,t:function(a,b){Ua();a=new Date(1E3*G[a>>2]);G[b>>2]=a.getSeconds();G[b+4>>2]=a.getMinutes();G[b+8>>2]=a.getHours();\nG[b+12>>2]=a.getDate();G[b+16>>2]=a.getMonth();G[b+20>>2]=a.getFullYear()-1900;G[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;G[b+32>>2]=a;a=G[Z()+(a?4:0)>>2];G[b+40>>2]=a;return b},n:function(a){Ua();var b=new Date(G[a+20>>2]+1900,G[a+16>>2],G[a+12>>2],G[a+8>>2],G[a+4>>2],G[a>>\n2],0),c=G[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),m=h.getTimezoneOffset(),t=Math.min(m,k);0>c?G[a+32>>2]=Number(k!=m&&t==e):0<c!=(t==e)&&(k=Math.max(m,k),b.setTime(b.getTime()+6E4*((0<c?t:k)-e)));G[a+24>>2]=b.getDay();G[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;G[a>>2]=b.getSeconds();G[a+4>>2]=b.getMinutes();G[a+8>>2]=b.getHours();G[a+12>>2]=b.getDate();G[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},y:function(a){Q.ob(a)},\nx:function(a){Q.release(a)},va:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.add(b,c);return X.create(c)},ua:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.averagePool2d(b,c);return X.create(c)},ta:function(a,b,c,e,h){a=T.get(a);b=X.get(b);c=X.get(c);e=X.get(e);h={scale:X.get(G[h>>2]),bias:X.get(G[h+4>>2]),axis:G[h+8>>2],epsilon:J[h+12>>2],activation:Y.get(G[h+16>>2])};h=a.batchNormalization(b,c,e,h);return X.create(h)},sa:function(a,b){a=T.get(a);b=W.get(b);try{var c=a.build(b);return S.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},ra:function(a,b,c){a=T.get(a);b=X.get(b);c=a.clamp(b,{minValue:J[c>>2],maxValue:J[c+4>>2]});return X.create(c)},qa:function(a,b,c,e){a=T.get(a);b=P(b,c);c=[];for(var h=0;h<b.length;++h)c.push(X.get(b[h]));e=a.concat(c,e);return X.create(e)},pa:function(a,b,c){a=T.get(a);b=Oa(b);c=Na(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return X.create(c)},oa:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={padding:\"explicit\"===Ia[G[e+40>>2]]?P(H[e>>2],G[e+4>>2]):void 0,strides:P(H[e+\n8>>2],G[e+12>>2]),dilations:P(H[e+16>>2],G[e+20>>2]),autoPad:Ia[G[e+40>>2]],groups:G[e+48>>2],inputLayout:Ka[G[e+52>>2]],filterLayout:Ja[G[e+56>>2]],bias:X.get(G[e+60>>2]),activation:Y.get(G[e+64>>2])};e=a.conv2d(b,c,e);return X.create(e)},na:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={c:X.get(G[e>>2]),alpha:J[e+4>>2],beta:J[e+8>>2],aTranspose:0!==F[e+12>>0],bTranspose:0!==F[e+13>>0]};e=a.gemm(b,c,e);return X.create(e)},ma:function(a,b,c){a=T.get(a);b=D(b);c=Oa(c);c=a.input(b,c);return X.create(c)},\nla:function(a,b,c){a=T.get(a);b=X.get(b);c=a.leakyRelu(b,{alpha:J[c>>2]});return X.create(c)},ka:function(a,b){a=T.get(a).leakyRelu({alpha:J[b>>2]});return Y.create(a)},ja:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.matmul(b,c);return X.create(c)},ia:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.maxPool2d(b,c);return X.create(c)},u:function(a){T.release(a)},ha:function(a,b){a=T.get(a);b=X.get(b);b=a.relu(b);return X.create(b)},ga:function(a){a=T.get(a).relu();return Y.create(a)},fa:function(a,\nb,c){a=T.get(a);b=X.get(b);var e=La[G[c>>2]];var h=H[c+4>>2];var k=G[c+8>>2];if(0!==h&&0!==k){for(var m=[],t=0;t<h;++t,k+=4)m.push(J[k>>2]);h=m}else h=void 0;c={mode:e,scales:h,sizes:P(H[c+12>>2],G[c+16>>2]),axes:P(H[c+20>>2],G[c+24>>2])};c=a.resample2d(b,c);return X.create(c)},ea:function(a,b,c,e){a=T.get(a);b=X.get(b);c=P(e,c);c=a.reshape(b,c);return X.create(c)},ca:function(a,b,c){a=T.get(a);b=X.get(b);c={permutation:P(H[c>>2],G[c+4>>2])};c=a.transpose(b,c);return X.create(c)},xa:function(a,b,\nc){a=S.get(a);b=U.get(b);c=V.get(c);return a.compute(b,c)},wa:function(a){S.ob(a)},w:function(a){S.release(a)},aa:function(a){U.release(a)},ba:function(a,b,c){a=U.get(a);b=D(b);c=0===G[c+12>>2]?Na(c+0):{resource:Na(c+0),dimensions:P(H[c+16>>2],G[c+12>>2])};a[b]=c},_:function(a){W.release(a)},$:function(a,b,c){a=W.get(a);b=D(b);c=X.get(c);a[b]=c},Y:function(a){V.release(a)},Z:function(a,b,c){a=V.get(a);b=D(b);c=Na(c);a[b]=c},e:function(a){X.ob(a)},d:function(a){X.release(a)},X:function(a){Y.ob(a)},\nh:function(a){Y.release(a)},za:fb,g:function(a,b,c,e){return fb(a,b,c,e)},W:function(a){a=Q.get(a);a=new MLGraphBuilder(a);return T.create(a)},V:function(){return U.create({})},U:function(){return W.create({})},T:function(){return V.create({})}};\n(function(){function a(h){d.asm=h.exports;ia=d.asm.Da;ra();sa=d.asm.hb;ua.unshift(d.asm.Ea);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==ya&&(clearInterval(ya),ya=null),L&&(h=L,L=null,h()))}function b(h){a(h.instance)}function c(h){return Ca().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){B(\"failed to asynchronously prepare wasm: \"+k);A(k)})}var e={a:kb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return B(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return C||\"function\"!==typeof WebAssembly.instantiateStreaming||za()||M.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(M,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){B(\"wasm streaming compile failed: \"+k);B(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ea).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Fa).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ga).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Ha).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Ia).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Ja).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ka).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.La).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ma).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Na).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Oa).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Pa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Qa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ra).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Sa).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Ta).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Ua).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Va).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Wa).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.Xa).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Ya).apply(null,arguments)};\nvar pa=d._malloc=function(){return(pa=d._malloc=d.asm.Za).apply(null,arguments)},jb=d.___errno_location=function(){return(jb=d.___errno_location=d.asm._a).apply(null,arguments)},ib=d._free=function(){return(ib=d._free=d.asm.$a).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm.ab).apply(null,arguments)},$a=d.__get_daylight=function(){return($a=d.__get_daylight=d.asm.bb).apply(null,arguments)},Wa=d.__get_timezone=function(){return(Wa=d.__get_timezone=d.asm.cb).apply(null,\narguments)},lb=d.stackSave=function(){return(lb=d.stackSave=d.asm.db).apply(null,arguments)},mb=d.stackRestore=function(){return(mb=d.stackRestore=d.asm.eb).apply(null,arguments)},nb=d.stackAlloc=function(){return(nb=d.stackAlloc=d.asm.fb).apply(null,arguments)},hb=d._memalign=function(){return(hb=d._memalign=d.asm.gb).apply(null,arguments)};d.UTF8ToString=D;d.stringToUTF8=function(a,b,c){return ma(a,E,b,c)};d.lengthBytesUTF8=na;d.stackSave=lb;d.stackRestore=mb;d.stackAlloc=nb;var ob;\nL=function pb(){ob||qb();ob||(L=pb)};\nfunction qb(){function a(){if(!ob&&(ob=!0,d.calledRun=!0,!ja)){Da(ua);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();wa.unshift(b)}Da(wa)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)xa();Da(ta);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=qb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();qb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){function t(){return D.buffer!=W&&$(D.buffer),L}function r(){return D.buffer!=W&&$(D.buffer),z}function i(){return D.buffer!=W&&$(D.buffer),Y}function a(){return D.buffer!=W&&$(D.buffer),H}function o(){return D.buffer!=W&&$(D.buffer),B}function u(){return D.buffer!=W&&$(D.buffer),N}var s,c,l;e=e||{},s||(s=void 0!==e?e:{}),s.ready=new Promise((function(e,t){c=e,l=t}));var f,d={};for(f in s)s.hasOwnProperty(f)&&(d[f]=s[f]);var p=\\\"./this.program\\\";function b(e,t){throw t}var h,g,m,v,y,_=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=s.ENVIRONMENT_IS_PTHREAD||!1,S=\\\"\\\";function E(e){return s.locateFile?s.locateFile(e,S):S+e}if(O){if(S=w?n(622).dirname(S)+\\\"/\\\":__dirname+\\\"/\\\",h=function(e,t){return v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof ln))throw e})),process.on(\\\"unhandledRejection\\\",de),b=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},s.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===global.Worker){var T;try{T=n(13)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=T.Worker}}else(_||w)&&(w?S=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\\\"blob:\\\")?S.substr(0,S.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(h=function(e,t){return v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(747)),y||(y=n(622)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},w&&(m=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),g=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(global.performance=n(630).performance);var x,M,k=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);for(f in d)d.hasOwnProperty(f)&&(s[f]=d[f]);d=null,s.thisProgram&&(p=s.thisProgram),s.quit&&(b=s.quit),s.wasmBinary&&(M=s.wasmBinary);var P=s.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var D,C,j,F=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,L,z,Y,H,B,N,G=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function Z(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?Z(r(),e,t):\\\"\\\"}function q(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function X(e,t,n){return q(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function J(e){var n=Q(e)+1,r=Ut(n);return r&&q(e,t(),r,n),r}function $(e){W=e,s.HEAP8=L=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=Y=new Int32Array(e),s.HEAPU8=z=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=H=new Uint32Array(e),s.HEAPF32=B=new Float32Array(e),s.HEAPF64=N=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),A&&(W=s.buffer);var K=s.INITIAL_MEMORY||16777216;if(A)D=s.wasmMemory,W=s.buffer;else if(s.wasmMemory)D=s.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");D&&(W=D.buffer),K=W.byteLength,$(W);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return P||0<ae}function ue(){var e=s.preRun.shift();te.unshift(e)}var se,ce=0,le=null,fe=null;function de(e){throw s.onAbort&&s.onAbort(e),I(!A),R(e),F=!0,j=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function pe(){return se.startsWith(\\\"data:application/octet-stream;base64,\\\")}function be(){var e=se;try{if(e==se&&M)return new Uint8Array(M);if(m)return m(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}s.preloadedImages={},s.preloadedAudios={},se=\\\"ort-wasm-threaded.wasm\\\",pe()||(se=E(se));var he={999828:function(){throw\\\"Canceled!\\\"}};function ge(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(s);else{var n=t.Ec;\\\"number\\\"==typeof n?void 0===t.Wb?ee.get(n)():ee.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function me(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),cn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),cn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ve(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=_e.Rb[e];t&&(i()[e+12>>2]=0,_e.ic(t.worker))}s._emscripten_futex_wake=me;var ye,_e={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ut(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Ut(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),Qt(e,!w,1),Ht(e)},Jc:function(){_e.receiveObjectTransfer=_e.Pc,_e.threadInit=_e.Zc,_e.threadCancel=_e.Yc,_e.threadExit=_e.yc,_e.setExitStatus=_e.Rc},Rb:{},pc:[],vc:function(){for(;0<_e.pc.length;)_e.pc.pop()();$t()},wc:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),_e.vc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),me(e+0,2147483647),Qt(0,0,0)},Rc:function(e){j=e},yc:function(e){var t=zt();t&&(_e.wc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},Yc:function(){_e.wc(zt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},xc:function(){for(var e in _e.Rb){var t=_e.Rb[e];t&&t.worker&&_e.ic(t.worker)}for(_e.Rb={},e=0;e<_e.Ub.length;++e){var n=_e.Ub[e];n.terminate()}for(_e.Ub=[],e=0;e<_e.Tb.length;++e)t=(n=_e.Tb[e]).Qb,_e.nc(t),n.terminate();_e.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=i()[e.Sb+100>>2];i()[e.Sb+100>>2]=0,Lt(t),Lt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Lt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){_e.Qc((function(){delete _e.Rb[e.Qb.Sb],_e.Ub.push(e),_e.Tb.splice(_e.Tb.indexOf(e),1),_e.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){i()[sn>>2]=0;try{e()}finally{i()[sn>>2]=1}},Pc:function(){},Zc:function(){for(var e in _e.qc)_e.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.Qb&&(_e.Cc=e.Qb.Sb),r.targetThread&&r.targetThread!=zt()){var u=_e.Rb[r.wd];u?u.worker.postMessage(n.data,r.transferList):R('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)Gt();else if(\\\"spawnThread\\\"===o)Se(n.data);else if(\\\"cleanupThread\\\"===o)ve(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=_e.Rb[n],delete _e.Rb[n],r.worker.terminate(),_e.nc(r),_e.Tb.splice(_e.Tb.indexOf(r.worker),1),r.worker.Qb=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";_e.Rb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)R(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.Qb&&Atomics.load(a(),e.Qb.Sb+64>>2)&&_e.ic(e);else if(\\\"exitProcess\\\"===o)try{dn(r.returnCode)}catch(e){if(e instanceof ln)return;throw e}else\\\"cancelDone\\\"===o?_e.ic(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):R(\\\"worker sent an unknown command \\\"+o));_e.Cc=void 0},e.onerror=function(e){R(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:C})},zc:function(){var e=E(\\\"ort-wasm-threaded.worker.js\\\");_e.Ub.push(new Worker(e))},Fc:function(){return 0==_e.Ub.length&&(_e.zc(),_e.Lc(_e.Ub[0])),_e.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Wt()>>2]=28,-1;e=ye()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return Ve(1,1,e,t);re.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){i()[this.$b+4>>2]=e},this.Tc=function(e){i()[this.$b+8>>2]=e},this.Uc=function(){i()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Se(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=_e.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\\\"Internal error!\\\";if(!e.fc)throw\\\"Internal error, no pthread ptr!\\\";_e.Tb.push(t);for(var n=Ut(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.Vb+e.Xb,u=(r=_e.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.Sb),Atomics.store(a(),u+20,e.Xb),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.Xb),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=Jt()+40,Atomics.store(a(),u+43,n),t.Qb=r;var s={cmd:\\\"run\\\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){s.time=performance.now(),t.postMessage(s,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Ee(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(_){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),cn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),cn>>2,0),-73;if(0==(a=Atomics.exchange(i(),cn>>2,0)))break;if(Gt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),cn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Te(){O||w||(x||(x={}),x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(x[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,R(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}s.establishStackSpace=function(e,t){on(e,t),rn(e)},s.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ye=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-s.__performance_now_clock_drift}:function(){return performance.now()};var xe={},Me=[null,[],[]];function ke(e,t){var n=Me[e];0===t||10===t?((1===e?k:R)(Z(n,0)),n.length=0):n.push(t)}var Re={};function Pe(e,t){return A?Ve(2,1,e,t):(e=V(e),Re.kd(e,t))}function De(e,t,n){return A?Ve(3,1,e,t,n):0}function Ce(e,t){if(A)return Ve(4,1,e,t)}function je(e,t,n){if(A)return Ve(5,1,e,t,n)}function Fe(e,t,n){return A?Ve(6,1,e,t,n):0}function Ie(e,t){if(A)return Ve(7,1,e,t)}function Ue(e,t){return A?Ve(8,1,e,t):(e=V(e),Re.ld(e,t))}function We(e,t,n,i,a,o){if(A)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=un(65536,u))?r().fill(0,e,e+u):e=0,e?(xe[e]={Nc:e,Kc:t,Ac:!0,fd:a,td:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Le(e,t){if(A)e=Ve(10,1,e,t);else{var n=xe[e];0!==t&&n?(t===n.Kc&&(xe[e]=null,n.Ac&&Lt(n.Nc)),e=0):e=-28}return e}function ze(e,t,n){if(A)return Ve(11,1,e,t,n)}function Ye(e,t,n){return A?Ve(12,1,e,t,n):(e=V(e),Re.md(e,t,n))}function He(e){if(A)return Ve(13,1,e)}function Be(e,t){if(A)return Ve(14,1,e,t)}function Ne(e){if(A)return Ve(15,1,e)}function Ge(){if(A)return Ve(16,1);de()}var Ze=[];function Ve(e,t){for(var n=arguments.length-2,r=nn(),i=an(8*n),a=i>>3,o=0;o<n;o++){var s=arguments[2+o];u()[a+o]=s}return n=Zt(e,n,i,t),rn(r),n}var qe=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Qe(e){return e=2<e?V(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Je(e,t,n){var r=Qe(e);if(!r)return-4;if(r.ec&&(i()[r.ec>>2]=t,i()[r.ec+4>>2]=n),!r.uc&&r.hd){if(r.ec){r=i()[r.ec+8>>2],e=e?V(e):\\\"\\\";var a=nn(),o=an(12),u=0;if(e){u=Q(e)+1;var s=Ut(u);X(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Vt(0,r,657457152,0,u,o),rn(a),1}return-4}return r.uc&&(r=r.uc),e=!1,r.dc&&r.dc.cc&&(e=0===(e=r.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Ve(17,1,e,t,n):Je(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=[\\\"nearest-neighbor\\\",\\\"linear\\\"],it=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function at(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ot(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function ut(e){return{alpha:o()[e>>2]}}function st(e){return{type:it[a()[e>>2]],dimensions:at(a()[e+8>>2],i()[e+4>>2])}}function ct(e){return{windowDimensions:at(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?at(a()[e+8>>2],i()[e+12>>2]):void 0,strides:at(a()[e+16>>2],i()[e+20>>2]),dilations:at(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var lt,ft,dt,pt,bt,ht,gt,mt,vt,yt={};function _t(){if(!vt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in yt)void 0===yt[e]?delete t[e]:t[e]=yt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);vt=n}return vt}function wt(e,n){if(A)return Ve(18,1,e,n);var r=0;return _t().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Ot(e,t){if(A)return Ve(19,1,e,t);var n=_t();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function At(e){return A?Ve(20,1,e):0}function St(e,n){return A?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Et(e,t,n,r){return A?Ve(22,1,e,t,n,r):(e=Re.od(e),t=Re.nd(e,t,n),i()[r>>2]=t,0)}function Tt(e,t,n,r,i){if(A)return Ve(23,1,e,t,n,r,i)}function xt(e,t,n,a){if(A)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],l=0;l<c;l++)ke(e,r()[s+l]);o+=c}return i()[a>>2]=o,0}function Mt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return Ve(25,1);if(!Mt.Bc){Mt.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[tn()>>2]=60*o,i()[en()>>2]=Number(t!=a),n=e(n),r=e(r),n=J(n),r=J(r),a<t?(i()[Kt()>>2]=n,i()[Kt()+4>>2]=r):(i()[Kt()>>2]=r,i()[Kt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Rt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Pt=[31,29,31,30,31,30,31,31,30,31,30,31],Dt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Pt:Dt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function jt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var f=i()[a+40>>2];for(var d in a={bd:i()[a>>2],ad:i()[a+4>>2],jc:i()[a+8>>2],bc:i()[a+12>>2],Yb:i()[a+16>>2],Pb:i()[a+20>>2],kc:i()[a+24>>2],lc:i()[a+28>>2],xd:i()[a+32>>2],$c:i()[a+36>>2],cd:f?V(f):\\\"\\\"},r=V(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),f[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),b=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in f={\\\"%a\\\":function(e){return p[e.kc].substring(0,3)},\\\"%A\\\":function(e){return p[e.kc]},\\\"%b\\\":function(e){return b[e.Yb].substring(0,3)},\\\"%B\\\":function(e){return b[e.Yb]},\\\"%C\\\":function(e){return u((e.Pb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.bc,2)},\\\"%e\\\":function(e){return o(e.bc,2,\\\" \\\")},\\\"%g\\\":function(e){return l(e).toString().substring(2)},\\\"%G\\\":function(e){return l(e)},\\\"%H\\\":function(e){return u(e.jc,2)},\\\"%I\\\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.bc+Rt(kt(e.Pb+1900)?Pt:Dt,e.Yb-1),3)},\\\"%m\\\":function(e){return u(e.Yb+1,2)},\\\"%M\\\":function(e){return u(e.ad,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.jc&&12>e.jc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.bd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.kc||7},\\\"%U\\\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Pb+1901,0,4),n=c(new Date(e.Pb+1900,0,4));t=c(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.kc},\\\"%W\\\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Pb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Pb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.cd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),f[d](a)));return(d=function(e){var t=Array(Q(e)+1);return q(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}lt||(lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},gt=gt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var Ft=[null,Oe,Pe,De,Ce,je,Fe,Ie,Ue,We,Le,ze,Ye,He,Be,Ne,Ge,$e,wt,Ot,At,St,Et,Tt,xt,Mt],It={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},G:function(e,t){return we(e,t)},b:function(e){return Ut(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){_e.pc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return R(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return R(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(A&&0===o.length)return Nt(687865856,e,t,n,r);var u=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,u=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==u)?u=un(16,c):I(0<(u-=c));for(var l=Ut(228),f=0;57>f;++f)a()[(l>>2)+f]=0;return i()[e>>2]=l,i()[l+12>>2]=l,e=l+152,i()[e>>2]=e,n={Vb:u,Xb:c,mc:t,detached:s,Xc:n,fc:l,Wb:r,dd:o},A?(n.gd=\\\"spawnThread\\\",postMessage(n,o),0):Se(n)},T:function(e){throw A?_e.yc(e):(_e.vc(),dn(e)),\\\"unwind\\\"},U:function(e,t){return function(e,t){if(!e)return R(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&zt()==e)return R(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Bt()==e)return R(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return R(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return R(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Te();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ve(e),0;qt(),A||Gt(),Ee(e+0,n,A?100:1)}}(e,t)},L:Pe,r:De,P:Ce,K:je,u:function(){return 42},C:Fe,M:Ie,Q:Ue,S:We,R:Le,q:ze,J:Ye,H:He,v:Be,I:Ne,aa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=_e.Rb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ge,x:we,Ta:function(e,t){return e-t},W:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},O:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ca:function(e,t,n){var a;for(Ze.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Ze.push(a?u()[n++>>1]:i()[n]),++n;return he[e].apply(null,Ze)},B:Te,n:function(){},k:Ee,j:me,N:function(){return 2147483648},i:ye,z:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(87).cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){qe.length=t,n>>=3;for(var r=0;r<t;r++)qe[r]=u()[n+r];return(0>e?he[-e-1]:Ft[e]).apply(null,qe)},A:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{D.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),$(D.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},_:function(e,t,n){return Qe(e)?Je(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!F){try{e()}catch(e){if(e instanceof ln)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&R(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{A?Xt(j):dn(j)}catch(e){if(!(e instanceof ln))throw e}}}((function(){ee.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Mc:i()[t+8],rd:i()[t+9],sc:i()[t+10],Dc:i()[t+11],ud:i()[t+12],vd:i()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Ut(8);i()[n+4>>2]=zt();var r={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=r),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.sd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),lt.create(navigator.ml.createContext(t))},E:wt,F:Ot,l:At,D:St,t:Et,Ua:Tt,p:xt,ua:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.rc||(e.rc=J(\\\"GMT\\\")),i()[n+40>>2]=e.rc,n},X:function(){_e.Ic()},s:function(e,t){Mt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[Kt()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:D||s.wasmMemory,y:function(e){Mt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){lt.hc(e)},Pa:function(e){lt.release(e)},La:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.add(t,n),gt.create(n)},Ka:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.averagePool2d(t,n),gt.create(n)},Ja:function(e,t,n,r,a){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r=gt.get(r),a={scale:gt.get(i()[a>>2]),bias:gt.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:mt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),gt.create(a)},Ia:function(e,t){e=dt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ha:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),gt.create(n)},Ga:function(e,t,n,r){e=dt.get(e),t=at(t,n),n=[];for(var i=0;i<t.length;++i)n.push(gt.get(t[i]));return r=e.concat(n,r),gt.create(r)},Fa:function(e,t,n){return e=dt.get(e),n=ot(n,(t=st(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),gt.create(n)},Ea:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?at(a()[r>>2],i()[r+4>>2]):void 0,strides:at(a()[r+8>>2],i()[r+12>>2]),dilations:at(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:gt.get(i()[r+60>>2]),activation:mt.get(i()[r+64>>2])},r=e.conv2d(t,n,r),gt.create(r)},Da:function(e,n,r,a){return e=dt.get(e),n=gt.get(n),r=gt.get(r),a={c:gt.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),gt.create(a)},Ca:function(e,t,n){return e=dt.get(e),t=V(t),n=st(n),n=e.input(t,n),gt.create(n)},Ba:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ut(n),n=e.leakyRelu(t,n),gt.create(n)},Aa:function(e,t){return e=dt.get(e),t=ut(t),t=e.leakyRelu(t),mt.create(t)},za:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.matmul(t,n),gt.create(n)},ya:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.maxPool2d(t,n),gt.create(n)},ra:function(e){dt.release(e)},xa:function(e,t){return e=dt.get(e),t=gt.get(t),t=e.relu(t),gt.create(t)},wa:function(e){return e=dt.get(e).relu(),mt.create(e)},va:function(e,t,n){e=dt.get(e),t=gt.get(t);var r=rt[i()[n>>2]],u=a()[n+4>>2],s=i()[n+8>>2];if(0!==u&&0!==s){for(var c=[],l=0;l<u;++l,s+=4)c.push(o()[s>>2]);u=c}else u=void 0;return n={mode:r,scales:u,sizes:at(a()[n+12>>2],i()[n+16>>2]),axes:at(a()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),gt.create(n)},ta:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=at(r,n),n=e.reshape(t,n),gt.create(n)},sa:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={permutation:at(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),gt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=pt.get(t),n=bt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){pt.release(e)},qa:function(e,t,n){e=pt.get(e),t=V(t),n=0===i()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:at(a()[n+16>>2],i()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=V(t),n=gt.get(n),e[t]=n},la:function(e){bt.release(e)},ma:function(e,t,n){e=bt.get(e),t=V(t),n=ot(n),e[t]=n},ka:function(e){gt.hc(e)},ja:function(e){gt.release(e)},ia:function(e){mt.hc(e)},ha:function(e){mt.release(e)},Sa:jt,g:function(e,t,n,r){return jt(e,t,n,r)},ga:function(e){return e=lt.get(e),e=new MLGraphBuilder(e),dt.create(e)},fa:function(){return pt.create({})},ea:function(){return ht.create({})},da:function(){return bt.create({})}};!function(){function e(e,t){s.asm=e.exports,ee=s.asm.pb,ne.unshift(s.asm.Wa),_e.qc.push(s.asm.ub),C=t,A||(ce--,s.monitorRunDependencies&&s.monitorRunDependencies(ce),0==ce&&(null!==le&&(clearInterval(le),le=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(_||w)){if(\\\"function\\\"==typeof fetch&&!se.startsWith(\\\"file://\\\"))return fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+se+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return be()}));if(g)return new Promise((function(e,t){g(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return be()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){R(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:It};if(A||(ce++,s.monitorRunDependencies&&s.monitorRunDependencies(ce)),s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(e){return R(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||se.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return R(\\\"wasm streaming compile failed: \\\"+e),R(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.Wa).apply(null,arguments)},s._OrtInit=function(){return(s._OrtInit=s.asm.Xa).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm.Ya).apply(null,arguments)},s._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(s._OrtSessionOptionsAppendExecutionProviderWebNN=s.asm.Za).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm._a).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.$a).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm.ab).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.bb).apply(null,arguments)},s._OrtGetInputCount=function(){return(s._OrtGetInputCount=s.asm.cb).apply(null,arguments)},s._OrtGetOutputCount=function(){return(s._OrtGetOutputCount=s.asm.db).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.eb).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.fb).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.gb).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.hb).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.ib).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.jb).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.kb).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.lb).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.mb).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.nb).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.ob).apply(null,arguments)};var Ut=s._malloc=function(){return(Ut=s._malloc=s.asm.qb).apply(null,arguments)},Wt=s.___errno_location=function(){return(Wt=s.___errno_location=s.asm.rb).apply(null,arguments)},Lt=s._free=function(){return(Lt=s._free=s.asm.sb).apply(null,arguments)},zt=s._pthread_self=function(){return(zt=s._pthread_self=s.asm.tb).apply(null,arguments)};s._emscripten_tls_init=function(){return(s._emscripten_tls_init=s.asm.ub).apply(null,arguments)},s._emscripten_current_thread_process_queued_calls=function(){return(s._emscripten_current_thread_process_queued_calls=s.asm.vb).apply(null,arguments)};var Yt,Ht=s._emscripten_register_main_browser_thread_id=function(){return(Ht=s._emscripten_register_main_browser_thread_id=s.asm.wb).apply(null,arguments)},Bt=s._emscripten_main_browser_thread_id=function(){return(Bt=s._emscripten_main_browser_thread_id=s.asm.xb).apply(null,arguments)},Nt=s._emscripten_sync_run_in_main_thread_4=function(){return(Nt=s._emscripten_sync_run_in_main_thread_4=s.asm.yb).apply(null,arguments)},Gt=s._emscripten_main_thread_process_queued_calls=function(){return(Gt=s._emscripten_main_thread_process_queued_calls=s.asm.zb).apply(null,arguments)},Zt=s._emscripten_run_in_main_runtime_thread_js=function(){return(Zt=s._emscripten_run_in_main_runtime_thread_js=s.asm.Ab).apply(null,arguments)},Vt=s.__emscripten_call_on_thread=function(){return(Vt=s.__emscripten_call_on_thread=s.asm.Bb).apply(null,arguments)},qt=s._pthread_testcancel=function(){return(qt=s._pthread_testcancel=s.asm.Cb).apply(null,arguments)},Xt=s._pthread_exit=function(){return(Xt=s._pthread_exit=s.asm.Db).apply(null,arguments)},Qt=s.__emscripten_thread_init=function(){return(Qt=s.__emscripten_thread_init=s.asm.Eb).apply(null,arguments)},Jt=s._emscripten_get_global_libc=function(){return(Jt=s._emscripten_get_global_libc=s.asm.Fb).apply(null,arguments)},$t=s.___pthread_tsd_run_dtors=function(){return($t=s.___pthread_tsd_run_dtors=s.asm.Gb).apply(null,arguments)},Kt=s.__get_tzname=function(){return(Kt=s.__get_tzname=s.asm.Hb).apply(null,arguments)},en=s.__get_daylight=function(){return(en=s.__get_daylight=s.asm.Ib).apply(null,arguments)},tn=s.__get_timezone=function(){return(tn=s.__get_timezone=s.asm.Jb).apply(null,arguments)},nn=s.stackSave=function(){return(nn=s.stackSave=s.asm.Kb).apply(null,arguments)},rn=s.stackRestore=function(){return(rn=s.stackRestore=s.asm.Lb).apply(null,arguments)},an=s.stackAlloc=function(){return(an=s.stackAlloc=s.asm.Mb).apply(null,arguments)},on=s._emscripten_stack_set_limits=function(){return(on=s._emscripten_stack_set_limits=s.asm.Nb).apply(null,arguments)},un=s._memalign=function(){return(un=s._memalign=s.asm.Ob).apply(null,arguments)},sn=s.__emscripten_allow_main_runtime_queued_calls=999380,cn=s.__emscripten_main_thread_futex=1003380;function ln(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function fn(){function e(){if(!Yt&&(Yt=!0,s.calledRun=!0,!F)&&(A||ge(ne),c(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!A)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();ie.unshift(e)}ge(ie)}}if(!(0<ce))if(A)c(s),A||ge(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)ue();ge(te)}0<ce||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function dn(e){if(j=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new ln(e);oe()||(_e.xc(),A||(ge(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),Me[1].length&&ke(1,10),Me[2].length&&ke(2,10))),j=e,oe()||(_e.xc(),s.onExit&&s.onExit(e),F=!0),b(e,new ln(e))}if(s.UTF8ToString=V,s.stringToUTF8=X,s.lengthBytesUTF8=Q,s.keepRuntimeAlive=oe,s.PThread=_e,s.stackSave=nn,s.stackRestore=rn,s.stackAlloc=an,s.PThread=_e,s.wasmMemory=D,s.ExitStatus=ln,fe=function e(){Yt||fn(),Yt||(fe=e)},s.run=fn,s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return A&&(P=!1,_e.Jc()),fn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,s,c,l,f,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=b?n(622).dirname(g)+\\\"/\\\":__dirname+\\\"/\\\",u=function(e,t){return l||(l=n(747)),f||(f=n(622)),e=f.normalize(e),l.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||G(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){l||(l=n(747)),f||(f=n(622)),e=f.normalize(e),l.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",G),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||b)&&(b?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var m,v=t.print||console.log.bind(console),y=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(m=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&G(\\\"no native wasm support detected\\\");var _,w,O,A,S,E,T,x=!1,M=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&M)return M.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function R(e,t){return e?k(A,e,t):\\\"\\\"}function P(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function D(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function C(e){var t=D(e)+1,n=Pe(t);return n&&P(e,O,n,t),n}function j(){var e=_.buffer;w=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=S=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=E=new Uint32Array(e),t.HEAPF32=T=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var F,I=[],U=[],W=[],L=[];function z(){var e=t.preRun.shift();I.unshift(e)}var Y,H=0,B=null,N=null;function G(e){throw t.onAbort&&t.onAbort(e),y(e),x=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function Z(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Y=\\\"ort-wasm.wasm\\\",!Z()){var V=Y;Y=t.locateFile?t.locateFile(V,g):g+V}function q(){var e=Y;try{if(e==Y&&m)return new Uint8Array(m);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){G(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ub;\\\"number\\\"==typeof r?void 0===n.kb?F.get(r)():F.get(r)(n.kb):r(void 0===n.kb?null:n.kb)}}}function Q(e){this.mb=e-16,this.Eb=function(e){S[this.mb+4>>2]=e},this.Bb=function(e){S[this.mb+8>>2]=e},this.Cb=function(){S[this.mb>>2]=0},this.Ab=function(){O[this.mb+12>>0]=0},this.Db=function(){O[this.mb+13>>0]=0},this.wb=function(e,t){this.Eb(e),this.Bb(t),this.Cb(),this.Ab(),this.Db()}}var J,$={},K=[null,[],[]],ee={};J=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function oe(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(S[t>>2]);return n}}function ue(e,t=\\\"float32\\\"){const n=S[e>>2]+E[e+8>>2];return e=E[e+4>>2],\\\"float32\\\"===t||G(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function se(e){return{type:ae[E[e>>2]],dimensions:oe(E[e+8>>2],S[e+4>>2])}}function ce(e){return{windowDimensions:oe(E[e>>2],S[e+4>>2]),padding:\\\"explicit\\\"===te[S[e+32>>2]]?oe(E[e+8>>2],S[e+12>>2]):void 0,strides:oe(E[e+16>>2],S[e+20>>2]),dilations:oe(E[e+24>>2],S[e+28>>2]),autoPad:te[S[e+32>>2]],layout:re[S[e+36>>2]]}}var le,fe,de,pe,be,he,ge,me,ve,ye,_e={};function we(){if(!ve){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in _e)void 0===_e[e]?delete t[e]:t[e]=_e[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);ve=n}return ve}function Oe(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!ye){ye=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);S[Ie()>>2]=60*a,S[Fe()>>2]=Number(t!=i),n=e(n),r=e(r),n=C(n),r=C(r),i<t?(S[je()>>2]=n,S[je()+4>>2]=r):(S[je()>>2]=r,S[je()+4>>2]=n)}}function Ae(e){return 0==e%4&&(0!=e%100||0==e%400)}function Se(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ee=[31,29,31,30,31,30,31,31,30,31,30,31],Te=[31,28,31,30,31,30,31,31,30,31,30,31];function xe(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ae(e.getFullYear())?Ee:Te)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Me(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=xe(new Date(e.ib+1900,0,1),e.rb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=S[r+40>>2];for(var l in r={Hb:S[r>>2],Gb:S[r+4>>2],pb:S[r+8>>2],nb:S[r+12>>2],jb:S[r+16>>2],ib:S[r+20>>2],qb:S[r+24>>2],rb:S[r+28>>2],Pb:S[r+32>>2],Fb:S[r+36>>2],Ib:c?R(c):\\\"\\\"},n=R(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),c[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in c={\\\"%a\\\":function(e){return f[e.qb].substring(0,3)},\\\"%A\\\":function(e){return f[e.qb]},\\\"%b\\\":function(e){return d[e.jb].substring(0,3)},\\\"%B\\\":function(e){return d[e.jb]},\\\"%C\\\":function(e){return a((e.ib+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.nb,2)},\\\"%e\\\":function(e){return i(e.nb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return a(e.pb,2)},\\\"%I\\\":function(e){return 0==(e=e.pb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.nb+Se(Ae(e.ib+1900)?Ee:Te,e.jb-1),3)},\\\"%m\\\":function(e){return a(e.jb+1,2)},\\\"%M\\\":function(e){return a(e.Gb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.pb&&12>e.pb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Hb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.qb||7},\\\"%U\\\":function(e){var t=new Date(e.ib+1900,0,1),n=0===t.getDay()?t:xe(t,7-t.getDay());return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.ib+1901,0,4),n=u(new Date(e.ib+1900,0,4));t=u(t);var r=xe(new Date(e.ib+1900,0,1),e.rb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.ib+1900?e.rb+32-n.getDate():e.rb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.qb},\\\"%W\\\":function(e){var t=new Date(e.ib,0,1),n=1===t.getDay()?t:xe(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.ib+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ib+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Fb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Ib},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),c[l](r)));return(l=function(e){var t=Array(D(e)+1);return P(e,t,0,t.length),t}(n)).length>t?0:(O.set(l,e),l.length-1)}le||(le=le||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},fe=fe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},de=de||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},pe=pe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},be=be||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},he=he||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},ge=ge||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},me=me||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}});var ke={a:function(e){return Pe(e+16)+16},c:function(e,t){W.unshift({ub:e,kb:t})},f:function(e,t){W.unshift({ub:e,kb:t})},b:function(e,t,n){throw new Q(e).wb(t,n),e},L:function(e,t){return e=R(e),ee.Jb(e,t)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(e,t){return e=R(e),ee.Kb(e,t)},S:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=ze(65536,e);o?(A.fill(0,o,o+e),e=o):e=0,e?($[e]={yb:e,xb:t,vb:!0,fd:i,Ob:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},R:function(e,t){var n=$[e];return 0!==t&&n?(t===n.xb&&($[e]=null,n.vb&&Ce(n.yb)),e=0):e=-28,e},m:function(){},I:function(e,t,n){return e=R(e),ee.Lb(e,t,n)},G:function(){},s:function(){},H:function(){},k:function(){G()},v:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return S[De()>>2]=28,-1;e=J()}return S[t>>2]=e/1e3|0,S[t+4>>2]=e%1e3*1e6|0,0},J:function(e,t){return e-t},Ba:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ca:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Aa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){return 2147483648},A:function(e,t,n){A.copyWithin(e,t,t+n)},l:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-w.byteLength+65535>>>16),j();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},F:function(e){for(var t=J();J()-t<e;);},ya:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][E[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][E[e+4>>2]]}),le.create(navigator.ml.createContext(t))},D:function(e,t){var n=0;return we().forEach((function(r,i){var a=t+n;for(i=S[e+4*i>>2]=a,a=0;a<r.length;++a)O[i++>>0]=r.charCodeAt(a);O[i>>0]=0,n+=r.length+1})),0},E:function(e,t){var n=we();S[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),S[t>>2]=r,0},i:function(){return 0},C:function(e,t){return e=1==e||2==e?2:G(),O[t>>0]=e,0},p:function(e,t,n,r){return e=ee.Nb(e),t=ee.Mb(e,t,n),S[r>>2]=t,0},z:function(){},q:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=S[t+8*a>>2],u=S[t+(8*a+4)>>2],s=0;s<u;s++){var c=A[o+s],l=K[e];0===c||10===c?((1===e?v:y)(k(l,0)),l.length=0):l.push(c)}i+=u}return S[r>>2]=i,0},da:function(e){var t=Date.now();return S[e>>2]=t/1e3|0,S[e+4>>2]=t%1e3*1e3|0,0},P:function e(t,n){return t=new Date(1e3*S[t>>2]),S[n>>2]=t.getUTCSeconds(),S[n+4>>2]=t.getUTCMinutes(),S[n+8>>2]=t.getUTCHours(),S[n+12>>2]=t.getUTCDate(),S[n+16>>2]=t.getUTCMonth(),S[n+20>>2]=t.getUTCFullYear()-1900,S[n+24>>2]=t.getUTCDay(),S[n+36>>2]=0,S[n+32>>2]=0,S[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.tb||(e.tb=C(\\\"GMT\\\")),S[n+40>>2]=e.tb,n},t:function(e,t){Oe(),e=new Date(1e3*S[e>>2]),S[t>>2]=e.getSeconds(),S[t+4>>2]=e.getMinutes(),S[t+8>>2]=e.getHours(),S[t+12>>2]=e.getDate(),S[t+16>>2]=e.getMonth(),S[t+20>>2]=e.getFullYear()-1900,S[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);S[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,S[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),S[t+32>>2]=e,e=S[je()+(e?4:0)>>2],S[t+40>>2]=e,t},n:function(e){Oe();var t=new Date(S[e+20>>2]+1900,S[e+16>>2],S[e+12>>2],S[e+8>>2],S[e+4>>2],S[e>>2],0),n=S[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?S[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),S[e+24>>2]=t.getDay(),S[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,S[e>>2]=t.getSeconds(),S[e+4>>2]=t.getMinutes(),S[e+8>>2]=t.getHours(),S[e+12>>2]=t.getDate(),S[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},y:function(e){le.ob(e)},x:function(e){le.release(e)},va:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.add(t,n),ge.create(n)},ua:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.averagePool2d(t,n),ge.create(n)},ta:function(e,t,n,r,i){return e=de.get(e),t=ge.get(t),n=ge.get(n),r=ge.get(r),i={scale:ge.get(S[i>>2]),bias:ge.get(S[i+4>>2]),axis:S[i+8>>2],epsilon:T[i+12>>2],activation:me.get(S[i+16>>2])},i=e.batchNormalization(t,n,r,i),ge.create(i)},sa:function(e,t){e=de.get(e),t=he.get(t);try{var n=e.build(t);return fe.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},ra:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.clamp(t,{minValue:T[n>>2],maxValue:T[n+4>>2]}),ge.create(n)},qa:function(e,t,n,r){e=de.get(e),t=oe(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ge.get(t[i]));return r=e.concat(n,r),ge.create(r)},pa:function(e,t,n){return e=de.get(e),n=ue(n,(t=se(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ge.create(n)},oa:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={padding:\\\"explicit\\\"===te[S[r+40>>2]]?oe(E[r>>2],S[r+4>>2]):void 0,strides:oe(E[r+8>>2],S[r+12>>2]),dilations:oe(E[r+16>>2],S[r+20>>2]),autoPad:te[S[r+40>>2]],groups:S[r+48>>2],inputLayout:re[S[r+52>>2]],filterLayout:ne[S[r+56>>2]],bias:ge.get(S[r+60>>2]),activation:me.get(S[r+64>>2])},r=e.conv2d(t,n,r),ge.create(r)},na:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={c:ge.get(S[r>>2]),alpha:T[r+4>>2],beta:T[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),ge.create(r)},ma:function(e,t,n){return e=de.get(e),t=R(t),n=se(n),n=e.input(t,n),ge.create(n)},la:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.leakyRelu(t,{alpha:T[n>>2]}),ge.create(n)},ka:function(e,t){return e=de.get(e).leakyRelu({alpha:T[t>>2]}),me.create(e)},ja:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.matmul(t,n),ge.create(n)},ia:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.maxPool2d(t,n),ge.create(n)},u:function(e){de.release(e)},ha:function(e,t){return e=de.get(e),t=ge.get(t),t=e.relu(t),ge.create(t)},ga:function(e){return e=de.get(e).relu(),me.create(e)},fa:function(e,t,n){e=de.get(e),t=ge.get(t);var r=ie[S[n>>2]],i=E[n+4>>2],a=S[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(T[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:oe(E[n+12>>2],S[n+16>>2]),axes:oe(E[n+20>>2],S[n+24>>2])},n=e.resample2d(t,n),ge.create(n)},ea:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=oe(r,n),n=e.reshape(t,n),ge.create(n)},ca:function(e,t,n){return e=de.get(e),t=ge.get(t),n={permutation:oe(E[n>>2],S[n+4>>2])},n=e.transpose(t,n),ge.create(n)},xa:function(e,t,n){return e=fe.get(e),t=pe.get(t),n=be.get(n),e.compute(t,n)},wa:function(e){fe.ob(e)},w:function(e){fe.release(e)},aa:function(e){pe.release(e)},ba:function(e,t,n){e=pe.get(e),t=R(t),n=0===S[n+12>>2]?ue(n+0):{resource:ue(n+0),dimensions:oe(E[n+16>>2],S[n+12>>2])},e[t]=n},_:function(e){he.release(e)},$:function(e,t,n){e=he.get(e),t=R(t),n=ge.get(n),e[t]=n},Y:function(e){be.release(e)},Z:function(e,t,n){e=be.get(e),t=R(t),n=ue(n),e[t]=n},e:function(e){ge.ob(e)},d:function(e){ge.release(e)},X:function(e){me.ob(e)},h:function(e){me.release(e)},za:Me,g:function(e,t,n,r){return Me(e,t,n,r)},W:function(e){return e=le.get(e),e=new MLGraphBuilder(e),de.create(e)},V:function(){return pe.create({})},U:function(){return he.create({})},T:function(){return be.create({})}};!function(){function e(e){t.asm=e.exports,_=t.asm.Da,j(),F=t.asm.hb,U.unshift(t.asm.Ea),H--,t.monitorRunDependencies&&t.monitorRunDependencies(H),0==H&&(null!==B&&(clearInterval(B),B=null),N&&(e=N,N=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!m&&(p||b)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return q()}));if(s)return new Promise((function(e,t){s(Y,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return q()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){y(\\\"failed to asynchronously prepare wasm: \\\"+e),G(e)}))}var a={a:ke};if(H++,t.monitorRunDependencies&&t.monitorRunDependencies(H),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return y(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Z()||Y.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return y(\\\"wasm streaming compile failed: \\\"+e),y(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ea).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Fa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ga).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Ha).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Ia).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Ja).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ka).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.La).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Ma).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.Na).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Oa).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Pa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Qa).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ra).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Sa).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ta).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Ua).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Va).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Wa).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Xa).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ya).apply(null,arguments)};var Re,Pe=t._malloc=function(){return(Pe=t._malloc=t.asm.Za).apply(null,arguments)},De=t.___errno_location=function(){return(De=t.___errno_location=t.asm._a).apply(null,arguments)},Ce=t._free=function(){return(Ce=t._free=t.asm.$a).apply(null,arguments)},je=t.__get_tzname=function(){return(je=t.__get_tzname=t.asm.ab).apply(null,arguments)},Fe=t.__get_daylight=function(){return(Fe=t.__get_daylight=t.asm.bb).apply(null,arguments)},Ie=t.__get_timezone=function(){return(Ie=t.__get_timezone=t.asm.cb).apply(null,arguments)},Ue=t.stackSave=function(){return(Ue=t.stackSave=t.asm.db).apply(null,arguments)},We=t.stackRestore=function(){return(We=t.stackRestore=t.asm.eb).apply(null,arguments)},Le=t.stackAlloc=function(){return(Le=t.stackAlloc=t.asm.fb).apply(null,arguments)},ze=t._memalign=function(){return(ze=t._memalign=t.asm.gb).apply(null,arguments)};function Ye(){function e(){if(!Re&&(Re=!0,t.calledRun=!0,!x)){if(X(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();L.unshift(e)}X(L)}}if(!(0<H)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)z();X(I),0<H||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=R,t.stringToUTF8=function(e,t,n){return P(e,A,t,n)},t.lengthBytesUTF8=D,t.stackSave=Ue,t.stackRestore=We,t.stackAlloc=Le,N=function e(){Re||Ye(),Re||(N=e)},t.run=Ye,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Ye(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,i,a){if(\\\"object\\\"==typeof e&&null!==e){if(i.has(e))throw new Error(\\\"Circular reference in options\\\");i.add(e)}Object.entries(e).forEach((function(e){var o=n(e,2),u=o[0],s=o[1],c=r?r+u:u;if(\\\"object\\\"==typeof s)t.iterateExtraOptions(s,c+\\\".\\\",i,a);else if(\\\"string\\\"==typeof s||\\\"number\\\"==typeof s)a(c,s.toString());else{if(\\\"boolean\\\"!=typeof s)throw new Error(\\\"Can't handle extra config type: \\\"+typeof s);a(c,s?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),i=n(983),a=n(361);t.setRunOptions=function(e){var t=a.getInstance(),n=0,o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var s=0;if(void 0!==(null==e?void 0:e.tag)&&(s=i.allocWasmString(e.tag,o)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,s)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var i=n(967),a=n(983),o=n(361);t.setSessionOptions=function(e){var t,n,u=o.getInstance(),s=0,c=[],l=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(l);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(l.graphOptimizationLevel=\\\"all\\\");var f=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(l.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(l.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(l.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(l.executionMode=\\\"sequential\\\");var d=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(l.executionMode),p=0;if(void 0!==(null==e?void 0:e.logId)&&(p=a.allocWasmString(e.logId,c)),void 0===(null==e?void 0:e.logSeverityLevel))l.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))l.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(l.enableProfiling=!1),0===(s=u._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,p,l.logSeverityLevel,l.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&i.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=a.allocWasmString(e,c),r=a.allocWasmString(t,c);if(0!==u._OrtAddSessionConfigEntry(s,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var b=r(e.executionProviders),h=b.next();!h.done;h=b.next()){var g=h.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof g?g:g.name)){var m=0;if(\\\"string\\\"!=typeof g){var v=g;(null==v?void 0:v.devicePreference)&&(m=v.devicePreference)}if(console.log(\\\"webnn device preference: \\\"+m),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(s,m))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=b.return)&&n.call(b)}finally{if(t)throw t.error}}return[s,c]}catch(e){throw 0!==s&&u._OrtReleaseSessionOptions(s),c.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var a=n(586),o=n(919),u=n(983),s=n(361);t.initOrt=function(e,t){var n=s.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var c=[];t.createSession=function(e,t){var n,i=s.getInstance(),a=i._malloc(e.byteLength),u=0,l=0,f=[];try{if(l=(n=r(o.setSessionOptions(t),2))[0],f=n[1],i.HEAPU8.set(e,a),0===(u=i._OrtCreateSession(a,e.byteLength,l)))throw new Error(\\\"Can't create a session\\\")}finally{i._free(a),i._OrtReleaseSessionOptions(l),f.forEach(i._free)}for(var d=i._OrtGetInputCount(u),p=i._OrtGetOutputCount(u),b=[],h=[],g=[],m=[],v=0;v<d;v++){var y=i._OrtGetInputName(u,v);if(0===y)throw new Error(\\\"Can't get an input name\\\");h.push(y),b.push(i.UTF8ToString(y))}for(v=0;v<p;v++){var _=i._OrtGetOutputName(u,v);if(0===_)throw new Error(\\\"Can't get an output name\\\");m.push(_),g.push(i.UTF8ToString(_))}return c.push([u,h,m]),[c.length-1,b,g]},t.releaseSession=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),c[e]=void 0};var l=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},f=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,i,o){var d,p=s.getInstance(),b=c[e];if(!b)throw new Error(\\\"invalid session id\\\");var h=b[0],g=b[1],m=b[2],v=t.length,y=i.length,_=0,w=[],O=[],A=[];try{_=(d=r(a.setRunOptions(o),2))[0],w=d[1];for(var S=function(e){var t=n[e][0],r=n[e][1],i=n[e][2],a=void 0,o=void 0;if(Array.isArray(i)){o=4*i.length,a=p._malloc(o),A.push(a);for(var s=a/4,c=0;c<i.length;c++){if(\\\"string\\\"!=typeof i[c])throw new TypeError(\\\"tensor data at index \\\"+c+\\\" is not a string\\\");p.HEAPU32[s++]=u.allocWasmString(i[c],A)}}else o=i.byteLength,a=p._malloc(o),A.push(a),p.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,o),a);var l=p.stackSave(),f=p.stackAlloc(4*r.length);try{var d=f/4;r.forEach((function(e){return p.HEAP32[d++]=e}));var b=p._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),a,o,f,r.length);if(0===b)throw new Error(\\\"Can't create a tensor\\\");O.push(b)}finally{p.stackRestore(l)}},E=0;E<v;E++)S(E);var T=p.stackSave(),x=p.stackAlloc(4*v),M=p.stackAlloc(4*v),k=p.stackAlloc(4*y),R=p.stackAlloc(4*y);try{var P=x/4,D=M/4,C=k/4,j=R/4;for(E=0;E<v;E++)p.HEAPU32[P++]=O[E],p.HEAPU32[D++]=g[t[E]];for(E=0;E<y;E++)p.HEAPU32[C++]=0,p.HEAPU32[j++]=m[i[E]];var F=p._OrtRun(h,M,x,v,R,y,k,_),I=[];if(0===F)for(E=0;E<y;E++){var U=p.HEAPU32[k/4+E],W=p.stackSave(),L=p.stackAlloc(16),z=void 0,Y=0;try{if(0!==(F=p._OrtGetTensorData(U,L,L+4,L+8,L+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+F);var H=L/4,B=p.HEAPU32[H++];Y=p.HEAPU32[H++];for(var N=p.HEAPU32[H++],G=p.HEAPU32[H++],Z=[],V=0;V<G;V++)Z.push(p.HEAPU32[N/4+V]);p._OrtFree(N);var q=0===Z.length?1:Z.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(z=l(B))){for(var X=[],Q=Y/4,J=0;J<q;J++){var $=p.HEAPU32[Q++],K=J===q-1?void 0:p.HEAPU32[Q]-$;X.push(p.UTF8ToString($,K))}I.push([z,Z,X])}else{var ee=new(f(z))(q);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(p.HEAPU8.subarray(Y,Y+ee.byteLength)),I.push([z,Z,ee])}}finally{p.stackRestore(W),\\\"string\\\"===z&&Y&&p._free(Y),p._OrtReleaseTensor(U)}}if(0===F)return I;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+F+\\\".\\\")}finally{p.stackRestore(T)}}finally{O.forEach(p._OrtReleaseTensor),A.forEach(p._free),p._OrtReleaseRunOptions(_),w.forEach(p._free)}},t.endProfiling=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var a=i(e),o=a.next();!o.done;o=a.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var c,l=a(n(622)),f=s(n(474)),d=s(n(932)),p=!1,b=!1,h=!1,g=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return o(void 0,void 0,void 0,(function(){var t,r,i,a,o,s,m,v,y,_,w;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(b)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return b=!0,t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),s=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,m=g(!1,a),v=g(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[v]:void 0,_=!1,w=[],t>0&&w.push(new Promise((function(e){setTimeout((function(){_=!0,e()}),t)}))),w.push(new Promise((function(e,t){var r=a?f.default:d.default,i={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===m?null!=y?y:(null!=s?s:t)+v:t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=l.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+f.default.toString()+\\\"})();\\\";i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(t){b=!1,p=!0,c=t,e()}),(function(e){b=!1,h=!0,t(e)}))}))),[4,Promise.race(w)];case 1:if(u.sent(),_)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(p&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!p||b||h||(b=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,b=!1,p=!1,h=!0)}},747:function(e){\\\"use strict\\\";e.exports=require(\\\"fs\\\")},87:function(e){\\\"use strict\\\";e.exports=require(\\\"os\\\")},622:function(e){\\\"use strict\\\";e.exports=require(\\\"path\\\")},630:function(e){\\\"use strict\\\";e.exports=require(\\\"perf_hooks\\\")},13:function(e){\\\"use strict\\\";e.exports=require(\\\"worker_threads\\\")}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}!function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,i=r.numThreads,a=r.loggingLevel;e.initOrt(i,a),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var o=n.data.in,u=o.model,s=o.options,c=e.createSession(u,s);postMessage({type:\\\"create\\\",out:c})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var l=n.data.in;e.releaseSession(l),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var f=n.data.in,d=f.sessionId,p=f.inputIndices,b=f.inputs,h=f.outputIndices,g=(s=f.options,e.run(d,p,b,h,s));postMessage({type:\\\"run\\\",out:g},e.extractTransferableBuffers(g))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{l=n.data.in,e.endProfiling(l),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"perf_hooks\");;","module.exports = require(\"util\");;","module.exports = require(\"worker_threads\");;","module.exports = require(\"onnxruntime-common\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}