{"version":3,"sources":["webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external \"fs\"","webpack://onnxruntime-web/external \"os\"","webpack://onnxruntime-web/external \"path\"","webpack://onnxruntime-web/external \"perf_hooks\"","webpack://onnxruntime-web/external \"util\"","webpack://onnxruntime-web/external \"worker_threads\"","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["_scriptDir","e","document","currentScript","src","__filename","t","C","buffer","W","Q","Y","n","q","r","B","i","U","c","z","a","G","o","u","s","ready","Promise","f","l","hasOwnProperty","d","p","h","m","g","_","b","y","window","v","importScripts","w","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","F","readFile","argv","length","replace","slice","on","hn","le","ce","exitCode","exit","inspect","global","Worker","x","console","error","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","k","M","print","log","bind","S","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","R","j","I","P","TextDecoder","this","decode","SharedArrayBuffer","call","H","N","subarray","String","fromCharCode","L","$","charCodeAt","V","X","J","Ut","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Z","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","K","ee","te","ne","re","ie","ae","preRun","shift","unshift","oe","ue","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","he","1000244","me","Qc","ic","get","ge","Atomics","load","pn","compareExchange","notify","_e","ye","cc","uc","worker","_emscripten_futex_wake","be","fc","ec","Cc","Cd","Uc","store","en","Lt","Vc","receiveObjectTransfer","ad","threadInit","md","threadCancel","ld","threadExit","Kc","setExitStatus","cd","Bc","Hc","pop","nn","Ic","Ht","postMessage","cmd","Jc","terminate","bc","zc","dc","Gt","yc","hc","bd","push","splice","dn","Xc","onmessage","data","Oc","targetThread","Id","transferList","Xt","Te","thread","loaded","oc","threadId","text","alert","gn","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","Lc","Rc","sd","now","ve","Date","zt","we","Le","Ae","mc","jd","ed","gd","dd","hd","Sc","tc","jc","detached","tn","start_routine","kd","arg","threadInfoStruct","stackBase","stackSize","time","rd","Oe","exchange","wait","xe","establishStackSpace","fn","un","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","ke","Me","Se","De","wd","Ce","Re","je","Ie","Fe","Pe","xd","We","Math","ceil","ln","fill","Zc","Wc","Mc","fd","Fd","flags","offset","Ye","qe","Be","yd","Ue","ze","Ge","He","Ne","arguments","sn","Jt","$e","Ve","Xe","querySelector","Je","sc","Gc","ud","Qt","rc","qc","getParameter","width","height","viewport","Qe","Ze","Ke","et","tt","nt","rt","split","it","ct","at","ot","BYTES_PER_ELEMENT","ut","minValue","maxValue","st","alpha","ft","type","dimensions","lt","windowDimensions","padding","strides","dilations","autoPad","layout","dt","pt","ht","mt","gt","_t","bt","yt","vt","wt","At","Tt","Ot","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","xt","forEach","Et","kt","Mt","St","Ad","zd","Dt","Ct","Rt","toTimeString","match","Nc","getFullYear","getTimezoneOffset","max","an","cn","Number","rn","jt","It","Ft","Pt","Wt","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Yt","toString","getDay","ac","xc","pd","od","vc","pc","kc","wc","Jd","nd","qd","RegExp","substring","abs","includes","Array","set","lc","$c","create","Ac","object","nc","release","qt","Bt","cb","Vt","td","$t","Zt","_a","fb","db","eb","Va","ba","apply","Za","Xa","copyWithin","hardwareConcurrency","Ya","min","grow","setTimeout","stack","Kt","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Yc","Dd","Ec","Pc","Gd","Hd","Fc","getContext","WebGLRenderingContext","Bd","attributes","version","canvas","Tc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","vd","Ed","getSupportedExtensions","Ta","devicePreference","ml","createContext","ab","bb","$a","Wa","wa","gb","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Dc","getSeconds","getMinutes","getHours","setTime","Sa","Ra","Na","add","Ma","averagePool2d","La","scale","bias","axis","epsilon","activation","batchNormalization","Ka","build","Ja","clamp","Ia","Ha","concat","Ga","constant","Fa","groups","inputLayout","filterLayout","conv2d","Ea","beta","aTranspose","bTranspose","gemm","Da","recurrentBias","initialHiddenState","resetAfter","returnSequence","direction","activations","gru","Ca","input","Ba","leakyRelu","Aa","za","matmul","ya","maxPool2d","ma","xa","relu","va","ua","mode","scales","sizes","axes","resample2d","ta","reshape","sa","sigmoid","ra","qa","pa","tanh","oa","na","permutation","transpose","Qa","compute","Pa","Oa","ka","la","resource","ia","ja","ga","ha","da","ca","fa","ea","aa","Ua","MLGraphBuilder","asm","exports","Cb","hb","Hb","monitorRunDependencies","clearInterval","instance","module","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","ib","_OrtCreateSessionOptions","jb","_OrtSessionOptionsAppendExecutionProviderWebNN","kb","_OrtAddSessionConfigEntry","lb","_OrtReleaseSessionOptions","mb","_OrtCreateSession","nb","_OrtReleaseSession","ob","_OrtGetInputCount","pb","_OrtGetOutputCount","qb","_OrtGetInputName","rb","_OrtGetOutputName","sb","_OrtFree","tb","_OrtCreateTensor","ub","_OrtGetTensorData","vb","_OrtReleaseTensor","wb","_OrtCreateRunOptions","xb","_OrtAddRunConfigEntry","yb","_OrtReleaseRunOptions","zb","_OrtRun","Ab","_OrtEndProfiling","Bb","_malloc","Db","___errno_location","Eb","_free","Fb","_pthread_self","Gb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","Ib","Nt","_emscripten_register_main_browser_thread_id","Jb","_emscripten_main_browser_thread_id","Kb","_emscripten_sync_run_in_main_thread_4","Lb","_emscripten_main_thread_process_queued_calls","Mb","_emscripten_run_in_main_runtime_thread_js","Nb","__emscripten_call_on_thread","Ob","_pthread_testcancel","Pb","_pthread_exit","Qb","__emscripten_thread_init","Rb","_emscripten_get_global_libc","Sb","___pthread_tsd_run_dtors","Tb","__get_tzname","Ub","__get_daylight","Vb","__get_timezone","Wb","stackSave","Xb","stackRestore","Yb","stackAlloc","Zb","_emscripten_stack_set_limits","_b","_memalign","$b","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","mn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","factory","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","root","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","ArrayBuffer","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","momentum","spatial","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.node.js","sourcesContent":["var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return C.buffer!=W&&Q(C.buffer),Y}function n(){return C.buffer!=W&&Q(C.buffer),q}function r(){return C.buffer!=W&&Q(C.buffer),B}function i(){return C.buffer!=W&&Q(C.buffer),U}function c(){return C.buffer!=W&&Q(C.buffer),z}function a(){return C.buffer!=W&&Q(C.buffer),G}var o,u,s;e=e||{},o||(o=void 0!==e?e:{}),o.ready=new Promise((function(e,t){u=e,s=t}));var f,l={};for(f in o)o.hasOwnProperty(f)&&(l[f]=o[f]);var d=\"./this.program\";function p(e,t){throw t}var h,m,g,_,b,y=\"object\"==typeof window,v=\"function\"==typeof importScripts,w=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=o.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(e){return o.locateFile?o.locateFile(e,T):T+e}if(w){if(T=v?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",h=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),F(e.buffer),e},m=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof hn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(ce())throw process.exitCode=e,t;process.exit(e)},o.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var x;try{x=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=x.Worker}}else(y||v)&&(v?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.lastIndexOf(\"/\")+1):\"\",w?(h=function(e,t){return _||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFileSync(e,t?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),F(e.buffer),e},m=function(e,t,n){_||(_=require(\"fs\")),b||(b=require(\"path\")),e=b.normalize(e),_.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},v&&(g=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,k,M=o.print||console.log.bind(console),S=o.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(o[f]=l[f]);l=null,o.thisProgram&&(d=o.thisProgram),o.quit&&(p=o.quit),o.wasmBinary&&(k=o.wasmBinary);var D=o.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var C,R,j,I=!1;function F(e,t){e||le(\"Assertion failed: \"+t)}function P(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,Y,q,B,U,z,G,H=\"undefined\"!=typeof TextDecoder?new P(\"utf8\"):void 0;function N(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&H)return H.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var c=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|c);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|c<<6|a:(7&i)<<18|c<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?N(n(),e,t):\"\"}function $(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var c=0;c<e.length;++c){var a=e.charCodeAt(c);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++c)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function V(e,t,r){return $(e,n(),t,r)}function X(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function J(e){var n=X(e)+1,r=Ut(n);return r&&$(e,t(),r,n),r}function Q(e){W=e,o.HEAP8=Y=new Int8Array(e),o.HEAP16=new Int16Array(e),o.HEAP32=B=new Int32Array(e),o.HEAPU8=q=new Uint8Array(e),o.HEAPU16=new Uint16Array(e),o.HEAPU32=U=new Uint32Array(e),o.HEAPF32=z=new Float32Array(e),o.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new P(\"utf-16le\"),A&&(W=o.buffer);var Z=o.INITIAL_MEMORY||16777216;if(A)C=o.wasmMemory,W=o.buffer;else if(o.wasmMemory)C=o.wasmMemory;else if(!((C=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw S(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),w&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");C&&(W=C.buffer),Z=W.byteLength,Q(W);var K,ee=[],te=[],ne=[],re=[],ie=0;function ce(){return D||0<ie}function ae(){var e=o.preRun.shift();ee.unshift(e)}var oe,ue=0,se=null,fe=null;function le(e){throw o.onAbort&&o.onAbort(e),F(!A),S(e),I=!0,j=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return oe.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=oe;try{if(e==oe&&k)return new Uint8Array(k);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}o.preloadedImages={},o.preloadedAudios={},oe=\"ort-wasm-threaded.wasm\",de()||(oe=O(oe));var he={1000244:function(){throw\"Canceled!\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(o);else{var n=t.Qc;\"number\"==typeof n?void 0===t.ic?K.get(n)():K.get(n)(t.ic):n(void 0===t.ic?null:t.ic)}}}function ge(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),pn>>2),c=0;if(i==e&&Atomics.compareExchange(r(),pn>>2,i,0)==i&&(c=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+c;throw\"Atomics.notify returned an unexpected value \"+e}function _e(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.cc[e];t&&(r()[e+12>>2]=0,ye.uc(t.worker))}o._emscripten_futex_wake=ge;var be,ye={fc:[],ec:[],Cc:[],Cd:function(){},Uc:function(){for(var e=Ut(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ut(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),en(e,!v,1),Lt(e)},Vc:function(){ye.receiveObjectTransfer=ye.ad,ye.threadInit=ye.md,ye.threadCancel=ye.ld,ye.threadExit=ye.Kc,ye.setExitStatus=ye.cd},cc:{},Bc:[],Hc:function(){for(;0<ye.Bc.length;)ye.Bc.pop()();nn()},Ic:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.Hc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ge(e+0,2147483647),en(0,0,0)},cd:function(e){j=e},Kc:function(e){var t=Ht();t&&(ye.Ic(t,e),A&&postMessage({cmd:\"exit\"}))},ld:function(){ye.Ic(Ht(),-1),postMessage({cmd:\"cancelDone\"})},Jc:function(){for(var e in ye.cc){var t=ye.cc[e];t&&t.worker&&ye.uc(t.worker)}for(ye.cc={},e=0;e<ye.fc.length;++e){var n=ye.fc[e];n.terminate()}for(ye.fc=[],e=0;e<ye.ec.length;++e)t=(n=ye.ec[e]).bc,ye.zc(t),n.terminate();ye.ec=[]},zc:function(e){if(e){if(e.dc){var t=r()[e.dc+100>>2];r()[e.dc+100>>2]=0,Gt(t),Gt(e.dc)}e.dc=0,e.yc&&e.hc&&Gt(e.hc),e.hc=0,e.worker&&(e.worker.bc=null)}},uc:function(e){ye.bd((function(){delete ye.cc[e.bc.dc],ye.fc.push(e),ye.ec.splice(ye.ec.indexOf(e),1),ye.zc(e.bc),e.bc=void 0}))},bd:function(e){r()[dn>>2]=0;try{e()}finally{r()[dn>>2]=1}},ad:function(){},md:function(){for(var e in ye.Cc)ye.Cc[e]()},Xc:function(e,t){e.onmessage=function(n){var c=n.data,a=c.cmd;if(e.bc&&(ye.Oc=e.bc.dc),c.targetThread&&c.targetThread!=Ht()){var o=ye.cc[c.Id];o?o.worker.postMessage(n.data,c.transferList):S('Internal error! Worker sent a message \"'+a+'\" to target pthread '+c.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Xt();else if(\"spawnThread\"===a)Te(n.data);else if(\"cleanupThread\"===a)_e(c.thread);else if(\"killThread\"===a){if(n=c.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,c=ye.cc[n],delete ye.cc[n],c.worker.terminate(),ye.zc(c),ye.ec.splice(ye.ec.indexOf(c.worker),1),c.worker.bc=void 0}else if(\"cancelThread\"===a){if(n=c.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.cc[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.oc&&(e.oc(),delete e.oc);else if(\"print\"===a)M(\"Thread \"+c.threadId+\": \"+c.text);else if(\"printErr\"===a)S(\"Thread \"+c.threadId+\": \"+c.text);else if(\"alert\"===a)alert(\"Thread \"+c.threadId+\": \"+c.text);else if(\"exit\"===a)e.bc&&Atomics.load(i(),e.bc.dc+64>>2)&&ye.uc(e);else if(\"exitProcess\"===a)try{gn(c.returnCode)}catch(e){if(e instanceof hn)return;throw e}else\"cancelDone\"===a?ye.uc(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):S(\"worker sent an unknown command \"+a));ye.Oc=void 0},e.onerror=function(e){S(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},w&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:o.mainScriptUrlOrBlob||_scriptDir,wasmMemory:C,wasmModule:R})},Lc:function(){var e=O(\"ort-wasm-threaded.worker.js\");ye.fc.push(new Worker(e))},Rc:function(){return 0==ye.fc.length&&(ye.Lc(),ye.Xc(ye.fc[0])),ye.fc.pop()},sd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function ve(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[zt()>>2]=28,-1;e=be()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function we(e,t){if(A)return Le(1,1,e,t);ne.unshift({Qc:e,ic:t})}function Ae(e){this.mc=e-16,this.jd=function(e){r()[this.mc+4>>2]=e},this.ed=function(e){r()[this.mc+8>>2]=e},this.gd=function(){r()[this.mc>>2]=0},this.dd=function(){t()[this.mc+12>>0]=0},this.hd=function(){t()[this.mc+13>>0]=0},this.Sc=function(e,t){this.jd(e),this.ed(t),this.gd(),this.dd(),this.hd()}}function Te(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Rc();if(!t)return 6;if(void 0!==t.bc)throw\"Internal error!\";if(!e.tc)throw\"Internal error, no pthread ptr!\";ye.ec.push(t);for(var n=Ut(512),c=0;128>c;++c)r()[n+4*c>>2]=0;var a=e.hc+e.jc,o=(c=ye.cc[e.tc]={worker:t,hc:e.hc,jc:e.jc,yc:e.yc,dc:e.tc}).dc>>2;Atomics.store(i(),o+16,e.detached),Atomics.store(i(),o+25,n),Atomics.store(i(),o+10,c.dc),Atomics.store(i(),o+20,e.jc),Atomics.store(i(),o+19,a),Atomics.store(i(),o+26,e.jc),Atomics.store(i(),o+28,a),Atomics.store(i(),o+29,e.detached),n=tn()+40,Atomics.store(i(),o+43,n),t.bc=c;var u={cmd:\"run\",start_routine:e.kd,arg:e.ic,threadInfoStruct:e.tc,stackBase:e.hc,stackSize:e.jc};return t.oc=function(){u.time=performance.now(),t.postMessage(u,e.rd)},t.loaded&&(t.oc(),delete t.oc),0}function Oe(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var c=performance.now();for(i=c+i,Atomics.exchange(r(),pn>>2,e);;){if((c=performance.now())>i)return Atomics.exchange(r(),pn>>2,0),-73;if(0==(c=Atomics.exchange(r(),pn>>2,0)))break;if(Xt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),pn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function xe(){w||v||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,S(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}o.establishStackSpace=function(e,t){fn(e,t),un(e)},o.invokeEntryPoint=function(e,t){return K.get(e)(t)},be=w?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-o.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},ke=[null,[],[]];function Me(e,t){var n=ke[e];0===t||10===t?((1===e?M:S)(N(n,0)),n.length=0):n.push(t)}var Se={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),Se.wd(e,t))}function Ce(e,t,n){return A?Le(3,1,e,t,n):0}function Re(e,t){if(A)return Le(4,1,e,t)}function je(e,t,n){if(A)return Le(5,1,e,t,n)}function Ie(e,t,n){return A?Le(6,1,e,t,n):0}function Fe(e,t){if(A)return Le(7,1,e,t)}function Pe(e,t){return A?Le(8,1,e,t):(e=L(e),Se.xd(e,t))}function We(e,t,r,i,c,a){if(A)t=Le(9,1,e,t,r,i,c,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var o=65536*Math.ceil(t/65536);(e=ln(65536,o))?n().fill(0,e,e+o):e=0,e?(Ee[e]={Zc:e,Wc:t,Mc:!0,fd:c,Fd:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function Ye(e,t){if(A)e=Le(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Wc&&(Ee[e]=null,n.Mc&&Gt(n.Zc)),e=0):e=-28}return e}function qe(e,t,n){if(A)return Le(11,1,e,t,n)}function Be(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),Se.yd(e,t,n))}function Ue(e){if(A)return Le(13,1,e)}function ze(e,t){if(A)return Le(14,1,e,t)}function Ge(e){if(A)return Le(15,1,e)}function He(){if(A)return Le(16,1);le()}var Ne=[];function Le(e,t){for(var n=arguments.length-2,r=on(),i=sn(8*n),c=i>>3,o=0;o<n;o++){var u=arguments[2+o];a()[c+o]=u}return n=Jt(e,n,i,t),un(r),n}var $e=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Xe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Je(e,t,n){var i=Xe(e);if(!i)return-4;if(i.sc&&(r()[i.sc>>2]=t,r()[i.sc+4>>2]=n),!i.Gc&&i.ud){if(i.sc){i=r()[i.sc+8>>2],e=e?L(e):\"\";var c=on(),a=sn(12),o=0;if(e){o=X(e)+1;var u=Ut(o);V(e,u,o),o=u}return r()[a>>2]=o,r()[a+4>>2]=t,r()[a+8>>2]=n,Qt(0,i,657457152,0,o,a),un(c),1}return-4}return i.Gc&&(i=i.Gc),e=!1,i.rc&&i.rc.qc&&(e=0===(e=i.rc.qc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.rc.qc.viewport(0,0,t,n),0}function Qe(e,t,n){return A?Le(17,1,e,t,n):Je(e,t,n)}var Ze=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=[\"nearest-neighbor\",\"linear\"],rt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),it=[\"forward\",\"backward\",\"both\"],ct=[\"zrn\",\"rzn\"];function at(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function ot(e,t=\"float32\"){const c=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],F(\"float32\"===t),new Float32Array(n().buffer,c,e/Float32Array.BYTES_PER_ELEMENT)}function ut(e){return{minValue:c()[e>>2],maxValue:c()[e+4>>2]}}function st(e){return{alpha:c()[e>>2]}}function ft(e){return{type:rt[i()[e>>2]],dimensions:at(i()[e+8>>2],r()[e+4>>2])}}function lt(e){return{windowDimensions:at(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?at(i()[e+8>>2],r()[e+12>>2]):void 0,strides:at(i()[e+16>>2],r()[e+20>>2]),dilations:at(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var dt,pt,ht,mt,gt,_t,bt,yt,vt,wt,At,Tt={};function Ot(){if(!At){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in Tt)void 0===Tt[e]?delete t[e]:t[e]=Tt[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);At=n}return At}function xt(e,n){if(A)return Le(18,1,e,n);var i=0;return Ot().forEach((function(c,a){var o=n+i;for(a=r()[e+4*a>>2]=o,o=0;o<c.length;++o)t()[a++>>0]=c.charCodeAt(o);t()[a>>0]=0,i+=c.length+1})),0}function Et(e,t){if(A)return Le(19,1,e,t);var n=Ot();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function kt(e){return A?Le(20,1,e):0}function Mt(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function St(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=Se.Ad(e),t=Se.zd(e,t,n),r()[i>>2]=t,0)}function Dt(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function Ct(e,t,i,c){if(A)return Le(24,1,e,t,i,c);for(var a=0,o=0;o<i;o++){for(var u=r()[t+8*o>>2],s=r()[t+(8*o+4)>>2],f=0;f<s;f++)Me(e,n()[u+f]);a+=s}return r()[c>>2]=a,0}function Rt(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!Rt.Nc){Rt.Nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var c=i.getTimezoneOffset(),a=Math.max(t,c);r()[an()>>2]=60*a,r()[cn()>>2]=Number(t!=c),n=e(n),i=e(i),n=J(n),i=J(i),c<t?(r()[rn()>>2]=n,r()[rn()+4>>2]=i):(r()[rn()>>2]=i,r()[rn()+4>>2]=n)}}function jt(e){return 0==e%4&&(0!=e%100||0==e%400)}function It(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ft=[31,29,31,30,31,30,31,31,30,31,30,31],Pt=[31,28,31,30,31,30,31,31,30,31,30,31];function Wt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(jt(e.getFullYear())?Ft:Pt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Yt(e,n,i,c){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\"0\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Wt(new Date(e.ac+1900,0,1),e.xc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=u(n,e)?0>=u(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[c+40>>2];for(var d in c={pd:r()[c>>2],od:r()[c+4>>2],vc:r()[c+8>>2],pc:r()[c+12>>2],kc:r()[c+16>>2],ac:r()[c+20>>2],wc:r()[c+24>>2],xc:r()[c+28>>2],Jd:r()[c+32>>2],nd:r()[c+36>>2],qd:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),h=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.wc].substring(0,3)},\"%A\":function(e){return p[e.wc]},\"%b\":function(e){return h[e.kc].substring(0,3)},\"%B\":function(e){return h[e.kc]},\"%C\":function(e){return o((e.ac+1900)/100|0,2)},\"%d\":function(e){return o(e.pc,2)},\"%e\":function(e){return a(e.pc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return o(e.vc,2)},\"%I\":function(e){return 0==(e=e.vc)?e=12:12<e&&(e-=12),o(e,2)},\"%j\":function(e){return o(e.pc+It(jt(e.ac+1900)?Ft:Pt,e.kc-1),3)},\"%m\":function(e){return o(e.kc+1,2)},\"%M\":function(e){return o(e.od,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.vc&&12>e.vc?\"AM\":\"PM\"},\"%S\":function(e){return o(e.pd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.wc||7},\"%U\":function(e){var t=new Date(e.ac+1900,0,1),n=0===t.getDay()?t:Wt(t,7-t.getDay());return 0>u(n,e=new Date(e.ac+1900,e.kc,e.pc))?o(Math.ceil((31-n.getDate()+(It(jt(e.getFullYear())?Ft:Pt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.ac+1901,0,4),n=s(new Date(e.ac+1900,0,4));t=s(t);var r=Wt(new Date(e.ac+1900,0,1),e.xc);return 0>u(r,n)?\"53\":0>=u(t,r)?\"01\":o(Math.ceil((n.getFullYear()<e.ac+1900?e.xc+32-n.getDate():e.xc+1-n.getDate())/7),2)},\"%w\":function(e){return e.wc},\"%W\":function(e){var t=new Date(e.ac,0,1),n=1===t.getDay()?t:Wt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>u(n,e=new Date(e.ac+1900,e.kc,e.pc))?o(Math.ceil((31-n.getDate()+(It(jt(e.getFullYear())?Ft:Pt,e.getMonth()-1)-31)+e.getDate())/7),2):0===u(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.ac+1900).toString().substring(2)},\"%Y\":function(e){return e.ac+1900},\"%z\":function(e){var t=0<=(e=e.nd);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.qd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](c)));return(d=function(e){var t=Array(X(e)+1);return $(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}dt||(dt=dt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},pt=pt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},ht=ht||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},mt=mt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},gt=gt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},_t=_t||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},bt=bt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},yt=yt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},vt=vt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},wt=wt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}});var qt=[null,we,De,Ce,Re,je,Ie,Fe,Pe,We,Ye,qe,Be,Ue,ze,Ge,He,Qe,xt,Et,kt,Mt,St,Dt,Ct,Rt],Bt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},cb:function(e,t){return ve(e,t)},b:function(e){return Ut(e+16)+16},d:function(e,t){return we(e,t)},e:function(e,t){ye.Bc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Sc(t,n),e},J:function(e,t,n,c){if(\"undefined\"==typeof SharedArrayBuffer)return S(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return S(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Vt(687865856,e,t,n,c);var o=0,u=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,o=r()[t+8>>2],u=0!==r()[t+12>>2]}else s=2097152;(t=0==o)?o=ln(16,s):F(0<(o-=s));for(var f=Ut(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={hc:o,jc:s,yc:t,detached:u,kd:n,tc:f,ic:c,rd:a},A?(n.td=\"spawnThread\",postMessage(n,a),0):Te(n)},H:function(e){throw A?ye.Kc(e):(ye.Hc(),gn(e)),\"unwind\"},I:function(e,t){return function(e,t){if(!e)return S(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Ht()==e)return S(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&$t()==e)return S(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return S(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return S(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(xe();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):_e(e),0;Zt(),A||Xt(),Oe(e+0,n,A?100:1)}}(e,t)},A:De,y:Ce,D:Re,z:je,s:function(){return 42},_a:Ie,B:Fe,E:Pe,G:We,F:Ye,q:qe,fb:Be,db:Ue,t:ze,eb:Ge,Q:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.cc[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:He,w:ve,Va:function(e,t){return e-t},S:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},N:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},R:function(e,t,i){var c;for(Ne.length=0,i>>=2;c=n()[t++];)(c=105>c)&&1&i&&i++,Ne.push(c?a()[i++>>1]:r()[i]),++i;return he[e].apply(null,Ne)},Za:xe,n:function(){},k:Oe,j:ge,C:function(){return 2147483648},i:be,Xa:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return w?require(\"os\").cpus().length:navigator.hardwareConcurrency},M:function(e,t,n){$e.length=t,n>>=3;for(var r=0;r<t;r++)$e[r]=a()[n+r];return(0>e?he[-e-1]:qt[e]).apply(null,$e)},Ya:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{C.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),Q(C.buffer);var c=1;break e}catch(e){}c=void 0}if(c)return!0}return!1},O:function(e,t,n){return Xe(e)?Je(e,t,n):Qe(e,t,n)},v:function(){},L:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!I){try{e()}catch(e){if(e instanceof hn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&S(\"exception thrown: \"+[e,e.stack]),e}if(!ce())try{A?Kt(j):gn(j)}catch(e){if(!(e instanceof hn))throw e}}}((function(){K.get(e)(n)}))}),t)},P:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Ze[n],failIfMajorPerformanceCaveat:!!r()[t+7],Yc:r()[t+8],Dd:r()[t+9],Ec:r()[t+10],Pc:r()[t+11],Gd:r()[t+12],Hd:r()[t+13]},!(e=Xe(e))||t.Pc?0:function(e,t){e.Fc||(e.Fc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.Fc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ut(8);r()[n+4>>2]=Ht();var i={Bd:n,attributes:t,version:t.Yc,qc:e};return e.canvas&&(e.canvas.rc=i),(void 0===t.Ec||t.Ec)&&function(e){if(e||(e=void 0),!e.Tc){e.Tc=!0;var t=e.qc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,c){t.drawElementsInstancedANGLE(e,n,r,i,c)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.vd=t.getExtension(\"EXT_disjoint_timer_query\"),t.Ed=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),dt.create(navigator.ml.createContext(t))},ab:xt,bb:Et,l:kt,$a:Mt,r:St,Wa:Dt,p:Ct,wa:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},gb:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.Dc||(e.Dc=J(\"GMT\")),r()[n+40>>2]=e.Dc,n},K:function(){ye.Uc()},u:function(e,t){Rt(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[rn()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:C||o.wasmMemory,x:function(e){Rt();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),c=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=c.getTimezoneOffset(),u=Math.min(o,a);return 0>n?r()[e+32>>2]=Number(a!=o&&u==i):0<n!=(u==i)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-c.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){dt.nc(e)},Ra:function(e){dt.release(e)},Na:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=bt.get(n),n=e.add(t,n),bt.create(n)},Ma:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=lt(n),n=e.averagePool2d(t,n),bt.create(n)},La:function(e,t,n,i,a){return e=ht.get(e),t=bt.get(t),n=bt.get(n),i=bt.get(i),a={scale:bt.get(r()[a>>2]),bias:bt.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:c()[a+12>>2],activation:vt.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),bt.create(a)},Ka:function(e,t){e=ht.get(e),t=_t.get(t);try{var n=e.build(t);return pt.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ja:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=ut(n),n=e.clamp(t,n),bt.create(n)},Ia:function(e,t){return e=ht.get(e),t=ut(t),t=e.clamp(t),vt.create(t)},Ha:function(e,t,n,r){e=ht.get(e),t=at(t,n),n=[];for(var i=0;i<t.length;++i)n.push(bt.get(t[i]));return r=e.concat(n,r),bt.create(r)},Ga:function(e,t,n){return e=ht.get(e),n=ot(n,(t=ft(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),bt.create(n)},Fa:function(e,t,n,c){return e=ht.get(e),t=bt.get(t),n=bt.get(n),c={padding:\"explicit\"===Ke[r()[c+40>>2]]?at(i()[c>>2],r()[c+4>>2]):void 0,strides:at(i()[c+8>>2],r()[c+12>>2]),dilations:at(i()[c+16>>2],r()[c+20>>2]),autoPad:Ke[r()[c+40>>2]],groups:r()[c+48>>2],inputLayout:tt[r()[c+52>>2]],filterLayout:et[r()[c+56>>2]],bias:bt.get(r()[c+60>>2]),activation:vt.get(r()[c+64>>2])},c=e.conv2d(t,n,c),bt.create(c)},Ea:function(e,n,i,a){return e=ht.get(e),n=bt.get(n),i=bt.get(i),a={c:bt.get(r()[a>>2]),alpha:c()[a+4>>2],beta:c()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),bt.create(a)},Da:function(e,n,i,c,a,o,u){return e=ht.get(e),n=bt.get(n),i=bt.get(i),c=bt.get(c),u={bias:bt.get(r()[u>>2]),recurrentBias:bt.get(r()[u+4>>2]),initialHiddenState:bt.get(r()[u+8>>2]),resetAfter:0!==t()[u+12>>0],returnSequence:0!==t()[u+13>>0],direction:it[r()[u+16>>2]],layout:ct[r()[u+20>>2]],activations:wt.get(r()[u+24>>2])},a=e.gru(n,i,c,a,o,u),yt.create(a)},Ca:function(e,t,n){return e=ht.get(e),t=L(t),n=ft(n),n=e.input(t,n),bt.create(n)},Ba:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=st(n),n=e.leakyRelu(t,n),bt.create(n)},Aa:function(e,t){return e=ht.get(e),t=st(t),t=e.leakyRelu(t),vt.create(t)},za:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=bt.get(n),n=e.matmul(t,n),bt.create(n)},ya:function(e,t,n){return e=ht.get(e),t=bt.get(t),n=lt(n),n=e.maxPool2d(t,n),bt.create(n)},ma:function(e){ht.release(e)},xa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.relu(t),bt.create(t)},va:function(e){return e=ht.get(e).relu(),vt.create(e)},ua:function(e,t,n){e=ht.get(e),t=bt.get(t);var a=nt[r()[n>>2]],o=i()[n+4>>2],u=r()[n+8>>2];if(0!==o&&0!==u){for(var s=[],f=0;f<o;++f,u+=4)s.push(c()[u>>2]);o=s}else o=void 0;return n={mode:a,scales:o,sizes:at(i()[n+12>>2],r()[n+16>>2]),axes:at(i()[n+20>>2],r()[n+24>>2])},n=e.resample2d(t,n),bt.create(n)},ta:function(e,t,n,r){return e=ht.get(e),t=bt.get(t),n=at(r,n),n=e.reshape(t,n),bt.create(n)},sa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.sigmoid(t),bt.create(t)},ra:function(e){return e=ht.get(e).sigmoid(),vt.create(e)},qa:function(e,t,n,c,a){if(e=ht.get(e),t=bt.get(t),0!==c&&0!==n){for(var o=[],u=0;u<c;++u,n+=4)o.push(i()[n>>2]);n=o}else n=void 0;return 1==c&&(n=n[0]),c={axis:r()[a>>2]},c=e.split(t,n,c),yt.create(c)},pa:function(e,t){return e=ht.get(e),t=bt.get(t),t=e.tanh(t),bt.create(t)},oa:function(e){return e=ht.get(e).tanh(),vt.create(e)},na:function(e,t,n){return e=ht.get(e),t=bt.get(t),n={permutation:at(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),bt.create(n)},Qa:function(e,t,n){return e=pt.get(e),t=mt.get(t),n=gt.get(n),e.compute(t,n)},Pa:function(e){pt.nc(e)},Oa:function(e){pt.release(e)},ka:function(e){mt.release(e)},la:function(e,t,n){e=mt.get(e),t=L(t),n=0===r()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:at(i()[n+16>>2],r()[n+12>>2])},e[t]=n},ia:function(e){_t.release(e)},ja:function(e,t,n){e=_t.get(e),t=L(t),n=bt.get(n),e[t]=n},ga:function(e){gt.release(e)},ha:function(e,t,n){e=gt.get(e),t=L(t),n=ot(n),e[t]=n},da:function(e,t){return e=yt.get(e)[t],bt.create(e)},ca:function(e){yt.release(e)},fa:function(e){bt.nc(e)},ea:function(e){bt.release(e)},Z:function(e){wt.nc(e)},Y:function(e){wt.release(e)},_:function(e,t){e=wt.get(e),t=vt.get(t),e.push(t)},aa:function(e){vt.nc(e)},$:function(e){vt.release(e)},Ua:Yt,g:function(e,t,n,r){return Yt(e,t,n,r)},X:function(e){return e=dt.get(e),e=new MLGraphBuilder(e),ht.create(e)},W:function(){return mt.create({})},V:function(){return _t.create({})},U:function(){return gt.create({})},T:function(){return wt.create([])}};!function(){function e(e,t){o.asm=e.exports,K=o.asm.Cb,te.unshift(o.asm.hb),ye.Cc.push(o.asm.Hb),R=t,A||(ue--,o.monitorRunDependencies&&o.monitorRunDependencies(ue),0==ue&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!k&&(y||v)){if(\"function\"==typeof fetch&&!oe.startsWith(\"file://\"))return fetch(oe,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+oe+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(m)return new Promise((function(e,t){m(oe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){S(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Bt};if(A||(ue++,o.monitorRunDependencies&&o.monitorRunDependencies(ue)),o.instantiateWasm)try{return o.instantiateWasm(r,e)}catch(e){return S(\"Module.instantiateWasm callback failed with error: \"+e),!1}(k||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||oe.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(oe,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return S(\"wasm streaming compile failed: \"+e),S(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.hb).apply(null,arguments)},o._OrtInit=function(){return(o._OrtInit=o.asm.ib).apply(null,arguments)},o._OrtCreateSessionOptions=function(){return(o._OrtCreateSessionOptions=o.asm.jb).apply(null,arguments)},o._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(o._OrtSessionOptionsAppendExecutionProviderWebNN=o.asm.kb).apply(null,arguments)},o._OrtAddSessionConfigEntry=function(){return(o._OrtAddSessionConfigEntry=o.asm.lb).apply(null,arguments)},o._OrtReleaseSessionOptions=function(){return(o._OrtReleaseSessionOptions=o.asm.mb).apply(null,arguments)},o._OrtCreateSession=function(){return(o._OrtCreateSession=o.asm.nb).apply(null,arguments)},o._OrtReleaseSession=function(){return(o._OrtReleaseSession=o.asm.ob).apply(null,arguments)},o._OrtGetInputCount=function(){return(o._OrtGetInputCount=o.asm.pb).apply(null,arguments)},o._OrtGetOutputCount=function(){return(o._OrtGetOutputCount=o.asm.qb).apply(null,arguments)},o._OrtGetInputName=function(){return(o._OrtGetInputName=o.asm.rb).apply(null,arguments)},o._OrtGetOutputName=function(){return(o._OrtGetOutputName=o.asm.sb).apply(null,arguments)},o._OrtFree=function(){return(o._OrtFree=o.asm.tb).apply(null,arguments)},o._OrtCreateTensor=function(){return(o._OrtCreateTensor=o.asm.ub).apply(null,arguments)},o._OrtGetTensorData=function(){return(o._OrtGetTensorData=o.asm.vb).apply(null,arguments)},o._OrtReleaseTensor=function(){return(o._OrtReleaseTensor=o.asm.wb).apply(null,arguments)},o._OrtCreateRunOptions=function(){return(o._OrtCreateRunOptions=o.asm.xb).apply(null,arguments)},o._OrtAddRunConfigEntry=function(){return(o._OrtAddRunConfigEntry=o.asm.yb).apply(null,arguments)},o._OrtReleaseRunOptions=function(){return(o._OrtReleaseRunOptions=o.asm.zb).apply(null,arguments)},o._OrtRun=function(){return(o._OrtRun=o.asm.Ab).apply(null,arguments)},o._OrtEndProfiling=function(){return(o._OrtEndProfiling=o.asm.Bb).apply(null,arguments)};var Ut=o._malloc=function(){return(Ut=o._malloc=o.asm.Db).apply(null,arguments)},zt=o.___errno_location=function(){return(zt=o.___errno_location=o.asm.Eb).apply(null,arguments)},Gt=o._free=function(){return(Gt=o._free=o.asm.Fb).apply(null,arguments)},Ht=o._pthread_self=function(){return(Ht=o._pthread_self=o.asm.Gb).apply(null,arguments)};o._emscripten_tls_init=function(){return(o._emscripten_tls_init=o.asm.Hb).apply(null,arguments)},o._emscripten_current_thread_process_queued_calls=function(){return(o._emscripten_current_thread_process_queued_calls=o.asm.Ib).apply(null,arguments)};var Nt,Lt=o._emscripten_register_main_browser_thread_id=function(){return(Lt=o._emscripten_register_main_browser_thread_id=o.asm.Jb).apply(null,arguments)},$t=o._emscripten_main_browser_thread_id=function(){return($t=o._emscripten_main_browser_thread_id=o.asm.Kb).apply(null,arguments)},Vt=o._emscripten_sync_run_in_main_thread_4=function(){return(Vt=o._emscripten_sync_run_in_main_thread_4=o.asm.Lb).apply(null,arguments)},Xt=o._emscripten_main_thread_process_queued_calls=function(){return(Xt=o._emscripten_main_thread_process_queued_calls=o.asm.Mb).apply(null,arguments)},Jt=o._emscripten_run_in_main_runtime_thread_js=function(){return(Jt=o._emscripten_run_in_main_runtime_thread_js=o.asm.Nb).apply(null,arguments)},Qt=o.__emscripten_call_on_thread=function(){return(Qt=o.__emscripten_call_on_thread=o.asm.Ob).apply(null,arguments)},Zt=o._pthread_testcancel=function(){return(Zt=o._pthread_testcancel=o.asm.Pb).apply(null,arguments)},Kt=o._pthread_exit=function(){return(Kt=o._pthread_exit=o.asm.Qb).apply(null,arguments)},en=o.__emscripten_thread_init=function(){return(en=o.__emscripten_thread_init=o.asm.Rb).apply(null,arguments)},tn=o._emscripten_get_global_libc=function(){return(tn=o._emscripten_get_global_libc=o.asm.Sb).apply(null,arguments)},nn=o.___pthread_tsd_run_dtors=function(){return(nn=o.___pthread_tsd_run_dtors=o.asm.Tb).apply(null,arguments)},rn=o.__get_tzname=function(){return(rn=o.__get_tzname=o.asm.Ub).apply(null,arguments)},cn=o.__get_daylight=function(){return(cn=o.__get_daylight=o.asm.Vb).apply(null,arguments)},an=o.__get_timezone=function(){return(an=o.__get_timezone=o.asm.Wb).apply(null,arguments)},on=o.stackSave=function(){return(on=o.stackSave=o.asm.Xb).apply(null,arguments)},un=o.stackRestore=function(){return(un=o.stackRestore=o.asm.Yb).apply(null,arguments)},sn=o.stackAlloc=function(){return(sn=o.stackAlloc=o.asm.Zb).apply(null,arguments)},fn=o._emscripten_stack_set_limits=function(){return(fn=o._emscripten_stack_set_limits=o.asm._b).apply(null,arguments)},ln=o._memalign=function(){return(ln=o._memalign=o.asm.$b).apply(null,arguments)},dn=o.__emscripten_allow_main_runtime_queued_calls=999792,pn=o.__emscripten_main_thread_futex=1003796;function hn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function mn(){function e(){if(!Nt&&(Nt=!0,o.calledRun=!0,!I)&&(A||me(te),u(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),!A)){if(o.postRun)for(\"function\"==typeof o.postRun&&(o.postRun=[o.postRun]);o.postRun.length;){var e=o.postRun.shift();re.unshift(e)}me(re)}}if(!(0<ue))if(A)u(o),A||me(te),postMessage({cmd:\"loaded\"});else{if(!A){if(o.preRun)for(\"function\"==typeof o.preRun&&(o.preRun=[o.preRun]);o.preRun.length;)ae();me(ee)}0<ue||(o.setStatus?(o.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){o.setStatus(\"\")}),1),e()}),1)):e())}}function gn(e){if(j=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new hn(e);ce()||(ye.Jc(),A||(me(ne),\"undefined\"!=typeof _fflush&&_fflush(0),ke[1].length&&Me(1,10),ke[2].length&&Me(2,10))),j=e,ce()||(ye.Jc(),o.onExit&&o.onExit(e),I=!0),p(e,new hn(e))}if(o.UTF8ToString=L,o.stringToUTF8=V,o.lengthBytesUTF8=X,o.keepRuntimeAlive=ce,o.PThread=ye,o.stackSave=on,o.stackRestore=un,o.stackAlloc=sn,o.PThread=ye,o.wasmMemory=C,o.ExitStatus=hn,fe=function e(){Nt||mn(),Nt||(fe=e)},o.run=mn,o.preInit)for(\"function\"==typeof o.preInit&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return A&&(D=!1,ye.Vc()),mn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},m;for(m in d)d.hasOwnProperty(m)&&(g[m]=d[m]);var ca=\"./this.program\",da=\"object\"===typeof window,n=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,q=\"\",fa,u,ha,w,x;\nif(ea)q=n?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",fa=function(a,b){w||(w=require(\"fs\"));x||(x=require(\"path\"));a=x.normalize(a);return w.readFileSync(a,b?null:\"utf8\")},ha=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||y(\"Assertion failed: undefined\");return a},u=function(a,b,c){w||(w=require(\"fs\"));x||(x=require(\"path\"));a=x.normalize(a);w.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",y),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||n)n?q=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.lastIndexOf(\"/\")+1):q=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},n&&(ha=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\n\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),u=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ia=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);for(m in g)g.hasOwnProperty(m)&&(d[m]=g[m]);g=null;d.thisProgram&&(ca=d.thisProgram);var A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&y(\"no native wasm support detected\");var ja,ka=!1,la=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ma(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&la)return la.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var l=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|l:(h&7)<<18|k<<12|l<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function C(a,b){return a?ma(D,a,b):\"\"}\nfunction na(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var t=a.charCodeAt(++k);l=65536+((l&1023)<<10)|t&1023}if(127>=l){if(c>=e)break;b[c++]=l}else{if(2047>=l){if(c+1>=e)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=e)break;b[c++]=224|l>>12}else{if(c+3>=e)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-h}\nfunction oa(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function pa(a){var b=oa(a)+1,c=qa(b);c&&na(a,E,c,b);return c}var ra,E,D,F,G,H;\nfunction sa(){var a=ja.buffer;ra=a;d.HEAP8=E=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=F=new Int32Array(a);d.HEAPU8=D=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=G=new Uint32Array(a);d.HEAPF32=H=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ta,ua=[],va=[],wa=[],xa=[];function ya(){var a=d.preRun.shift();ua.unshift(a)}var I=0,za=null,K=null;d.preloadedImages={};d.preloadedAudios={};\nfunction y(a){if(d.onAbort)d.onAbort(a);z(a);ka=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Aa(){return L.startsWith(\"data:application/octet-stream;base64,\")}var L;L=\"ort-wasm.wasm\";if(!Aa()){var Ba=L;L=d.locateFile?d.locateFile(Ba,q):q+Ba}function Ca(){var a=L;try{if(a==L&&A)return new Uint8Array(A);if(ha)return ha(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){y(b)}}\nfunction Da(){if(!A&&(da||n)){if(\"function\"===typeof fetch&&!L.startsWith(\"file://\"))return fetch(L,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+L+\"'\";return a.arrayBuffer()}).catch(function(){return Ca()});if(u)return new Promise(function(a,b){u(L,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ca()})}\nfunction Ea(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.Hb;\"number\"===typeof c?void 0===b.xb?ta.get(c)():ta.get(c)(b.xb):c(void 0===b.xb?null:b.xb)}}}function Fa(a){this.zb=a-16;this.Rb=function(b){F[this.zb+4>>2]=b};this.Ob=function(b){F[this.zb+8>>2]=b};this.Pb=function(){F[this.zb>>2]=0};this.Nb=function(){E[this.zb+12>>0]=0};this.Qb=function(){E[this.zb+13>>0]=0};this.Jb=function(b,c){this.Rb(b);this.Ob(c);this.Pb();this.Nb();this.Qb()}}\nvar Ga=0,Ha={},Ia=[null,[],[]],M={},Ja;Ja=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ka=[\"explicit\",\"same-upper\",\"same-lower\"],La=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ma=[\"nchw\",\"nhwc\"],Na=[\"nearest-neighbor\",\"linear\"],Oa=\"float32 float16 int32 uint32 int8 uint8\".split(\" \"),Pa=[\"forward\",\"backward\",\"both\"],Qa=[\"zrn\",\"rzn\"];function N(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(F[b>>2]);return c}}\nfunction Ra(a,b=\"float32\"){const c=F[a>>2]+G[a+8>>2];a=G[a+4>>2];\"float32\"===b||y(\"Assertion failed: undefined\");return new Float32Array(D.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Sa(a){return{minValue:H[a>>2],maxValue:H[a+4>>2]}}function Ta(a){return{type:Oa[G[a>>2]],dimensions:N(G[a+8>>2],F[a+4>>2])}}\nfunction Ua(a){return{windowDimensions:N(G[a>>2],F[a+4>>2]),padding:\"explicit\"===Ka[F[a+32>>2]]?N(G[a+8>>2],F[a+12>>2]):void 0,strides:N(G[a+16>>2],F[a+20>>2]),dilations:N(G[a+24>>2],F[a+28>>2]),autoPad:Ka[F[a+32>>2]],layout:Ma[F[a+36>>2]]}}var O,P,Q,R,S,U,V,W,X,Y,Va={};\nfunction Wa(){if(!Xa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Va)void 0===Va[b]?delete a[b]:a[b]=Va[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Xa=c}return Xa}var Xa;\nfunction Ya(a,b){a=new Date(1E3*F[a>>2]);F[b>>2]=a.getUTCSeconds();F[b+4>>2]=a.getUTCMinutes();F[b+8>>2]=a.getUTCHours();F[b+12>>2]=a.getUTCDate();F[b+16>>2]=a.getUTCMonth();F[b+20>>2]=a.getUTCFullYear()-1900;F[b+24>>2]=a.getUTCDay();F[b+36>>2]=0;F[b+32>>2]=0;F[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Ya.Gb||(Ya.Gb=pa(\"GMT\"));F[b+40>>2]=Ya.Gb;return b}\nfunction Za(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!cb){cb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);F[db()>>2]=60*k;F[eb()>>2]=Number(b!=h);c=a(c);e=a(e);c=pa(c);e=pa(e);h<b?(F[Z()>>2]=c,F[Z()+4>>2]=e):(F[Z()>>2]=e,F[Z()+4>>2]=c)}}var cb;function fb(a){return 0===a%4&&(0!==a%100||0===a%400)}function gb(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar hb=[31,29,31,30,31,30,31,31,30,31,30,31],ib=[31,28,31,30,31,30,31,31,30,31,30,31];function jb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=(fb(a.getFullYear())?hb:ib)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction kb(a,b,c,e){function h(f,p,r){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<p;)f=r[0]+f;return f}function k(f,p){return h(f,p,\"0\")}function l(f,p){function r($a){return 0>$a?-1:0<$a?1:0}var J;0===(J=r(f.getFullYear()-p.getFullYear()))&&0===(J=r(f.getMonth()-p.getMonth()))&&(J=r(f.getDate()-p.getDate()));return J}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function T(f){f=jb(new Date(f.vb+1900,0,1),f.Eb);var p=new Date(f.getFullYear()+1,0,4),r=t(new Date(f.getFullYear(),0,4));p=t(p);return 0>=l(r,f)?0>=l(p,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var B=F[e+40>>2];e={Ub:F[e>>2],Tb:F[e+4>>2],Cb:F[e+8>>2],Bb:F[e+12>>2],wb:F[e+16>>2],vb:F[e+20>>2],Db:F[e+24>>2],Eb:F[e+28>>2],bc:F[e+32>>2],Sb:F[e+\n36>>2],Vb:B?C(B):\"\"};c=C(c);B={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var v in B)c=c.replace(new RegExp(v,\"g\"),B[v]);var ab=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nbb=\"January February March April May June July August September October November December\".split(\" \");B={\"%a\":function(f){return ab[f.Db].substring(0,3)},\"%A\":function(f){return ab[f.Db]},\"%b\":function(f){return bb[f.wb].substring(0,3)},\"%B\":function(f){return bb[f.wb]},\"%C\":function(f){return k((f.vb+1900)/100|0,2)},\"%d\":function(f){return k(f.Bb,2)},\"%e\":function(f){return h(f.Bb,2,\" \")},\"%g\":function(f){return T(f).toString().substring(2)},\"%G\":function(f){return T(f)},\"%H\":function(f){return k(f.Cb,\n2)},\"%I\":function(f){f=f.Cb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.Bb+gb(fb(f.vb+1900)?hb:ib,f.wb-1),3)},\"%m\":function(f){return k(f.wb+1,2)},\"%M\":function(f){return k(f.Tb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.Cb&&12>f.Cb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Ub,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.Db||7},\"%U\":function(f){var p=new Date(f.vb+1900,0,1),r=0===p.getDay()?p:jb(p,7-p.getDay());f=new Date(f.vb+1900,f.wb,f.Bb);return 0>\nl(r,f)?k(Math.ceil((31-r.getDate()+(gb(fb(f.getFullYear())?hb:ib,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(r,p)?\"01\":\"00\"},\"%V\":function(f){var p=new Date(f.vb+1901,0,4),r=t(new Date(f.vb+1900,0,4));p=t(p);var J=jb(new Date(f.vb+1900,0,1),f.Eb);return 0>l(J,r)?\"53\":0>=l(p,J)?\"01\":k(Math.ceil((r.getFullYear()<f.vb+1900?f.Eb+32-r.getDate():f.Eb+1-r.getDate())/7),2)},\"%w\":function(f){return f.Db},\"%W\":function(f){var p=new Date(f.vb,0,1),r=1===p.getDay()?p:jb(p,0===p.getDay()?1:7-p.getDay()+1);f=\nnew Date(f.vb+1900,f.wb,f.Bb);return 0>l(r,f)?k(Math.ceil((31-r.getDate()+(gb(fb(f.getFullYear())?hb:ib,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(r,p)?\"01\":\"00\"},\"%y\":function(f){return(f.vb+1900).toString().substring(2)},\"%Y\":function(f){return f.vb+1900},\"%z\":function(f){f=f.Sb;var p=0<=f;f=Math.abs(f)/60;return(p?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Vb},\"%%\":function(){return\"%\"}};for(v in B)c.includes(v)&&(c=c.replace(new RegExp(v,\"g\"),B[v](e)));v=lb(c);\nif(v.length>b)return 0;E.set(v,a);return v.length-1}(function(){function a(){return{yb:{},Mb:1,create:function(b,c){c=c||{};var e=this.Mb++;c.Fb=1;c.object=b;this.yb[e]=c;return e},get:function(b){if(0!==b)return this.yb[b].object},Ab:function(b){this.yb[b].Fb++},release:function(b){var c=this.yb[b];c.Fb--;0>=c.Fb&&delete this.yb[b]}}}O||(O=O||a(),P=P||a(),Q=Q||a(),R=R||a(),S=S||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function lb(a){var b=Array(oa(a)+1);na(a,b,0,b.length);return b}\nvar pb={a:function(a){return qa(a+16)+16},c:function(a,b){wa.unshift({Hb:a,xb:b})},f:function(a,b){wa.unshift({Hb:a,xb:b})},b:function(a,b,c){(new Fa(a)).Jb(b,c);Ga++;throw a;},Q:function(a,b){a=C(a);return M.Wb(a,b)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(a,b){a=C(a);return M.Xb(a,b)},W:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var l=mb(65536,a);\nl?(D.fill(0,l,l+a),a=l):a=0;a?(Ha[a]={Lb:a,Kb:b,Ib:!0,fd:h,ac:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},V:function(a,b){var c=Ha[a];0!==b&&c?(b===c.Kb&&(Ha[a]=null,c.Ib&&nb(c.Lb)),a=0):a=-28;return a},n:function(){},O:function(a,b,c){a=C(a);return M.Yb(a,b,c)},M:function(){},u:function(){},N:function(){},k:function(){y()},B:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=Ja();else return F[ob()>>2]=28,-1;F[b>>2]=a/1E3|0;F[b+4>>2]=a%1E3*1E6|0;return 0},X:function(a,b){return a-\nb},Oa:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Pa:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Na:function(){y(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nS:function(){return 2147483648},G:function(a,b,c){D.copyWithin(a,b,b+c)},m:function(a){var b=D.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ja.grow(Math.min(2147483648,e)-ra.byteLength+65535>>>16);sa();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},L:function(a){for(var b=Ja();Ja()-b<a;);},La:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[G[a>>2]],powerPreference:e[G[a+4>>2]]});return O.create(navigator.ml.createContext(b))},J:function(a,b){var c=0;Wa().forEach(function(e,h){var k=b+c;h=F[a+4*h>>2]=k;for(k=0;k<e.length;++k)E[h++>>0]=e.charCodeAt(k);E[h>>0]=0;c+=e.length+1});return 0},K:function(a,b){var c=Wa();F[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});F[b>>2]=e;return 0},i:function(){return 0},I:function(a,b){a=1==a||2==a?2:\ny();E[b>>0]=a;return 0},r:function(a,b,c,e){a=M.$b(a);b=M.Zb(a,b,c);F[e>>2]=b;return 0},F:function(){},s:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var l=F[b+8*k>>2],t=F[b+(8*k+4)>>2],T=0;T<t;T++){var B=D[l+T],v=Ia[a];0===B||10===B?((1===a?ia:z)(ma(v,0)),v.length=0):v.push(B)}h+=t}F[e>>2]=h;return 0},ra:function(a){var b=Date.now();F[a>>2]=b/1E3|0;F[a+4>>2]=b%1E3*1E3|0;return 0},da:Ya,w:function(a,b){Za();a=new Date(1E3*F[a>>2]);F[b>>2]=a.getSeconds();F[b+4>>2]=a.getMinutes();F[b+8>>2]=a.getHours();\nF[b+12>>2]=a.getDate();F[b+16>>2]=a.getMonth();F[b+20>>2]=a.getFullYear()-1900;F[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);F[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;F[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;F[b+32>>2]=a;a=F[Z()+(a?4:0)>>2];F[b+40>>2]=a;return b},q:function(a){Za();var b=new Date(F[a+20>>2]+1900,F[a+16>>2],F[a+12>>2],F[a+8>>2],F[a+4>>2],F[a>>\n2],0),c=F[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),l=h.getTimezoneOffset(),t=Math.min(l,k);0>c?F[a+32>>2]=Number(k!=l&&t==e):0<c!=(t==e)&&(k=Math.max(l,k),b.setTime(b.getTime()+6E4*((0<c?t:k)-e)));F[a+24>>2]=b.getDay();F[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;F[a>>2]=b.getSeconds();F[a+4>>2]=b.getMinutes();F[a+8>>2]=b.getHours();F[a+12>>2]=b.getDate();F[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},E:function(a){O.Ab(a)},\nD:function(a){O.release(a)},Ia:function(a,b,c){a=Q.get(a);b=V.get(b);c=V.get(c);c=a.add(b,c);return V.create(c)},Ha:function(a,b,c){a=Q.get(a);b=V.get(b);c=Ua(c);c=a.averagePool2d(b,c);return V.create(c)},Ga:function(a,b,c,e,h){a=Q.get(a);b=V.get(b);c=V.get(c);e=V.get(e);h={scale:V.get(F[h>>2]),bias:V.get(F[h+4>>2]),axis:F[h+8>>2],epsilon:H[h+12>>2],activation:X.get(F[h+16>>2])};h=a.batchNormalization(b,c,e,h);return V.create(h)},Fa:function(a,b){a=Q.get(a);b=U.get(b);try{var c=a.build(b);return P.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},Ea:function(a,b,c){a=Q.get(a);b=V.get(b);c=a.clamp(b,Sa(c));return V.create(c)},Da:function(a,b){a=Q.get(a).clamp(Sa(b));return X.create(a)},Ca:function(a,b,c,e){a=Q.get(a);b=N(b,c);c=[];for(var h=0;h<b.length;++h)c.push(V.get(b[h]));e=a.concat(c,e);return V.create(e)},Ba:function(a,b,c){a=Q.get(a);b=Ta(b);c=Ra(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return V.create(c)},Aa:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=V.get(c);e={padding:\"explicit\"===Ka[F[e+40>>2]]?N(G[e>>\n2],F[e+4>>2]):void 0,strides:N(G[e+8>>2],F[e+12>>2]),dilations:N(G[e+16>>2],F[e+20>>2]),autoPad:Ka[F[e+40>>2]],groups:F[e+48>>2],inputLayout:Ma[F[e+52>>2]],filterLayout:La[F[e+56>>2]],bias:V.get(F[e+60>>2]),activation:X.get(F[e+64>>2])};e=a.conv2d(b,c,e);return V.create(e)},za:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=V.get(c);e={c:V.get(F[e>>2]),alpha:H[e+4>>2],beta:H[e+8>>2],aTranspose:0!==E[e+12>>0],bTranspose:0!==E[e+13>>0]};e=a.gemm(b,c,e);return V.create(e)},ya:function(a,b,c,e,h,k,l){a=Q.get(a);\nb=V.get(b);c=V.get(c);e=V.get(e);l={bias:V.get(F[l>>2]),recurrentBias:V.get(F[l+4>>2]),initialHiddenState:V.get(F[l+8>>2]),resetAfter:0!==E[l+12>>0],returnSequence:0!==E[l+13>>0],direction:Pa[F[l+16>>2]],layout:Qa[F[l+20>>2]],activations:Y.get(F[l+24>>2])};h=a.gru(b,c,e,h,k,l);return W.create(h)},xa:function(a,b,c){a=Q.get(a);b=C(b);c=Ta(c);c=a.input(b,c);return V.create(c)},wa:function(a,b,c){a=Q.get(a);b=V.get(b);c=a.leakyRelu(b,{alpha:H[c>>2]});return V.create(c)},va:function(a,b){a=Q.get(a).leakyRelu({alpha:H[b>>\n2]});return X.create(a)},ua:function(a,b,c){a=Q.get(a);b=V.get(b);c=V.get(c);c=a.matmul(b,c);return V.create(c)},ta:function(a,b,c){a=Q.get(a);b=V.get(b);c=Ua(c);c=a.maxPool2d(b,c);return V.create(c)},x:function(a){Q.release(a)},sa:function(a,b){a=Q.get(a);b=V.get(b);b=a.relu(b);return V.create(b)},A:function(a){a=Q.get(a).relu();return X.create(a)},qa:function(a,b,c){a=Q.get(a);b=V.get(b);var e=Na[F[c>>2]];var h=G[c+4>>2];var k=F[c+8>>2];if(0!==h&&0!==k){for(var l=[],t=0;t<h;++t,k+=4)l.push(H[k>>\n2]);h=l}else h=void 0;c={mode:e,scales:h,sizes:N(G[c+12>>2],F[c+16>>2]),axes:N(G[c+20>>2],F[c+24>>2])};c=a.resample2d(b,c);return V.create(c)},pa:function(a,b,c,e){a=Q.get(a);b=V.get(b);c=N(e,c);c=a.reshape(b,c);return V.create(c)},oa:function(a,b){a=Q.get(a);b=V.get(b);b=a.sigmoid(b);return V.create(b)},z:function(a){a=Q.get(a).sigmoid();return X.create(a)},na:function(a,b,c,e,h){a=Q.get(a);b=V.get(b);if(0!==e&&0!==c){for(var k=[],l=0;l<e;++l,c+=4)k.push(G[c>>2]);c=k}else c=void 0;1==e&&(c=c[0]);\ne=a.split(b,c,{axis:F[h>>2]});return W.create(e)},ma:function(a,b){a=Q.get(a);b=V.get(b);b=a.tanh(b);return V.create(b)},y:function(a){a=Q.get(a).tanh();return X.create(a)},la:function(a,b,c){a=Q.get(a);b=V.get(b);c={permutation:N(G[c>>2],F[c+4>>2])};c=a.transpose(b,c);return V.create(c)},Ka:function(a,b,c){a=P.get(a);b=R.get(b);c=S.get(c);return a.compute(b,c)},Ja:function(a){P.Ab(a)},C:function(a){P.release(a)},ja:function(a){R.release(a)},ka:function(a,b,c){a=R.get(a);b=C(b);c=0===F[c+12>>2]?Ra(c+\n0):{resource:Ra(c+0),dimensions:N(G[c+16>>2],F[c+12>>2])};a[b]=c},ha:function(a){U.release(a)},ia:function(a,b,c){a=U.get(a);b=C(b);c=V.get(c);a[b]=c},fa:function(a){S.release(a)},ga:function(a,b,c){a=S.get(a);b=C(b);c=Ra(c);a[b]=c},l:function(a,b){a=W.get(a)[b];return V.create(a)},v:function(a){W.release(a)},e:function(a){V.Ab(a)},d:function(a){V.release(a)},ba:function(a){Y.Ab(a)},o:function(a){Y.release(a)},ca:function(a,b){a=Y.get(a);b=X.get(b);a.push(b)},ea:function(a){X.Ab(a)},h:function(a){X.release(a)},\nMa:kb,g:function(a,b,c,e){return kb(a,b,c,e)},aa:function(a){a=O.get(a);a=new MLGraphBuilder(a);return Q.create(a)},$:function(){return R.create({})},_:function(){return U.create({})},Z:function(){return S.create({})},Y:function(){return Y.create([])}};\n(function(){function a(h){d.asm=h.exports;ja=d.asm.Qa;sa();ta=d.asm.ub;va.unshift(d.asm.Ra);I--;d.monitorRunDependencies&&d.monitorRunDependencies(I);0==I&&(null!==za&&(clearInterval(za),za=null),K&&(h=K,K=null,h()))}function b(h){a(h.instance)}function c(h){return Da().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){z(\"failed to asynchronously prepare wasm: \"+k);y(k)})}var e={a:pb};I++;d.monitorRunDependencies&&d.monitorRunDependencies(I);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return z(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return A||\"function\"!==typeof WebAssembly.instantiateStreaming||Aa()||L.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(L,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){z(\"wasm streaming compile failed: \"+k);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ra).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Sa).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ta).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Ua).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Va).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Wa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Xa).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Ya).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Za).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm._a).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.$a).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.ab).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.bb).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.cb).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.db).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.eb).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.fb).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.gb).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.hb).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.ib).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.jb).apply(null,arguments)};\nvar qa=d._malloc=function(){return(qa=d._malloc=d.asm.kb).apply(null,arguments)},ob=d.___errno_location=function(){return(ob=d.___errno_location=d.asm.lb).apply(null,arguments)},nb=d._free=function(){return(nb=d._free=d.asm.mb).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm.nb).apply(null,arguments)},eb=d.__get_daylight=function(){return(eb=d.__get_daylight=d.asm.ob).apply(null,arguments)},db=d.__get_timezone=function(){return(db=d.__get_timezone=d.asm.pb).apply(null,\narguments)},qb=d.stackSave=function(){return(qb=d.stackSave=d.asm.qb).apply(null,arguments)},rb=d.stackRestore=function(){return(rb=d.stackRestore=d.asm.rb).apply(null,arguments)},sb=d.stackAlloc=function(){return(sb=d.stackAlloc=d.asm.sb).apply(null,arguments)},mb=d._memalign=function(){return(mb=d._memalign=d.asm.tb).apply(null,arguments)};d.UTF8ToString=C;d.stringToUTF8=function(a,b,c){return na(a,D,b,c)};d.lengthBytesUTF8=oa;d.stackSave=qb;d.stackRestore=rb;d.stackAlloc=sb;var tb;\nK=function ub(){tb||vb();tb||(K=ub)};\nfunction vb(){function a(){if(!tb&&(tb=!0,d.calledRun=!0,!ka)){Ea(va);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();xa.unshift(b)}Ea(xa)}}if(!(0<I)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)ya();Ea(ua);0<I||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=vb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();vb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){function t(){return R.buffer!=L&&Z(R.buffer),W}function r(){return R.buffer!=L&&Z(R.buffer),H}function i(){return R.buffer!=L&&Z(R.buffer),z}function a(){return R.buffer!=L&&Z(R.buffer),Y}function o(){return R.buffer!=L&&Z(R.buffer),B}function u(){return R.buffer!=L&&Z(R.buffer),N}var c,s,f;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){s=e,f=t}));var l,d={};for(l in c)c.hasOwnProperty(l)&&(d[l]=c[l]);var p=\\\"./this.program\\\";function h(e,t){throw t}var g,m,b,y,v,_=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,A=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function S(e){return c.locateFile?c.locateFile(e,E):E+e}if(A){if(E=w?n(622).dirname(E)+\\\"/\\\":__dirname+\\\"/\\\",g=function(e,t){return y||(y=n(747)),v||(v=n(622)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},m=function(e,t,r){y||(y=n(747)),v||(v=n(622)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof gn))throw e})),process.on(\\\"unhandledRejection\\\",de),h=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===global.Worker){var T;try{T=n(13)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=T.Worker}}else(_||w)&&(w?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",A?(g=function(e,t){return y||(y=n(747)),v||(v=n(622)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},b=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},m=function(e,t,r){y||(y=n(747)),v||(v=n(622)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},w&&(b=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));A&&\\\"undefined\\\"==typeof performance&&(global.performance=n(630).performance);var M,x,k=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in d)d.hasOwnProperty(l)&&(c[l]=d[l]);d=null,c.thisProgram&&(p=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(x=c.wasmBinary);var F=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var R,P,C,j=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var L,W,H,z,Y,B,N,G=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function q(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?q(r(),e,t):\\\"\\\"}function $(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function X(e,t,n){return $(e,r(),t,n)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Q(e){var n=J(e)+1,r=Yt(n);return r&&$(e,t(),r,n),r}function Z(e){L=e,c.HEAP8=W=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=H=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=Y=new Uint32Array(e),c.HEAPF32=B=new Float32Array(e),c.HEAPF64=N=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),O&&(L=c.buffer);var K=c.INITIAL_MEMORY||16777216;if(O)R=c.wasmMemory,L=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),A&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(L=R.buffer),K=L.byteLength,Z(L);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return F||0<ae}function ue(){var e=c.preRun.shift();te.unshift(e)}var ce,se=0,fe=null,le=null;function de(e){throw c.onAbort&&c.onAbort(e),I(!O),D(e),j=!0,C=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),f(e),e}function pe(){return ce.startsWith(\\\"data:application/octet-stream;base64,\\\")}function he(){var e=ce;try{if(e==ce&&x)return new Uint8Array(x);if(b)return b(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}c.preloadedImages={},c.preloadedAudios={},ce=\\\"ort-wasm-threaded.wasm\\\",pe()||(ce=S(ce));var ge={1000244:function(){throw\\\"Canceled!\\\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.Qc;\\\"number\\\"==typeof n?void 0===t.ic?ee.get(n)():ee.get(n)(t.ic):n(void 0===t.ic?null:t.ic)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),hn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),hn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ye(e){if(O)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=_e.cc[e];t&&(i()[e+12>>2]=0,_e.uc(t.worker))}c._emscripten_futex_wake=be;var ve,_e={fc:[],ec:[],Cc:[],Cd:function(){},Uc:function(){for(var e=Yt(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Yt(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),tn(e,!w,1),Vt(e)},Vc:function(){_e.receiveObjectTransfer=_e.ad,_e.threadInit=_e.md,_e.threadCancel=_e.ld,_e.threadExit=_e.Kc,_e.setExitStatus=_e.cd},cc:{},Bc:[],Hc:function(){for(;0<_e.Bc.length;)_e.Bc.pop()();rn()},Ic:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),_e.Hc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),be(e+0,2147483647),tn(0,0,0)},cd:function(e){C=e},Kc:function(e){var t=Gt();t&&(_e.Ic(t,e),O&&postMessage({cmd:\\\"exit\\\"}))},ld:function(){_e.Ic(Gt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},Jc:function(){for(var e in _e.cc){var t=_e.cc[e];t&&t.worker&&_e.uc(t.worker)}for(_e.cc={},e=0;e<_e.fc.length;++e){var n=_e.fc[e];n.terminate()}for(_e.fc=[],e=0;e<_e.ec.length;++e)t=(n=_e.ec[e]).bc,_e.zc(t),n.terminate();_e.ec=[]},zc:function(e){if(e){if(e.dc){var t=i()[e.dc+100>>2];i()[e.dc+100>>2]=0,Nt(t),Nt(e.dc)}e.dc=0,e.yc&&e.hc&&Nt(e.hc),e.hc=0,e.worker&&(e.worker.bc=null)}},uc:function(e){_e.bd((function(){delete _e.cc[e.bc.dc],_e.fc.push(e),_e.ec.splice(_e.ec.indexOf(e),1),_e.zc(e.bc),e.bc=void 0}))},bd:function(e){i()[pn>>2]=0;try{e()}finally{i()[pn>>2]=1}},ad:function(){},md:function(){for(var e in _e.Cc)_e.Cc[e]()},Xc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.bc&&(_e.Oc=e.bc.dc),r.targetThread&&r.targetThread!=Gt()){var u=_e.cc[r.Id];u?u.worker.postMessage(n.data,r.transferList):D('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)Jt();else if(\\\"spawnThread\\\"===o)Ee(n.data);else if(\\\"cleanupThread\\\"===o)ye(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,O)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=_e.cc[n],delete _e.cc[n],r.worker.terminate(),_e.zc(r),_e.ec.splice(_e.ec.indexOf(r.worker),1),r.worker.bc=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,O)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";_e.cc[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.oc&&(e.oc(),delete e.oc);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)D(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.bc&&Atomics.load(a(),e.bc.dc+64>>2)&&_e.uc(e);else if(\\\"exitProcess\\\"===o)try{bn(r.returnCode)}catch(e){if(e instanceof gn)return;throw e}else\\\"cancelDone\\\"===o?_e.uc(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):D(\\\"worker sent an unknown command \\\"+o));_e.Oc=void 0},e.onerror=function(e){D(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},A&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:P})},Lc:function(){var e=S(\\\"ort-wasm-threaded.worker.js\\\");_e.fc.push(new Worker(e))},Rc:function(){return 0==_e.fc.length&&(_e.Lc(),_e.Xc(_e.fc[0])),_e.fc.pop()},sd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Bt()>>2]=28,-1;e=ve()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Ae(e,t){if(O)return Ve(1,1,e,t);re.unshift({Qc:e,ic:t})}function Oe(e){this.mc=e-16,this.jd=function(e){i()[this.mc+4>>2]=e},this.ed=function(e){i()[this.mc+8>>2]=e},this.gd=function(){i()[this.mc>>2]=0},this.dd=function(){t()[this.mc+12>>0]=0},this.hd=function(){t()[this.mc+13>>0]=0},this.Sc=function(e,t){this.jd(e),this.ed(t),this.gd(),this.dd(),this.hd()}}function Ee(e){if(O)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=_e.Rc();if(!t)return 6;if(void 0!==t.bc)throw\\\"Internal error!\\\";if(!e.tc)throw\\\"Internal error, no pthread ptr!\\\";_e.ec.push(t);for(var n=Yt(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.hc+e.jc,u=(r=_e.cc[e.tc]={worker:t,hc:e.hc,jc:e.jc,yc:e.yc,dc:e.tc}).dc>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.dc),Atomics.store(a(),u+20,e.jc),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.jc),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=nn()+40,Atomics.store(a(),u+43,n),t.bc=r;var c={cmd:\\\"run\\\",start_routine:e.kd,arg:e.ic,threadInfoStruct:e.tc,stackBase:e.hc,stackSize:e.jc};return t.oc=function(){c.time=performance.now(),t.postMessage(c,e.rd)},t.loaded&&(t.oc(),delete t.oc),0}function Se(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(_){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),hn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),hn>>2,0),-73;if(0==(a=Atomics.exchange(i(),hn>>2,0)))break;if(Jt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),hn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Te(){A||w||(M||(M={}),M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,D(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){ln(e,t),sn(e)},c.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ve=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:O?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Me={},xe=[null,[],[]];function ke(e,t){var n=xe[e];0===t||10===t?((1===e?k:D)(q(n,0)),n.length=0):n.push(t)}var De={};function Fe(e,t){return O?Ve(2,1,e,t):(e=V(e),De.wd(e,t))}function Re(e,t,n){return O?Ve(3,1,e,t,n):0}function Pe(e,t){if(O)return Ve(4,1,e,t)}function Ce(e,t,n){if(O)return Ve(5,1,e,t,n)}function je(e,t,n){return O?Ve(6,1,e,t,n):0}function Ie(e,t){if(O)return Ve(7,1,e,t)}function Ue(e,t){return O?Ve(8,1,e,t):(e=V(e),De.xd(e,t))}function Le(e,t,n,i,a,o){if(O)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=dn(65536,u))?r().fill(0,e,e+u):e=0,e?(Me[e]={Zc:e,Wc:t,Mc:!0,fd:a,Fd:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function We(e,t){if(O)e=Ve(10,1,e,t);else{var n=Me[e];0!==t&&n?(t===n.Wc&&(Me[e]=null,n.Mc&&Nt(n.Zc)),e=0):e=-28}return e}function He(e,t,n){if(O)return Ve(11,1,e,t,n)}function ze(e,t,n){return O?Ve(12,1,e,t,n):(e=V(e),De.yd(e,t,n))}function Ye(e){if(O)return Ve(13,1,e)}function Be(e,t){if(O)return Ve(14,1,e,t)}function Ne(e){if(O)return Ve(15,1,e)}function Ge(){if(O)return Ve(16,1);de()}var qe=[];function Ve(e,t){for(var n=arguments.length-2,r=cn(),i=fn(8*n),a=i>>3,o=0;o<n;o++){var c=arguments[2+o];u()[a+o]=c}return n=Qt(e,n,i,t),sn(r),n}var $e=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Je(e){return e=2<e?V(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Qe(e,t,n){var r=Je(e);if(!r)return-4;if(r.sc&&(i()[r.sc>>2]=t,i()[r.sc+4>>2]=n),!r.Gc&&r.ud){if(r.sc){r=i()[r.sc+8>>2],e=e?V(e):\\\"\\\";var a=cn(),o=fn(12),u=0;if(e){u=J(e)+1;var c=Yt(u);X(e,c,u),u=c}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Zt(0,r,657457152,0,u,o),sn(a),1}return-4}return r.Gc&&(r=r.Gc),e=!1,r.rc&&r.rc.qc&&(e=0===(e=r.rc.qc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.rc.qc.viewport(0,0,t,n),0}function Ze(e,t,n){return O?Ve(17,1,e,t,n):Qe(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=[\\\"nearest-neighbor\\\",\\\"linear\\\"],it=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),at=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ot=[\\\"zrn\\\",\\\"rzn\\\"];function ut(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ct(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function st(e){return{minValue:o()[e>>2],maxValue:o()[e+4>>2]}}function ft(e){return{alpha:o()[e>>2]}}function lt(e){return{type:it[a()[e>>2]],dimensions:ut(a()[e+8>>2],i()[e+4>>2])}}function dt(e){return{windowDimensions:ut(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?ut(a()[e+8>>2],i()[e+12>>2]):void 0,strides:ut(a()[e+16>>2],i()[e+20>>2]),dilations:ut(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var pt,ht,gt,mt,bt,yt,vt,_t,wt,At,Ot,Et={};function St(){if(!Ot){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Et)void 0===Et[e]?delete t[e]:t[e]=Et[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Ot=n}return Ot}function Tt(e,n){if(O)return Ve(18,1,e,n);var r=0;return St().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Mt(e,t){if(O)return Ve(19,1,e,t);var n=St();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function xt(e){return O?Ve(20,1,e):0}function kt(e,n){return O?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Dt(e,t,n,r){return O?Ve(22,1,e,t,n,r):(e=De.Ad(e),t=De.zd(e,t,n),i()[r>>2]=t,0)}function Ft(e,t,n,r,i){if(O)return Ve(23,1,e,t,n,r,i)}function Rt(e,t,n,a){if(O)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var c=i()[t+8*u>>2],s=i()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,r()[c+f]);o+=s}return i()[a>>2]=o,0}function Pt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(O)return Ve(25,1);if(!Pt.Nc){Pt.Nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[un()>>2]=60*o,i()[on()>>2]=Number(t!=a),n=e(n),r=e(r),n=Q(n),r=Q(r),a<t?(i()[an()>>2]=n,i()[an()+4>>2]=r):(i()[an()>>2]=r,i()[an()+4>>2]=n)}}function Ct(e){return 0==e%4&&(0!=e%100||0==e%400)}function jt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var It=[31,29,31,30,31,30,31,31,30,31,30,31],Ut=[31,28,31,30,31,30,31,31,30,31,30,31];function Lt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ct(e.getFullYear())?It:Ut)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Wt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Lt(new Date(e.ac+1900,0,1),e.xc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[a+40>>2];for(var d in a={pd:i()[a>>2],od:i()[a+4>>2],vc:i()[a+8>>2],pc:i()[a+12>>2],kc:i()[a+16>>2],ac:i()[a+20>>2],wc:i()[a+24>>2],xc:i()[a+28>>2],Jd:i()[a+32>>2],nd:i()[a+36>>2],qd:l?V(l):\\\"\\\"},r=V(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),l[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in l={\\\"%a\\\":function(e){return p[e.wc].substring(0,3)},\\\"%A\\\":function(e){return p[e.wc]},\\\"%b\\\":function(e){return h[e.kc].substring(0,3)},\\\"%B\\\":function(e){return h[e.kc]},\\\"%C\\\":function(e){return u((e.ac+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.pc,2)},\\\"%e\\\":function(e){return o(e.pc,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.vc,2)},\\\"%I\\\":function(e){return 0==(e=e.vc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.pc+jt(Ct(e.ac+1900)?It:Ut,e.kc-1),3)},\\\"%m\\\":function(e){return u(e.kc+1,2)},\\\"%M\\\":function(e){return u(e.od,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.vc&&12>e.vc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.pd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.wc||7},\\\"%U\\\":function(e){var t=new Date(e.ac+1900,0,1),n=0===t.getDay()?t:Lt(t,7-t.getDay());return 0>c(n,e=new Date(e.ac+1900,e.kc,e.pc))?u(Math.ceil((31-n.getDate()+(jt(Ct(e.getFullYear())?It:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.ac+1901,0,4),n=s(new Date(e.ac+1900,0,4));t=s(t);var r=Lt(new Date(e.ac+1900,0,1),e.xc);return 0>c(r,n)?\\\"53\\\":0>=c(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.ac+1900?e.xc+32-n.getDate():e.xc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.wc},\\\"%W\\\":function(e){var t=new Date(e.ac,0,1),n=1===t.getDay()?t:Lt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.ac+1900,e.kc,e.pc))?u(Math.ceil((31-n.getDate()+(jt(Ct(e.getFullYear())?It:Ut,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.ac+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ac+1900},\\\"%z\\\":function(e){var t=0<=(e=e.nd);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.qd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),l[d](a)));return(d=function(e){var t=Array(J(e)+1);return $(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}pt||(pt=pt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},ht=ht||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},gt=gt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},mt=mt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},bt=bt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},yt=yt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},vt=vt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},_t=_t||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},wt=wt||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}},At=At||{lc:{},$c:1,create:function(e,t){t=t||{};var n=this.$c++;return t.Ac=1,t.object=e,this.lc[n]=t,n},get:function(e){if(0!==e)return this.lc[e].object},nc:function(e){this.lc[e].Ac++},release:function(e){var t=this.lc[e];t.Ac--,0>=t.Ac&&delete this.lc[e]}});var Ht=[null,Ae,Fe,Re,Pe,Ce,je,Ie,Ue,Le,We,He,ze,Ye,Be,Ne,Ge,Ze,Tt,Mt,xt,kt,Dt,Ft,Rt,Pt],zt={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},cb:function(e,t){return we(e,t)},b:function(e){return Yt(e+16)+16},d:function(e,t){return Ae(e,t)},e:function(e,t){_e.Bc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Oe(e).Sc(t,n),e},J:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return D(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return D(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(O&&0===o.length)return Xt(687865856,e,t,n,r);var u=0,c=0;if(t&&-1!=t){var s=i()[t>>2];s+=81920,u=i()[t+8>>2],c=0!==i()[t+12>>2]}else s=2097152;(t=0==u)?u=dn(16,s):I(0<(u-=s));for(var f=Yt(228),l=0;57>l;++l)a()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={hc:u,jc:s,yc:t,detached:c,kd:n,tc:f,ic:r,rd:o},O?(n.td=\\\"spawnThread\\\",postMessage(n,o),0):Ee(n)},H:function(e){throw O?_e.Kc(e):(_e.Hc(),bn(e)),\\\"unwind\\\"},I:function(e,t){return function(e,t){if(!e)return D(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(O&&Gt()==e)return D(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!O&&$t()==e)return D(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return D(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return D(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Te();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),O?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ye(e),0;Kt(),O||Jt(),Se(e+0,n,O?100:1)}}(e,t)},A:Fe,y:Re,D:Pe,z:Ce,s:function(){return 42},_a:je,B:Ie,E:Ue,G:Le,F:We,q:He,fb:ze,db:Ye,t:Be,eb:Ne,Q:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(O)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=_e.cc[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ge,w:we,Va:function(e,t){return e-t},S:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},R:function(e,t,n){var a;for(qe.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,qe.push(a?u()[n++>>1]:i()[n]),++n;return ge[e].apply(null,qe)},Za:Te,n:function(){},k:Se,j:be,C:function(){return 2147483648},i:ve,Xa:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return A?n(87).cpus().length:navigator.hardwareConcurrency},M:function(e,t,n){$e.length=t,n>>=3;for(var r=0;r<t;r++)$e[r]=u()[n+r];return(0>e?ge[-e-1]:Ht[e]).apply(null,$e)},Ya:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-L.byteLength+65535>>>16),Z(R.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},O:function(e,t,n){return Je(e)?Qe(e,t,n):Ze(e,t,n)},v:function(){},L:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!j){try{e()}catch(e){if(e instanceof gn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&D(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{O?en(C):bn(C)}catch(e){if(!(e instanceof gn))throw e}}}((function(){ee.get(e)(n)}))}),t)},P:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Yc:i()[t+8],Dd:i()[t+9],Ec:i()[t+10],Pc:i()[t+11],Gd:i()[t+12],Hd:i()[t+13]},!(e=Je(e))||t.Pc?0:function(e,t){e.Fc||(e.Fc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.Fc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Yt(8);i()[n+4>>2]=Gt();var r={Bd:n,attributes:t,version:t.Yc,qc:e};return e.canvas&&(e.canvas.rc=r),(void 0===t.Ec||t.Ec)&&function(e){if(e||(e=void 0),!e.Tc){e.Tc=!0;var t=e.qc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.vd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.Ed=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ta:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),pt.create(navigator.ml.createContext(t))},ab:Tt,bb:Mt,l:xt,$a:kt,r:Dt,Wa:Ft,p:Rt,wa:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},gb:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.Dc||(e.Dc=Q(\\\"GMT\\\")),i()[n+40>>2]=e.Dc,n},K:function(){_e.Uc()},u:function(e,t){Pt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[an()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:R||c.wasmMemory,x:function(e){Pt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?c:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Sa:function(e){pt.nc(e)},Ra:function(e){pt.release(e)},Na:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=vt.get(n),n=e.add(t,n),vt.create(n)},Ma:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=dt(n),n=e.averagePool2d(t,n),vt.create(n)},La:function(e,t,n,r,a){return e=gt.get(e),t=vt.get(t),n=vt.get(n),r=vt.get(r),a={scale:vt.get(i()[a>>2]),bias:vt.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:wt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),vt.create(a)},Ka:function(e,t){e=gt.get(e),t=yt.get(t);try{var n=e.build(t);return ht.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ja:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=st(n),n=e.clamp(t,n),vt.create(n)},Ia:function(e,t){return e=gt.get(e),t=st(t),t=e.clamp(t),wt.create(t)},Ha:function(e,t,n,r){e=gt.get(e),t=ut(t,n),n=[];for(var i=0;i<t.length;++i)n.push(vt.get(t[i]));return r=e.concat(n,r),vt.create(r)},Ga:function(e,t,n){return e=gt.get(e),n=ct(n,(t=lt(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),vt.create(n)},Fa:function(e,t,n,r){return e=gt.get(e),t=vt.get(t),n=vt.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?ut(a()[r>>2],i()[r+4>>2]):void 0,strides:ut(a()[r+8>>2],i()[r+12>>2]),dilations:ut(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:vt.get(i()[r+60>>2]),activation:wt.get(i()[r+64>>2])},r=e.conv2d(t,n,r),vt.create(r)},Ea:function(e,n,r,a){return e=gt.get(e),n=vt.get(n),r=vt.get(r),a={c:vt.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),vt.create(a)},Da:function(e,n,r,a,o,u,c){return e=gt.get(e),n=vt.get(n),r=vt.get(r),a=vt.get(a),c={bias:vt.get(i()[c>>2]),recurrentBias:vt.get(i()[c+4>>2]),initialHiddenState:vt.get(i()[c+8>>2]),resetAfter:0!==t()[c+12>>0],returnSequence:0!==t()[c+13>>0],direction:at[i()[c+16>>2]],layout:ot[i()[c+20>>2]],activations:At.get(i()[c+24>>2])},o=e.gru(n,r,a,o,u,c),_t.create(o)},Ca:function(e,t,n){return e=gt.get(e),t=V(t),n=lt(n),n=e.input(t,n),vt.create(n)},Ba:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=ft(n),n=e.leakyRelu(t,n),vt.create(n)},Aa:function(e,t){return e=gt.get(e),t=ft(t),t=e.leakyRelu(t),wt.create(t)},za:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=vt.get(n),n=e.matmul(t,n),vt.create(n)},ya:function(e,t,n){return e=gt.get(e),t=vt.get(t),n=dt(n),n=e.maxPool2d(t,n),vt.create(n)},ma:function(e){gt.release(e)},xa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.relu(t),vt.create(t)},va:function(e){return e=gt.get(e).relu(),wt.create(e)},ua:function(e,t,n){e=gt.get(e),t=vt.get(t);var r=rt[i()[n>>2]],u=a()[n+4>>2],c=i()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:r,scales:u,sizes:ut(a()[n+12>>2],i()[n+16>>2]),axes:ut(a()[n+20>>2],i()[n+24>>2])},n=e.resample2d(t,n),vt.create(n)},ta:function(e,t,n,r){return e=gt.get(e),t=vt.get(t),n=ut(r,n),n=e.reshape(t,n),vt.create(n)},sa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.sigmoid(t),vt.create(t)},ra:function(e){return e=gt.get(e).sigmoid(),wt.create(e)},qa:function(e,t,n,r,o){if(e=gt.get(e),t=vt.get(t),0!==r&&0!==n){for(var u=[],c=0;c<r;++c,n+=4)u.push(a()[n>>2]);n=u}else n=void 0;return 1==r&&(n=n[0]),r={axis:i()[o>>2]},r=e.split(t,n,r),_t.create(r)},pa:function(e,t){return e=gt.get(e),t=vt.get(t),t=e.tanh(t),vt.create(t)},oa:function(e){return e=gt.get(e).tanh(),wt.create(e)},na:function(e,t,n){return e=gt.get(e),t=vt.get(t),n={permutation:ut(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),vt.create(n)},Qa:function(e,t,n){return e=ht.get(e),t=mt.get(t),n=bt.get(n),e.compute(t,n)},Pa:function(e){ht.nc(e)},Oa:function(e){ht.release(e)},ka:function(e){mt.release(e)},la:function(e,t,n){e=mt.get(e),t=V(t),n=0===i()[n+12>>2]?ct(n+0):{resource:ct(n+0),dimensions:ut(a()[n+16>>2],i()[n+12>>2])},e[t]=n},ia:function(e){yt.release(e)},ja:function(e,t,n){e=yt.get(e),t=V(t),n=vt.get(n),e[t]=n},ga:function(e){bt.release(e)},ha:function(e,t,n){e=bt.get(e),t=V(t),n=ct(n),e[t]=n},da:function(e,t){return e=_t.get(e)[t],vt.create(e)},ca:function(e){_t.release(e)},fa:function(e){vt.nc(e)},ea:function(e){vt.release(e)},Z:function(e){At.nc(e)},Y:function(e){At.release(e)},_:function(e,t){e=At.get(e),t=wt.get(t),e.push(t)},aa:function(e){wt.nc(e)},$:function(e){wt.release(e)},Ua:Wt,g:function(e,t,n,r){return Wt(e,t,n,r)},X:function(e){return e=pt.get(e),e=new MLGraphBuilder(e),gt.create(e)},W:function(){return mt.create({})},V:function(){return yt.create({})},U:function(){return bt.create({})},T:function(){return At.create([])}};!function(){function e(e,t){c.asm=e.exports,ee=c.asm.Cb,ne.unshift(c.asm.hb),_e.Cc.push(c.asm.Hb),P=t,O||(se--,c.monitorRunDependencies&&c.monitorRunDependencies(se),0==se&&(null!==fe&&(clearInterval(fe),fe=null),le&&(e=le,le=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(_||w)){if(\\\"function\\\"==typeof fetch&&!ce.startsWith(\\\"file://\\\"))return fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ce+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return he()}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){D(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:zt};if(O||(se++,c.monitorRunDependencies&&c.monitorRunDependencies(se)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return D(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(x||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||ce.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return D(\\\"wasm streaming compile failed: \\\"+e),D(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(f)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.hb).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.ib).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.jb).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.kb).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.lb).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.mb).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.nb).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.ob).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.pb).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.qb).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.rb).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.sb).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.tb).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.ub).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.vb).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.wb).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.xb).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.yb).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.zb).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm.Ab).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.Bb).apply(null,arguments)};var Yt=c._malloc=function(){return(Yt=c._malloc=c.asm.Db).apply(null,arguments)},Bt=c.___errno_location=function(){return(Bt=c.___errno_location=c.asm.Eb).apply(null,arguments)},Nt=c._free=function(){return(Nt=c._free=c.asm.Fb).apply(null,arguments)},Gt=c._pthread_self=function(){return(Gt=c._pthread_self=c.asm.Gb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.Hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.Ib).apply(null,arguments)};var qt,Vt=c._emscripten_register_main_browser_thread_id=function(){return(Vt=c._emscripten_register_main_browser_thread_id=c.asm.Jb).apply(null,arguments)},$t=c._emscripten_main_browser_thread_id=function(){return($t=c._emscripten_main_browser_thread_id=c.asm.Kb).apply(null,arguments)},Xt=c._emscripten_sync_run_in_main_thread_4=function(){return(Xt=c._emscripten_sync_run_in_main_thread_4=c.asm.Lb).apply(null,arguments)},Jt=c._emscripten_main_thread_process_queued_calls=function(){return(Jt=c._emscripten_main_thread_process_queued_calls=c.asm.Mb).apply(null,arguments)},Qt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Qt=c._emscripten_run_in_main_runtime_thread_js=c.asm.Nb).apply(null,arguments)},Zt=c.__emscripten_call_on_thread=function(){return(Zt=c.__emscripten_call_on_thread=c.asm.Ob).apply(null,arguments)},Kt=c._pthread_testcancel=function(){return(Kt=c._pthread_testcancel=c.asm.Pb).apply(null,arguments)},en=c._pthread_exit=function(){return(en=c._pthread_exit=c.asm.Qb).apply(null,arguments)},tn=c.__emscripten_thread_init=function(){return(tn=c.__emscripten_thread_init=c.asm.Rb).apply(null,arguments)},nn=c._emscripten_get_global_libc=function(){return(nn=c._emscripten_get_global_libc=c.asm.Sb).apply(null,arguments)},rn=c.___pthread_tsd_run_dtors=function(){return(rn=c.___pthread_tsd_run_dtors=c.asm.Tb).apply(null,arguments)},an=c.__get_tzname=function(){return(an=c.__get_tzname=c.asm.Ub).apply(null,arguments)},on=c.__get_daylight=function(){return(on=c.__get_daylight=c.asm.Vb).apply(null,arguments)},un=c.__get_timezone=function(){return(un=c.__get_timezone=c.asm.Wb).apply(null,arguments)},cn=c.stackSave=function(){return(cn=c.stackSave=c.asm.Xb).apply(null,arguments)},sn=c.stackRestore=function(){return(sn=c.stackRestore=c.asm.Yb).apply(null,arguments)},fn=c.stackAlloc=function(){return(fn=c.stackAlloc=c.asm.Zb).apply(null,arguments)},ln=c._emscripten_stack_set_limits=function(){return(ln=c._emscripten_stack_set_limits=c.asm._b).apply(null,arguments)},dn=c._memalign=function(){return(dn=c._memalign=c.asm.$b).apply(null,arguments)},pn=c.__emscripten_allow_main_runtime_queued_calls=999792,hn=c.__emscripten_main_thread_futex=1003796;function gn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function mn(){function e(){if(!qt&&(qt=!0,c.calledRun=!0,!j)&&(O||me(ne),s(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!O)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();ie.unshift(e)}me(ie)}}if(!(0<se))if(O)s(c),O||me(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!O){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ue();me(te)}0<se||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function bn(e){if(C=e,O)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new gn(e);oe()||(_e.Jc(),O||(me(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),xe[1].length&&ke(1,10),xe[2].length&&ke(2,10))),C=e,oe()||(_e.Jc(),c.onExit&&c.onExit(e),j=!0),h(e,new gn(e))}if(c.UTF8ToString=V,c.stringToUTF8=X,c.lengthBytesUTF8=J,c.keepRuntimeAlive=oe,c.PThread=_e,c.stackSave=cn,c.stackRestore=sn,c.stackAlloc=fn,c.PThread=_e,c.wasmMemory=R,c.ExitStatus=gn,le=function e(){qt||mn(),qt||(le=e)},c.run=mn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return O&&(F=!1,_e.Vc()),mn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,c,s,f,l,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,g=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";g?(m=h?n(622).dirname(m)+\\\"/\\\":__dirname+\\\"/\\\",u=function(e,t){return f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},s=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||G(\\\"Assertion failed: undefined\\\"),e},c=function(e,t,r){f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",G),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||h)&&(h?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(s=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),c=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,y=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(b=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&G(\\\"no native wasm support detected\\\");var _,w,A,O,E,S,T,M=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&x)return x.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function D(e,t){return e?k(O,e,t):\\\"\\\"}function F(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function R(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function P(e){var t=R(e)+1,n=Ie(t);return n&&F(e,A,n,t),n}function C(){var e=_.buffer;w=e,t.HEAP8=A=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=E=new Int32Array(e),t.HEAPU8=O=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=S=new Uint32Array(e),t.HEAPF32=T=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var j,I=[],U=[],L=[],W=[];function H(){var e=t.preRun.shift();I.unshift(e)}var z,Y=0,B=null,N=null;function G(e){throw t.onAbort&&t.onAbort(e),v(e),M=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function q(){return z.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},z=\\\"ort-wasm.wasm\\\",!q()){var V=z;z=t.locateFile?t.locateFile(V,m):m+V}function $(){var e=z;try{if(e==z&&b)return new Uint8Array(b);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){G(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.Hb;\\\"number\\\"==typeof r?void 0===n.xb?j.get(r)():j.get(r)(n.xb):r(void 0===n.xb?null:n.xb)}}}function J(e){this.zb=e-16,this.Rb=function(e){E[this.zb+4>>2]=e},this.Ob=function(e){E[this.zb+8>>2]=e},this.Pb=function(){E[this.zb>>2]=0},this.Nb=function(){A[this.zb+12>>0]=0},this.Qb=function(){A[this.zb+13>>0]=0},this.Jb=function(e,t){this.Rb(e),this.Ob(t),this.Pb(),this.Nb(),this.Qb()}}var Q,Z={},K=[null,[],[]],ee={};Q=g?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\"),oe=[\\\"forward\\\",\\\"backward\\\",\\\"both\\\"],ue=[\\\"zrn\\\",\\\"rzn\\\"];function ce(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(E[t>>2]);return n}}function se(e,t=\\\"float32\\\"){const n=E[e>>2]+S[e+8>>2];return e=S[e+4>>2],\\\"float32\\\"===t||G(\\\"Assertion failed: undefined\\\"),new Float32Array(O.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function fe(e){return{minValue:T[e>>2],maxValue:T[e+4>>2]}}function le(e){return{type:ae[S[e>>2]],dimensions:ce(S[e+8>>2],E[e+4>>2])}}function de(e){return{windowDimensions:ce(S[e>>2],E[e+4>>2]),padding:\\\"explicit\\\"===te[E[e+32>>2]]?ce(S[e+8>>2],E[e+12>>2]):void 0,strides:ce(S[e+16>>2],E[e+20>>2]),dilations:ce(S[e+24>>2],E[e+28>>2]),autoPad:te[E[e+32>>2]],layout:re[E[e+36>>2]]}}var pe,he,ge,me,be,ye,ve,_e,we,Ae,Oe,Ee,Se={};function Te(){if(!Oe){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in Se)void 0===Se[e]?delete t[e]:t[e]=Se[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Oe=n}return Oe}function Me(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!Ee){Ee=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);E[ze()>>2]=60*a,E[He()>>2]=Number(t!=i),n=e(n),r=e(r),n=P(n),r=P(r),i<t?(E[We()>>2]=n,E[We()+4>>2]=r):(E[We()>>2]=r,E[We()+4>>2]=n)}}function xe(e){return 0==e%4&&(0!=e%100||0==e%400)}function ke(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var De=[31,29,31,30,31,30,31,31,30,31,30,31],Fe=[31,28,31,30,31,30,31,31,30,31,30,31];function Re(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(xe(e.getFullYear())?De:Fe)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pe(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){e=Re(new Date(e.vb+1900,0,1),e.Eb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var s=E[r+40>>2];for(var f in r={Ub:E[r>>2],Tb:E[r+4>>2],Cb:E[r+8>>2],Bb:E[r+12>>2],wb:E[r+16>>2],vb:E[r+20>>2],Db:E[r+24>>2],Eb:E[r+28>>2],bc:E[r+32>>2],Sb:E[r+36>>2],Vb:s?D(s):\\\"\\\"},n=D(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),s[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in s={\\\"%a\\\":function(e){return l[e.Db].substring(0,3)},\\\"%A\\\":function(e){return l[e.Db]},\\\"%b\\\":function(e){return d[e.wb].substring(0,3)},\\\"%B\\\":function(e){return d[e.wb]},\\\"%C\\\":function(e){return a((e.vb+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.Bb,2)},\\\"%e\\\":function(e){return i(e.Bb,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return a(e.Cb,2)},\\\"%I\\\":function(e){return 0==(e=e.Cb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.Bb+ke(xe(e.vb+1900)?De:Fe,e.wb-1),3)},\\\"%m\\\":function(e){return a(e.wb+1,2)},\\\"%M\\\":function(e){return a(e.Tb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Cb&&12>e.Cb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Ub,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Db||7},\\\"%U\\\":function(e){var t=new Date(e.vb+1900,0,1),n=0===t.getDay()?t:Re(t,7-t.getDay());return 0>o(n,e=new Date(e.vb+1900,e.wb,e.Bb))?a(Math.ceil((31-n.getDate()+(ke(xe(e.getFullYear())?De:Fe,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.vb+1901,0,4),n=u(new Date(e.vb+1900,0,4));t=u(t);var r=Re(new Date(e.vb+1900,0,1),e.Eb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.vb+1900?e.Eb+32-n.getDate():e.Eb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Db},\\\"%W\\\":function(e){var t=new Date(e.vb,0,1),n=1===t.getDay()?t:Re(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.vb+1900,e.wb,e.Bb))?a(Math.ceil((31-n.getDate()+(ke(xe(e.getFullYear())?De:Fe,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.vb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.vb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Sb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Vb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),s[f](r)));return(f=function(e){var t=Array(R(e)+1);return F(e,t,0,t.length),t}(n)).length>t?0:(A.set(f,e),f.length-1)}pe||(pe=pe||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},he=he||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ge=ge||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},me=me||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},be=be||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ye=ye||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},ve=ve||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},_e=_e||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},we=we||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}},Ae=Ae||{yb:{},Mb:1,create:function(e,t){t=t||{};var n=this.Mb++;return t.Fb=1,t.object=e,this.yb[n]=t,n},get:function(e){if(0!==e)return this.yb[e].object},Ab:function(e){this.yb[e].Fb++},release:function(e){var t=this.yb[e];t.Fb--,0>=t.Fb&&delete this.yb[e]}});var Ce={a:function(e){return Ie(e+16)+16},c:function(e,t){L.unshift({Hb:e,xb:t})},f:function(e,t){L.unshift({Hb:e,xb:t})},b:function(e,t,n){throw new J(e).Jb(t,n),e},Q:function(e,t){return e=D(e),ee.Wb(e,t)},p:function(){return 0},T:function(){},P:function(){},t:function(){return 42},H:function(){return 0},R:function(){},U:function(e,t){return e=D(e),ee.Xb(e,t)},W:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=Ge(65536,e);o?(O.fill(0,o,o+e),e=o):e=0,e?(Z[e]={Lb:e,Kb:t,Ib:!0,fd:i,ac:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},V:function(e,t){var n=Z[e];return 0!==t&&n?(t===n.Kb&&(Z[e]=null,n.Ib&&Le(n.Lb)),e=0):e=-28,e},n:function(){},O:function(e,t,n){return e=D(e),ee.Yb(e,t,n)},M:function(){},u:function(){},N:function(){},k:function(){G()},B:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return E[Ue()>>2]=28,-1;e=Q()}return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e6|0,0},X:function(e,t){return e-t},Oa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Pa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Na:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return 2147483648},G:function(e,t,n){O.copyWithin(e,t,t+n)},m:function(e){var t=O.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-w.byteLength+65535>>>16),C();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},L:function(e){for(var t=Q();Q()-t<e;);},La:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][S[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][S[e+4>>2]]}),pe.create(navigator.ml.createContext(t))},J:function(e,t){var n=0;return Te().forEach((function(r,i){var a=t+n;for(i=E[e+4*i>>2]=a,a=0;a<r.length;++a)A[i++>>0]=r.charCodeAt(a);A[i>>0]=0,n+=r.length+1})),0},K:function(e,t){var n=Te();E[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),E[t>>2]=r,0},i:function(){return 0},I:function(e,t){return e=1==e||2==e?2:G(),A[t>>0]=e,0},r:function(e,t,n,r){return e=ee.$b(e),t=ee.Zb(e,t,n),E[r>>2]=t,0},F:function(){},s:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=E[t+8*a>>2],u=E[t+(8*a+4)>>2],c=0;c<u;c++){var s=O[o+c],f=K[e];0===s||10===s?((1===e?y:v)(k(f,0)),f.length=0):f.push(s)}i+=u}return E[r>>2]=i,0},ra:function(e){var t=Date.now();return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e3|0,0},da:function e(t,n){return t=new Date(1e3*E[t>>2]),E[n>>2]=t.getUTCSeconds(),E[n+4>>2]=t.getUTCMinutes(),E[n+8>>2]=t.getUTCHours(),E[n+12>>2]=t.getUTCDate(),E[n+16>>2]=t.getUTCMonth(),E[n+20>>2]=t.getUTCFullYear()-1900,E[n+24>>2]=t.getUTCDay(),E[n+36>>2]=0,E[n+32>>2]=0,E[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.Gb||(e.Gb=P(\\\"GMT\\\")),E[n+40>>2]=e.Gb,n},w:function(e,t){Me(),e=new Date(1e3*E[e>>2]),E[t>>2]=e.getSeconds(),E[t+4>>2]=e.getMinutes(),E[t+8>>2]=e.getHours(),E[t+12>>2]=e.getDate(),E[t+16>>2]=e.getMonth(),E[t+20>>2]=e.getFullYear()-1900,E[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);E[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,E[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),E[t+32>>2]=e,e=E[We()+(e?4:0)>>2],E[t+40>>2]=e,t},q:function(e){Me();var t=new Date(E[e+20>>2]+1900,E[e+16>>2],E[e+12>>2],E[e+8>>2],E[e+4>>2],E[e>>2],0),n=E[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?E[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),E[e+24>>2]=t.getDay(),E[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,E[e>>2]=t.getSeconds(),E[e+4>>2]=t.getMinutes(),E[e+8>>2]=t.getHours(),E[e+12>>2]=t.getDate(),E[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},E:function(e){pe.Ab(e)},D:function(e){pe.release(e)},Ia:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=ve.get(n),n=e.add(t,n),ve.create(n)},Ha:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=de(n),n=e.averagePool2d(t,n),ve.create(n)},Ga:function(e,t,n,r,i){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r=ve.get(r),i={scale:ve.get(E[i>>2]),bias:ve.get(E[i+4>>2]),axis:E[i+8>>2],epsilon:T[i+12>>2],activation:we.get(E[i+16>>2])},i=e.batchNormalization(t,n,r,i),ve.create(i)},Fa:function(e,t){e=ge.get(e),t=ye.get(t);try{var n=e.build(t);return he.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ea:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=e.clamp(t,fe(n)),ve.create(n)},Da:function(e,t){return e=ge.get(e).clamp(fe(t)),we.create(e)},Ca:function(e,t,n,r){e=ge.get(e),t=ce(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ve.get(t[i]));return r=e.concat(n,r),ve.create(r)},Ba:function(e,t,n){return e=ge.get(e),n=se(n,(t=le(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ve.create(n)},Aa:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r={padding:\\\"explicit\\\"===te[E[r+40>>2]]?ce(S[r>>2],E[r+4>>2]):void 0,strides:ce(S[r+8>>2],E[r+12>>2]),dilations:ce(S[r+16>>2],E[r+20>>2]),autoPad:te[E[r+40>>2]],groups:E[r+48>>2],inputLayout:re[E[r+52>>2]],filterLayout:ne[E[r+56>>2]],bias:ve.get(E[r+60>>2]),activation:we.get(E[r+64>>2])},r=e.conv2d(t,n,r),ve.create(r)},za:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r={c:ve.get(E[r>>2]),alpha:T[r+4>>2],beta:T[r+8>>2],aTranspose:0!==A[r+12>>0],bTranspose:0!==A[r+13>>0]},r=e.gemm(t,n,r),ve.create(r)},ya:function(e,t,n,r,i,a,o){return e=ge.get(e),t=ve.get(t),n=ve.get(n),r=ve.get(r),o={bias:ve.get(E[o>>2]),recurrentBias:ve.get(E[o+4>>2]),initialHiddenState:ve.get(E[o+8>>2]),resetAfter:0!==A[o+12>>0],returnSequence:0!==A[o+13>>0],direction:oe[E[o+16>>2]],layout:ue[E[o+20>>2]],activations:Ae.get(E[o+24>>2])},i=e.gru(t,n,r,i,a,o),_e.create(i)},xa:function(e,t,n){return e=ge.get(e),t=D(t),n=le(n),n=e.input(t,n),ve.create(n)},wa:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=e.leakyRelu(t,{alpha:T[n>>2]}),ve.create(n)},va:function(e,t){return e=ge.get(e).leakyRelu({alpha:T[t>>2]}),we.create(e)},ua:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=ve.get(n),n=e.matmul(t,n),ve.create(n)},ta:function(e,t,n){return e=ge.get(e),t=ve.get(t),n=de(n),n=e.maxPool2d(t,n),ve.create(n)},x:function(e){ge.release(e)},sa:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.relu(t),ve.create(t)},A:function(e){return e=ge.get(e).relu(),we.create(e)},qa:function(e,t,n){e=ge.get(e),t=ve.get(t);var r=ie[E[n>>2]],i=S[n+4>>2],a=E[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(T[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:ce(S[n+12>>2],E[n+16>>2]),axes:ce(S[n+20>>2],E[n+24>>2])},n=e.resample2d(t,n),ve.create(n)},pa:function(e,t,n,r){return e=ge.get(e),t=ve.get(t),n=ce(r,n),n=e.reshape(t,n),ve.create(n)},oa:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.sigmoid(t),ve.create(t)},z:function(e){return e=ge.get(e).sigmoid(),we.create(e)},na:function(e,t,n,r,i){if(e=ge.get(e),t=ve.get(t),0!==r&&0!==n){for(var a=[],o=0;o<r;++o,n+=4)a.push(S[n>>2]);n=a}else n=void 0;return 1==r&&(n=n[0]),r=e.split(t,n,{axis:E[i>>2]}),_e.create(r)},ma:function(e,t){return e=ge.get(e),t=ve.get(t),t=e.tanh(t),ve.create(t)},y:function(e){return e=ge.get(e).tanh(),we.create(e)},la:function(e,t,n){return e=ge.get(e),t=ve.get(t),n={permutation:ce(S[n>>2],E[n+4>>2])},n=e.transpose(t,n),ve.create(n)},Ka:function(e,t,n){return e=he.get(e),t=me.get(t),n=be.get(n),e.compute(t,n)},Ja:function(e){he.Ab(e)},C:function(e){he.release(e)},ja:function(e){me.release(e)},ka:function(e,t,n){e=me.get(e),t=D(t),n=0===E[n+12>>2]?se(n+0):{resource:se(n+0),dimensions:ce(S[n+16>>2],E[n+12>>2])},e[t]=n},ha:function(e){ye.release(e)},ia:function(e,t,n){e=ye.get(e),t=D(t),n=ve.get(n),e[t]=n},fa:function(e){be.release(e)},ga:function(e,t,n){e=be.get(e),t=D(t),n=se(n),e[t]=n},l:function(e,t){return e=_e.get(e)[t],ve.create(e)},v:function(e){_e.release(e)},e:function(e){ve.Ab(e)},d:function(e){ve.release(e)},ba:function(e){Ae.Ab(e)},o:function(e){Ae.release(e)},ca:function(e,t){e=Ae.get(e),t=we.get(t),e.push(t)},ea:function(e){we.Ab(e)},h:function(e){we.release(e)},Ma:Pe,g:function(e,t,n,r){return Pe(e,t,n,r)},aa:function(e){return e=pe.get(e),e=new MLGraphBuilder(e),ge.create(e)},$:function(){return me.create({})},_:function(){return ye.create({})},Z:function(){return be.create({})},Y:function(){return Ae.create([])}};!function(){function e(e){t.asm=e.exports,_=t.asm.Qa,C(),j=t.asm.ub,U.unshift(t.asm.Ra),Y--,t.monitorRunDependencies&&t.monitorRunDependencies(Y),0==Y&&(null!==B&&(clearInterval(B),B=null),N&&(e=N,N=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!b&&(p||h)){if(\\\"function\\\"==typeof fetch&&!z.startsWith(\\\"file://\\\"))return fetch(z,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+z+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return $()}));if(c)return new Promise((function(e,t){c(z,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return $()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){v(\\\"failed to asynchronously prepare wasm: \\\"+e),G(e)}))}var a={a:Ce};if(Y++,t.monitorRunDependencies&&t.monitorRunDependencies(Y),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return v(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(b||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||q()||z.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(z,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return v(\\\"wasm streaming compile failed: \\\"+e),v(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ra).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Sa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ta).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Ua).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Va).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Wa).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Xa).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.Ya).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Za).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm._a).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.$a).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.ab).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.bb).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.cb).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.db).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.eb).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.fb).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.gb).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.hb).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.ib).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.jb).apply(null,arguments)};var je,Ie=t._malloc=function(){return(Ie=t._malloc=t.asm.kb).apply(null,arguments)},Ue=t.___errno_location=function(){return(Ue=t.___errno_location=t.asm.lb).apply(null,arguments)},Le=t._free=function(){return(Le=t._free=t.asm.mb).apply(null,arguments)},We=t.__get_tzname=function(){return(We=t.__get_tzname=t.asm.nb).apply(null,arguments)},He=t.__get_daylight=function(){return(He=t.__get_daylight=t.asm.ob).apply(null,arguments)},ze=t.__get_timezone=function(){return(ze=t.__get_timezone=t.asm.pb).apply(null,arguments)},Ye=t.stackSave=function(){return(Ye=t.stackSave=t.asm.qb).apply(null,arguments)},Be=t.stackRestore=function(){return(Be=t.stackRestore=t.asm.rb).apply(null,arguments)},Ne=t.stackAlloc=function(){return(Ne=t.stackAlloc=t.asm.sb).apply(null,arguments)},Ge=t._memalign=function(){return(Ge=t._memalign=t.asm.tb).apply(null,arguments)};function qe(){function e(){if(!je&&(je=!0,t.calledRun=!0,!M)){if(X(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();W.unshift(e)}X(W)}}if(!(0<Y)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)H();X(I),0<Y||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=D,t.stringToUTF8=function(e,t,n){return F(e,O,t,n)},t.lengthBytesUTF8=R,t.stackSave=Ye,t.stackRestore=Be,t.stackAlloc=Ne,N=function e(){je||qe(),je||(N=e)},t.run=qe,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return qe(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,i,a){if(\\\"object\\\"==typeof e&&null!==e){if(i.has(e))throw new Error(\\\"Circular reference in options\\\");i.add(e)}Object.entries(e).forEach((function(e){var o=n(e,2),u=o[0],c=o[1],s=r?r+u:u;if(\\\"object\\\"==typeof c)t.iterateExtraOptions(c,s+\\\".\\\",i,a);else if(\\\"string\\\"==typeof c||\\\"number\\\"==typeof c)a(s,c.toString());else{if(\\\"boolean\\\"!=typeof c)throw new Error(\\\"Can't handle extra config type: \\\"+typeof c);a(s,c?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),i=n(983),a=n(361);t.setRunOptions=function(e){var t=a.getInstance(),n=0,o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var c=0;if(void 0!==(null==e?void 0:e.tag)&&(c=i.allocWasmString(e.tag,o)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,c)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var i=n(967),a=n(983),o=n(361);t.setSessionOptions=function(e){var t,n,u=o.getInstance(),c=0,s=[],f=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(f);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(f.graphOptimizationLevel=\\\"all\\\");var l=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(f.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(f.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(f.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(f.executionMode=\\\"sequential\\\");var d=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(f.executionMode),p=0;if(void 0!==(null==e?void 0:e.logId)&&(p=a.allocWasmString(e.logId,s)),void 0===(null==e?void 0:e.logSeverityLevel))f.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))f.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(f.enableProfiling=!1),0===(c=u._OrtCreateSessionOptions(l,!!f.enableCpuMemArena,!!f.enableMemPattern,d,!!f.enableProfiling,0,p,f.logSeverityLevel,f.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&i.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=a.allocWasmString(e,s),r=a.allocWasmString(t,s);if(0!==u._OrtAddSessionConfigEntry(c,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var h=r(e.executionProviders),g=h.next();!g.done;g=h.next()){var m=g.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof m?m:m.name)){var b=0;if(\\\"string\\\"!=typeof m){var y=m;(null==y?void 0:y.devicePreference)&&(b=y.devicePreference)}if(console.log(\\\"webnn device preference: \\\"+b),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(c,b))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{g&&!g.done&&(n=h.return)&&n.call(h)}finally{if(t)throw t.error}}return[c,s]}catch(e){throw 0!==c&&u._OrtReleaseSessionOptions(c),s.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var a=n(586),o=n(919),u=n(983),c=n(361);t.initOrt=function(e,t){var n=c.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var s=[];t.createSession=function(e,t){var n,i=c.getInstance(),a=i._malloc(e.byteLength),u=0,f=0,l=[];try{if(f=(n=r(o.setSessionOptions(t),2))[0],l=n[1],i.HEAPU8.set(e,a),0===(u=i._OrtCreateSession(a,e.byteLength,f)))throw new Error(\\\"Can't create a session\\\")}finally{i._free(a),i._OrtReleaseSessionOptions(f),l.forEach(i._free)}for(var d=i._OrtGetInputCount(u),p=i._OrtGetOutputCount(u),h=[],g=[],m=[],b=[],y=0;y<d;y++){var v=i._OrtGetInputName(u,y);if(0===v)throw new Error(\\\"Can't get an input name\\\");g.push(v),h.push(i.UTF8ToString(v))}for(y=0;y<p;y++){var _=i._OrtGetOutputName(u,y);if(0===_)throw new Error(\\\"Can't get an output name\\\");b.push(_),m.push(i.UTF8ToString(_))}return s.push([u,g,b]),[s.length-1,h,m]},t.releaseSession=function(e){var t=c.getInstance(),n=s[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),s[e]=void 0};var f=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},l=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,i,o){var d,p=c.getInstance(),h=s[e];if(!h)throw new Error(\\\"invalid session id\\\");var g=h[0],m=h[1],b=h[2],y=t.length,v=i.length,_=0,w=[],A=[],O=[];try{_=(d=r(a.setRunOptions(o),2))[0],w=d[1];for(var E=function(e){var t=n[e][0],r=n[e][1],i=n[e][2],a=void 0,o=void 0;if(Array.isArray(i)){o=4*i.length,a=p._malloc(o),O.push(a);for(var c=a/4,s=0;s<i.length;s++){if(\\\"string\\\"!=typeof i[s])throw new TypeError(\\\"tensor data at index \\\"+s+\\\" is not a string\\\");p.HEAPU32[c++]=u.allocWasmString(i[s],O)}}else o=i.byteLength,a=p._malloc(o),O.push(a),p.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,o),a);var f=p.stackSave(),l=p.stackAlloc(4*r.length);try{var d=l/4;r.forEach((function(e){return p.HEAP32[d++]=e}));var h=p._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),a,o,l,r.length);if(0===h)throw new Error(\\\"Can't create a tensor\\\");A.push(h)}finally{p.stackRestore(f)}},S=0;S<y;S++)E(S);var T=p.stackSave(),M=p.stackAlloc(4*y),x=p.stackAlloc(4*y),k=p.stackAlloc(4*v),D=p.stackAlloc(4*v);try{var F=M/4,R=x/4,P=k/4,C=D/4;for(S=0;S<y;S++)p.HEAPU32[F++]=A[S],p.HEAPU32[R++]=m[t[S]];for(S=0;S<v;S++)p.HEAPU32[P++]=0,p.HEAPU32[C++]=b[i[S]];var j=p._OrtRun(g,x,M,y,D,v,k,_),I=[];if(0===j)for(S=0;S<v;S++){var U=p.HEAPU32[k/4+S],L=p.stackSave(),W=p.stackAlloc(16),H=void 0,z=0;try{if(0!==(j=p._OrtGetTensorData(U,W,W+4,W+8,W+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+j);var Y=W/4,B=p.HEAPU32[Y++];z=p.HEAPU32[Y++];for(var N=p.HEAPU32[Y++],G=p.HEAPU32[Y++],q=[],V=0;V<G;V++)q.push(p.HEAPU32[N/4+V]);p._OrtFree(N);var $=0===q.length?1:q.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(H=f(B))){for(var X=[],J=z/4,Q=0;Q<$;Q++){var Z=p.HEAPU32[J++],K=Q===$-1?void 0:p.HEAPU32[J]-Z;X.push(p.UTF8ToString(Z,K))}I.push([H,q,X])}else{var ee=new(l(H))($);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(p.HEAPU8.subarray(z,z+ee.byteLength)),I.push([H,q,ee])}}finally{p.stackRestore(L),\\\"string\\\"===H&&z&&p._free(z),p._OrtReleaseTensor(U)}}if(0===j)return I;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+j+\\\".\\\")}finally{p.stackRestore(T)}}finally{A.forEach(p._OrtReleaseTensor),O.forEach(p._free),p._OrtReleaseRunOptions(_),w.forEach(p._free)}},t.endProfiling=function(e){var t=c.getInstance(),n=s[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var a=i(e),o=a.next();!o.done;o=a.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}c((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var s,f=a(n(622)),l=c(n(474)),d=c(n(932)),p=!1,h=!1,g=!1,m=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return o(void 0,void 0,void 0,(function(){var t,r,i,a,o,c,b,y,v,_,w;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(h)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(g)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return h=!0,t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),c=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,b=m(!1,a),y=m(o,a),v=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[y]:void 0,_=!1,w=[],t>0&&w.push(new Promise((function(e){setTimeout((function(){_=!0,e()}),t)}))),w.push(new Promise((function(e,t){var r=a?l.default:d.default,i={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===b?null!=v?v:(null!=c?c:t)+y:t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=f.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+l.default.toString()+\\\"})();\\\";i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(t){h=!1,p=!0,s=t,e()}),(function(e){h=!1,g=!0,t(e)}))}))),[4,Promise.race(w)];case 1:if(u.sent(),_)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(p&&s)return s;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!p||h||g||(h=!0,null===(e=s.PThread)||void 0===e||e.terminateAllThreads(),s=void 0,h=!1,p=!1,g=!0)}},747:function(e){\\\"use strict\\\";e.exports=require(\\\"fs\\\")},87:function(e){\\\"use strict\\\";e.exports=require(\\\"os\\\")},622:function(e){\\\"use strict\\\";e.exports=require(\\\"path\\\")},630:function(e){\\\"use strict\\\";e.exports=require(\\\"perf_hooks\\\")},13:function(e){\\\"use strict\\\";e.exports=require(\\\"worker_threads\\\")}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}!function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,i=r.numThreads,a=r.loggingLevel;e.initOrt(i,a),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var o=n.data.in,u=o.model,c=o.options,s=e.createSession(u,c);postMessage({type:\\\"create\\\",out:s})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var f=n.data.in;e.releaseSession(f),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var l=n.data.in,d=l.sessionId,p=l.inputIndices,h=l.inputs,g=l.outputIndices,m=(c=l.options,e.run(d,p,h,g,c));postMessage({type:\\\"run\\\",out:m},e.extractTransferableBuffers(m))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{f=n.data.in,e.endProfiling(f),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"perf_hooks\");;","module.exports = require(\"util\");;","module.exports = require(\"worker_threads\");;","module.exports = require(\"onnxruntime-common\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}